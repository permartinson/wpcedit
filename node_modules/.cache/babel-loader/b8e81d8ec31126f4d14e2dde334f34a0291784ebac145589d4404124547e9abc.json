{"ast":null,"code":"import { DataParser } from \"./classes/DataParser.js\";\nimport { DmdDecoder } from \"./classes/DmdDecoder.js\";\nimport { Settings } from \"./stores/Settings.js\";\nimport { VariableSizedImageData } from \"./stores/VariableSizedImageData.js\";\nimport { FullFrameImageData } from \"./stores/FullFrameImageData.js\";\nimport { ROM } from \"./stores/ROM.js\";\nimport { DataTypes } from \"./resources/Constants.js\";\nimport { toHex } from \"./resources/Helpers.js\";\nimport { Checksum } from \"./classes/Checksum.js\";\nexport class WPCEdit {\n  constructor(mode = 1) {\n    WPCEdit.currentMode = mode;\n    Settings.DataType = mode;\n    Settings.init();\n    FullFrameImageData.init();\n    VariableSizedImageData.init();\n  }\n  static init(mode = 1) {\n    if (WPCEdit.instance) {\n      return this.instance;\n    }\n    this.instance = new WPCEdit(mode);\n    return this.instance;\n  }\n  static reloadData() {\n    if (DataParser.initTableAddrs() != 0) {\n      console.warn(\"Could not determine data table location in ROM image\");\n    }\n    switch (this.currentMode) {\n      case DataTypes.Graphics:\n        FullFrameImageData.CurrentImageIndex = 0;\n        break;\n      case DataTypes.FontData:\n      case DataTypes.AniData:\n        if (DataParser.preAnalyzeVariableSizedImageTable() == -1) {\n          console.warn(\"Error from DataParser.preAnalyzeVariableSizedImageTable()\");\n          return;\n        }\n        VariableSizedImageData.CurrentTableIndex = VariableSizedImageData.minTableIndex;\n        VariableSizedImageData.CurrentImageIndex = DataParser.getFirstImageIndex(VariableSizedImageData.CurrentTableIndex);\n        if (VariableSizedImageData.CurrentImageIndex == -1) {\n          console.warn(\"Error setting up first image index\");\n          return;\n        }\n        if (FullFrameImageData.TableAddress != 0) {}\n        break;\n      default:\n        console.warn(\"Unexpected error, dataType should have already been validated.\");\n    }\n    return true;\n  }\n  static goForward(steps) {\n    DmdDecoder.decodeNextIndex(steps);\n  }\n  static goBackward(steps) {\n    DmdDecoder.decodePreviousIndex(steps);\n  }\n  static setMode(mode) {\n    Settings.DataType = mode;\n    this.currentMode = mode;\n    if (ROM.data != undefined) {\n      if (this.reloadData()) {\n        return true;\n      } else {\n        console.warn(\"Error setting DMD decode mode\");\n        return;\n      }\n    }\n  }\n  static setRom(data) {\n    ROM.data = data;\n    if (this.reloadData()) {\n      return true;\n    } else {\n      console.warn(\"Error loading game rom.\");\n      return;\n    }\n  }\n  static set rom(data) {\n    this.setRom(data);\n  }\n  static get mode() {\n    return this.currentMode;\n  }\n  static set mode(mode) {\n    this.setMode(mode);\n  }\n  static get currentImage() {\n    if (this.currentMode != 1) {\n      DmdDecoder.decodeVariableSizedImageIndexToPlane(VariableSizedImageData.CurrentTableIndex, VariableSizedImageData.CurrentImageIndex);\n      DmdDecoder.decodeVariableSizedImageData();\n      return VariableSizedImageData.Planes.Plane0.Plane_Data;\n    }\n    DmdDecoder.decodeFullFrameGraphic(FullFrameImageData.CurrentImageIndex);\n    return FullFrameImageData.Planes.Plane0.Plane_Data;\n  }\n  static get verbose() {\n    return Settings.VerboseMode;\n  }\n  static set verbose(state) {\n    Settings.VerboseMode = state;\n  }\n  static getChecksum() {\n    console.log(\"stored checksum: \" + toHex(Checksum.stored));\n    console.log(\"stored delta: \" + toHex(Checksum.delta));\n    console.log(\"calculatedchecksum: \" + toHex(Checksum.calculated));\n    console.log(\"update:\");\n    const newRom = Checksum.update(13, 5032, true);\n    if (newRom) {\n      this.setRom(newRom);\n    }\n    console.log(\"stored checksum: \" + toHex(Checksum.stored));\n    console.log(\"stored delta: \" + toHex(Checksum.delta));\n    console.log(\"calculatedchecksum: \" + toHex(Checksum.calculated));\n  }\n}\n;","map":{"version":3,"names":["DataParser","DmdDecoder","Settings","VariableSizedImageData","FullFrameImageData","ROM","DataTypes","toHex","Checksum","WPCEdit","constructor","mode","currentMode","DataType","init","instance","reloadData","initTableAddrs","console","warn","Graphics","CurrentImageIndex","FontData","AniData","preAnalyzeVariableSizedImageTable","CurrentTableIndex","minTableIndex","getFirstImageIndex","TableAddress","goForward","steps","decodeNextIndex","goBackward","decodePreviousIndex","setMode","data","undefined","setRom","rom","currentImage","decodeVariableSizedImageIndexToPlane","decodeVariableSizedImageData","Planes","Plane0","Plane_Data","decodeFullFrameGraphic","verbose","VerboseMode","state","getChecksum","log","stored","delta","calculated","newRom","update"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/node_modules/wpcedit/dist/src/WPCEdit.js"],"sourcesContent":["import { DataParser } from \"./classes/DataParser.js\";\nimport { DmdDecoder } from \"./classes/DmdDecoder.js\";\nimport { Settings } from \"./stores/Settings.js\";\nimport { VariableSizedImageData } from \"./stores/VariableSizedImageData.js\";\nimport { FullFrameImageData } from \"./stores/FullFrameImageData.js\";\nimport { ROM } from \"./stores/ROM.js\";\nimport { DataTypes } from \"./resources/Constants.js\";\nimport { toHex } from \"./resources/Helpers.js\";\nimport { Checksum } from \"./classes/Checksum.js\";\nexport class WPCEdit {\n    constructor(mode = 1) {\n        WPCEdit.currentMode = mode;\n        Settings.DataType = mode;\n        Settings.init();\n        FullFrameImageData.init();\n        VariableSizedImageData.init();\n    }\n    static init(mode = 1) {\n        if (WPCEdit.instance) {\n            return this.instance;\n        }\n        this.instance = new WPCEdit(mode);\n        return this.instance;\n    }\n    static reloadData() {\n        if (DataParser.initTableAddrs() != 0) {\n            console.warn(\"Could not determine data table location in ROM image\");\n        }\n        switch (this.currentMode) {\n            case DataTypes.Graphics:\n                FullFrameImageData.CurrentImageIndex = 0;\n                break;\n            case DataTypes.FontData:\n            case DataTypes.AniData:\n                if (DataParser.preAnalyzeVariableSizedImageTable() == -1) {\n                    console.warn(\"Error from DataParser.preAnalyzeVariableSizedImageTable()\");\n                    return;\n                }\n                VariableSizedImageData.CurrentTableIndex = VariableSizedImageData.minTableIndex;\n                VariableSizedImageData.CurrentImageIndex = DataParser.getFirstImageIndex(VariableSizedImageData.CurrentTableIndex);\n                if (VariableSizedImageData.CurrentImageIndex == -1) {\n                    console.warn(\"Error setting up first image index\");\n                    return;\n                }\n                if (FullFrameImageData.TableAddress != 0) {\n                }\n                break;\n            default:\n                console.warn(\"Unexpected error, dataType should have already been validated.\");\n        }\n        return true;\n    }\n    static goForward(steps) {\n        DmdDecoder.decodeNextIndex(steps);\n    }\n    static goBackward(steps) {\n        DmdDecoder.decodePreviousIndex(steps);\n    }\n    static setMode(mode) {\n        Settings.DataType = mode;\n        this.currentMode = mode;\n        if (ROM.data != undefined) {\n            if (this.reloadData()) {\n                return true;\n            }\n            else {\n                console.warn(\"Error setting DMD decode mode\");\n                return;\n            }\n        }\n    }\n    static setRom(data) {\n        ROM.data = data;\n        if (this.reloadData()) {\n            return true;\n        }\n        else {\n            console.warn(\"Error loading game rom.\");\n            return;\n        }\n    }\n    static set rom(data) {\n        this.setRom(data);\n    }\n    static get mode() {\n        return this.currentMode;\n    }\n    static set mode(mode) {\n        this.setMode(mode);\n    }\n    static get currentImage() {\n        if (this.currentMode != 1) {\n            DmdDecoder.decodeVariableSizedImageIndexToPlane(VariableSizedImageData.CurrentTableIndex, VariableSizedImageData.CurrentImageIndex);\n            DmdDecoder.decodeVariableSizedImageData();\n            return VariableSizedImageData.Planes.Plane0.Plane_Data;\n        }\n        DmdDecoder.decodeFullFrameGraphic(FullFrameImageData.CurrentImageIndex);\n        return FullFrameImageData.Planes.Plane0.Plane_Data;\n    }\n    static get verbose() {\n        return Settings.VerboseMode;\n    }\n    static set verbose(state) {\n        Settings.VerboseMode = state;\n    }\n    static getChecksum() {\n        console.log(\"stored checksum: \" + toHex(Checksum.stored));\n        console.log(\"stored delta: \" + toHex(Checksum.delta));\n        console.log(\"calculatedchecksum: \" + toHex(Checksum.calculated));\n        console.log(\"update:\");\n        const newRom = Checksum.update(13, 5032, true);\n        if (newRom) {\n            this.setRom(newRom);\n        }\n        console.log(\"stored checksum: \" + toHex(Checksum.stored));\n        console.log(\"stored delta: \" + toHex(Checksum.delta));\n        console.log(\"calculatedchecksum: \" + toHex(Checksum.calculated));\n    }\n}\n;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}