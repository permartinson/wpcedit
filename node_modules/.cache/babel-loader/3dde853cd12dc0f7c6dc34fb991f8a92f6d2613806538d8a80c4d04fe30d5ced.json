{"ast":null,"code":"\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n  try {\n    try {\n      var blob;\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","map":{"version":3,"names":["module","exports","content","workerConstructor","workerOptions","url","globalScope","self","window","blob","Blob","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","URL","webkitURL","objectURL","createObjectURL","worker","revokeObjectURL","concat","encodeURIComponent","Error"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/node_modules/worker-loader/dist/runtime/inline.js"],"sourcesContent":["\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};"],"mappings":"AAAA,YAAY;;AAEZ;;AAEA;AACAA,MAAM,CAACC,OAAO,GAAG,UAAUC,OAAO,EAAEC,iBAAiB,EAAEC,aAAa,EAAEC,GAAG,EAAE;EACzE,IAAIC,WAAW,GAAGC,IAAI,IAAIC,MAAM;EAEhC,IAAI;IACF,IAAI;MACF,IAAIC,IAAI;MAER,IAAI;QACF;QACAA,IAAI,GAAG,IAAIH,WAAW,CAACI,IAAI,CAAC,CAACR,OAAO,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOS,CAAC,EAAE;QACV;QACA,IAAIC,WAAW,GAAGN,WAAW,CAACM,WAAW,IAAIN,WAAW,CAACO,iBAAiB,IAAIP,WAAW,CAACQ,cAAc,IAAIR,WAAW,CAACS,aAAa;QACrIN,IAAI,GAAG,IAAIG,WAAW,EAAE;QACxBH,IAAI,CAACO,MAAM,CAACd,OAAO,CAAC;QACpBO,IAAI,GAAGA,IAAI,CAACQ,OAAO,EAAE;MACvB;MAEA,IAAIC,GAAG,GAAGZ,WAAW,CAACY,GAAG,IAAIZ,WAAW,CAACa,SAAS;MAClD,IAAIC,SAAS,GAAGF,GAAG,CAACG,eAAe,CAACZ,IAAI,CAAC;MACzC,IAAIa,MAAM,GAAG,IAAIhB,WAAW,CAACH,iBAAiB,CAAC,CAACiB,SAAS,EAAEhB,aAAa,CAAC;MACzEc,GAAG,CAACK,eAAe,CAACH,SAAS,CAAC;MAC9B,OAAOE,MAAM;IACf,CAAC,CAAC,OAAOX,CAAC,EAAE;MACV,OAAO,IAAIL,WAAW,CAACH,iBAAiB,CAAC,CAAC,8BAA8B,CAACqB,MAAM,CAACC,kBAAkB,CAACvB,OAAO,CAAC,CAAC,EAAEE,aAAa,CAAC;IAC9H;EACF,CAAC,CAAC,OAAOO,CAAC,EAAE;IACV,IAAI,CAACN,GAAG,EAAE;MACR,MAAMqB,KAAK,CAAC,gCAAgC,CAAC;IAC/C;IAEA,OAAO,IAAIpB,WAAW,CAACH,iBAAiB,CAAC,CAACE,GAAG,EAAED,aAAa,CAAC;EAC/D;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}