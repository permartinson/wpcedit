{"ast":null,"code":"import FileDrop from '../components/ui/FileDrop.vue';\nimport FeatureButton from '../components/ui/buttons/FeatureButton.vue';\nimport DisclaimerModal from '../components/ui/modals/DisclaimerModal.vue';\nimport CheckBox from '../components/ui/CheckBox.vue';\nimport AlertDialog from '../components/ui/modals/AlertDialog.vue';\nimport StandardButton from '../components/ui/buttons/StandardButton.vue';\nimport store from \"../stores/store.js\";\nimport { useAppState } from '../stores/appState.js';\nimport { useWpcEditStore } from '../stores/wpcEditStore.js';\nimport { storeToRefs } from 'pinia';\nconst AppState = useAppState(store);\nconst WpcEditStore = useWpcEditStore(store);\nexport default {\n  name: 'HomeView',\n  components: {\n    FileDrop,\n    FeatureButton,\n    DisclaimerModal,\n    CheckBox,\n    AlertDialog,\n    StandardButton\n  },\n  props: {},\n  data() {\n    return {\n      showDisclaimer: false,\n      tempFile: null,\n      showError: false,\n      errorMessage: ''\n    };\n  },\n  setup() {\n    const {\n      romIsLoaded,\n      warnings\n    } = storeToRefs(WpcEditStore);\n    return {\n      romIsLoaded,\n      warnings\n    };\n  },\n  beforeRouteEnter() {\n    AppState.setViewTitle(\"WPC Edit\");\n    AppState.isAtHomeView = true;\n  },\n  methods: {\n    loadRom(file) {\n      if (this.warnings.load < 1) {\n        this.tempFile = file;\n        this.showDisclaimer = true;\n        this.$emit('modal', {\n          type: 'mask'\n        });\n      } else {\n        this.readBytes(file);\n      }\n    },\n    agreeClicked() {\n      if (this.tempFile != null) {\n        this.readBytes(this.tempFile);\n      }\n      this.warnings.load++;\n      this.showDisclaimer = false;\n    },\n    disagreeClicked() {\n      this.tempFile = null;\n      this.showDisclaimer = false;\n    },\n    okClicked() {\n      this.showDisclaimer = false;\n    },\n    readBytes(file) {\n      const reader = new FileReader();\n      reader.addEventListener(\"loadend\", function () {\n        if (reader.result) {\n          const bytes = new Uint8Array(reader.result);\n          if (!WpcEditStore.loadRom(bytes, file.name)) {\n            // need to add more cases here:\n            this.errorMessage = \"It seems like the file is not a valid WPC ROM file\";\n            this.showError = true;\n          }\n        }\n      });\n      reader.readAsArrayBuffer(file);\n    }\n  }\n};","map":{"version":3,"mappings":"AAuBI,OAAOA,QAAO,MAAO,+BAA+B;AACpD,OAAOC,aAAY,MAAO,4CAA4C;AACtE,OAAOC,eAAc,MAAO,6CAA6C;AACzE,OAAOC,QAAO,MAAO,+BAA+B;AACpD,OAAOC,WAAU,MAAO,yCAAyC;AACjE,OAAOC,cAAa,MAAO,6CAA6C;AACxE,OAAOC,KAAI,MAAO,oBAAoB;AACtC,SAASC,WAAU,QAAS,uBAAuB;AACnD,SAASC,eAAc,QAAS,2BAA2B;AAC3D,SAASC,WAAU,QAAS,OAAO;AAEnC,MAAMC,QAAO,GAAIH,WAAW,CAACD,KAAK,CAAC;AACnC,MAAMK,YAAW,GAAIH,eAAe,CAACF,KAAK,CAAC;AAE3C,eAAe;EACbM,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACVb,QAAQ;IACRC,aAAa;IACbC,eAAe;IACfC,QAAQ;IACRC,WAAW;IACXC;EACF,CAAC;EACDS,KAAK,EAAE,CACP,CAAC;EACDC,IAAI,GAAG;IACH,OAAO;MACLC,cAAc,EAAE,KAAK;MACrBC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE;IAChB;EACJ,CAAC;EACDC,KAAK,GAAG;IACN,MAAM;MAAEC,WAAW;MAAEC;IAAS,IAAIb,WAAW,CAACE,YAAY,CAAC;IAC3D,OAAO;MACLU,WAAW;MACXC;IACF;EACF,CAAC;EACDC,gBAAgB,GAAG;IACjBb,QAAQ,CAACc,YAAY,CAAC,UAAU,CAAC;IACjCd,QAAQ,CAACe,YAAW,GAAI,IAAI;EAC9B,CAAC;EACDC,OAAO,EAAE;IACPC,OAAO,CAACC,IAAI,EAAE;MACZ,IAAG,IAAI,CAACN,QAAQ,CAACO,IAAG,GAAI,CAAC,EAAE;QACzB,IAAI,CAACZ,QAAO,GAAIW,IAAI;QACpB,IAAI,CAACZ,cAAa,GAAI,IAAI;QAC1B,IAAI,CAACc,KAAK,CAAC,OAAO,EAAC;UAACC,IAAI,EAAC;QAAM,CAAC,CAAC;MACnC,OAAO;QACL,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;MACtB;IACF,CAAC;IACDK,YAAY,GAAG;MACb,IAAG,IAAI,CAAChB,QAAO,IAAK,IAAI,EAAE;QACxB,IAAI,CAACe,SAAS,CAAC,IAAI,CAACf,QAAQ,CAAC;MAC/B;MACA,IAAI,CAACK,QAAQ,CAACO,IAAI,EAAE;MACpB,IAAI,CAACb,cAAa,GAAI,KAAK;IAC7B,CAAC;IACDkB,eAAe,GAAG;MAChB,IAAI,CAACjB,QAAO,GAAI,IAAI;MACpB,IAAI,CAACD,cAAa,GAAI,KAAK;IAC7B,CAAC;IACDmB,SAAS,GAAG;MACV,IAAI,CAACnB,cAAa,GAAI,KAAK;IAC7B,CAAC;IACDgB,SAAS,CAACJ,IAAI,EAAE;MACd,MAAMQ,MAAK,GAAI,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,gBAAgB,CAAC,SAAS,EAAE,YAAW;QAC1C,IAAIF,MAAM,CAACG,MAAM,EAAE;UACjB,MAAMC,KAAI,GAAI,IAAIC,UAAU,CAACL,MAAM,CAACG,MAAM,CAAC;UAC3C,IAAG,CAAC5B,YAAY,CAACgB,OAAO,CAACa,KAAK,EAAEZ,IAAI,CAAChB,IAAI,CAAC,EAAE;YAC1C;YACA,IAAI,CAACO,YAAW,GAAI,oDAAoD;YACxE,IAAI,CAACD,SAAQ,GAAI,IAAI;UACvB;QACF;MACJ,CAAC,CAAC;MACFkB,MAAM,CAACM,iBAAiB,CAACd,IAAI,CAAC;IAChC;EACF;AACF","names":["FileDrop","FeatureButton","DisclaimerModal","CheckBox","AlertDialog","StandardButton","store","useAppState","useWpcEditStore","storeToRefs","AppState","WpcEditStore","name","components","props","data","showDisclaimer","tempFile","showError","errorMessage","setup","romIsLoaded","warnings","beforeRouteEnter","setViewTitle","isAtHomeView","methods","loadRom","file","load","$emit","type","readBytes","agreeClicked","disagreeClicked","okClicked","reader","FileReader","addEventListener","result","bytes","Uint8Array","readAsArrayBuffer"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div>\nÂ¨    <div v-if=\"romIsLoaded\" class=\"navigation\">\n        <FeatureButton icon=\"fullframe\" @click=\"this.$router.push('/fullframe')\">Full frame graphics</FeatureButton>\n        <FeatureButton icon=\"sprites\" @click=\"this.$router.push('/sprites')\">Sprites and fonts</FeatureButton>\n        <FeatureButton icon=\"checksum\" @click=\"this.$router.push('/checksum')\">Checksum tool</FeatureButton>\n        <FeatureButton icon=\"settings\" @click=\"this.$router.push('/settings')\">Settings</FeatureButton>\n    </div>\n    <FileDrop v-if=\"!romIsLoaded\" @loaded=\"loadRom\"></FileDrop>\n    <DisclaimerModal :show=\"showDisclaimer\" @agree=\"agreeClicked\" @disagree=\"disagreeClicked\"></DisclaimerModal>\n    <AlertDialog :show=\"showError\" title=\"Error loading the ROM\">\n        <p class=\"body-sm\">{{ errorMessage }}</p>\n        <CheckBox @change=\"checkboxClicked\" :checked=\"false\" label=\"Don't show this warning again\" ref=\"alertCheck\"></CheckBox>\n        <div class=\"alert-footer\">\n          <StandardButton type=\"primary\" @click=\"okClicked\" class=\"alert-ok-btn\">OK</StandardButton>\n        </div>\n    </AlertDialog>\n    <DisclaimerModal :show=\"showDisclaimer\" @agree=\"agreeClicked\" @disagree=\"disagreeClicked\"></DisclaimerModal>\n\n  </div>\n</template>\n  \n<script>\n    import FileDrop from '../components/ui/FileDrop.vue';\n    import FeatureButton from '../components/ui/buttons/FeatureButton.vue';\n    import DisclaimerModal from '../components/ui/modals/DisclaimerModal.vue';\n    import CheckBox from '../components/ui/CheckBox.vue';\n    import AlertDialog from '../components/ui/modals/AlertDialog.vue';\n    import StandardButton from '../components/ui/buttons/StandardButton.vue';\n    import store from \"../stores/store.js\";\n    import { useAppState } from '../stores/appState.js';\n    import { useWpcEditStore } from '../stores/wpcEditStore.js';\n    import { storeToRefs } from 'pinia';\n\n    const AppState = useAppState(store);\n    const WpcEditStore = useWpcEditStore(store);\n\n    export default {\n      name: 'HomeView',\n      components: {\n        FileDrop,\n        FeatureButton,\n        DisclaimerModal,\n        CheckBox,\n        AlertDialog,\n        StandardButton\n      },\n      props: {\n      },\n      data() {\n          return {\n            showDisclaimer: false,\n            tempFile: null,\n            showError: false,\n            errorMessage: ''\n          }\n      },\n      setup() {\n        const { romIsLoaded, warnings } = storeToRefs(WpcEditStore);\n        return {\n          romIsLoaded,\n          warnings\n        }\n      },\n      beforeRouteEnter() {\n        AppState.setViewTitle(\"WPC Edit\");\n        AppState.isAtHomeView = true;\n      },\n      methods: {\n        loadRom(file) {\n          if(this.warnings.load < 1) {\n            this.tempFile = file;\n            this.showDisclaimer = true;\n            this.$emit('modal',{type:'mask'});\n          } else {\n            this.readBytes(file);\n          }\n        },\n        agreeClicked() {\n          if(this.tempFile != null) {\n            this.readBytes(this.tempFile);\n          }\n          this.warnings.load++;\n          this.showDisclaimer = false;\n        },\n        disagreeClicked() {\n          this.tempFile = null;\n          this.showDisclaimer = false;\n        },\n        okClicked() {\n          this.showDisclaimer = false;\n        },\n        readBytes(file) {\n          const reader = new FileReader();\n          reader.addEventListener(\"loadend\", function() {\n              if (reader.result) {\n                const bytes = new Uint8Array(reader.result);\n                if(!WpcEditStore.loadRom(bytes, file.name)) {\n                  // need to add more cases here:\n                  this.errorMessage = \"It seems like the file is not a valid WPC ROM file\";\n                  this.showError = true;\n                }\n              }\n          });\n          reader.readAsArrayBuffer(file);\n        },\n      }\n    }\n  \n  </script>\n  \n  <style scoped>\n  .navigation {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin-top: var(--space-xl);\n  }\n  .navigation a {\n    text-decoration: none;\n  }\n  .alert-ok-btn {\n    width: 12rem;\n    margin: 0 auto;\n  }\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}