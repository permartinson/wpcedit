{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"input\", {\n    type: \"file\",\n    ref: \"romfile\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.loaded && $options.loaded(...args))\n  }, null, 544);\n}","map":{"version":3,"mappings":";;uBACIA,oBAAoD;IAA7CC,IAAI,EAAC,MAAM;IAACC,GAAG,EAAC,SAAS;IAAEC,QAAM,yCAAEC,2CAAM","names":["_createElementBlock","type","ref","onChange","$options"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/ui/FileDrop.vue"],"sourcesContent":["<template>\n    <input type=\"file\" ref=\"romfile\" @change=\"loaded\" />\n</template>\n\n<script>\nexport default {\n  name: 'FileDrop',\n  props: {\n  },\n  methods: {\n    loaded() {\n        const file = this.$refs.romfile.files[0];\n        this.$emit('loaded',file);\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}