{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dmd-container\"\n};\nconst _hoisted_2 = {\n  ref: \"dmd\",\n  width: \"512\",\n  height: \"128\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"canvas\", _hoisted_2, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;AAAe;;EACdC,GAAG,EAAC,KAAK;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;uBADzCC,oBAEM,OAFNC,UAEM,GADFC,oBAAoD,UAApDC,UAAoD","names":["class","ref","width","height","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/dmd/SubDmd.vue"],"sourcesContent":["<template>\n    <div class=\"dmd-container\">\n        <canvas ref=\"dmd\" width=\"512\" height=\"128\"></canvas>\n    </div> \n</template>\n\n<script>\n\nexport default {\n  name: 'SubDmd',\n  props: {\n    plane: Uint8Array,\n  },\n  methods: {\n    drawImage() {\n        const DOT_SIZE = 4;\n        const canvas = this.$refs.dmd;\n        const ctx = canvas.getContext(\"2d\");\n        for(let i=0; i<128*32; i++) {\n            const dotX = (i % 128) * DOT_SIZE + DOT_SIZE/2;\n            const dotY = Math.floor(i / 128) * DOT_SIZE + DOT_SIZE/2;\n            const dotVal = this.getDotValue(this.plane,i);\n            ctx.beginPath();\n            ctx.arc(dotX, dotY, DOT_SIZE/2*0.9, 0, 2 * Math.PI, false);\n            ctx.fillStyle = `rgba(220, 133, 33, ${dotVal*205 + 50})`;\n            ctx.fill();\n        }\n    },\n    getDotValue(plane0Data,index) {\n        const width = 128;\n        const col = index % width;\n        const byte = Math.floor(index/8);\n        const bitPos = (col % 8);\n        const bit =  ( plane0Data[byte] & 0xFF ) >>(bitPos) & 1;\n        return bit;\n    }\n  },\n  mounted() {\n    this.drawImage();\n  },\n  updated() {\n    this.drawImage();\n  }\n}\n\n</script>\n\n<style>\n\n.dmd-container {\n    margin-top: 100px;\n}\n\n.dmd-canvas {\n    width: 936px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}