{"ast":null,"code":"'use strict';\n\nconst path = require('path');\nconst matchRelativePath = /^\\.\\.?[/\\\\]/;\nfunction isAbsolutePath(str) {\n  return path.posix.isAbsolute(str) || path.win32.isAbsolute(str);\n}\nfunction isRelativePath(str) {\n  return matchRelativePath.test(str);\n}\nfunction stringifyRequest(loaderContext, request) {\n  const splitted = request.split('!');\n  const context = loaderContext.context || loaderContext.options && loaderContext.options.context;\n  return JSON.stringify(splitted.map(part => {\n    // First, separate singlePath from query, because the query might contain paths again\n    const splittedPart = part.match(/^(.*?)(\\?.*)/);\n    const query = splittedPart ? splittedPart[2] : '';\n    let singlePath = splittedPart ? splittedPart[1] : part;\n    if (isAbsolutePath(singlePath) && context) {\n      singlePath = path.relative(context, singlePath);\n      if (isAbsolutePath(singlePath)) {\n        // If singlePath still matches an absolute path, singlePath was on a different drive than context.\n        // In this case, we leave the path platform-specific without replacing any separators.\n        // @see https://github.com/webpack/loader-utils/pull/14\n        return singlePath + query;\n      }\n      if (isRelativePath(singlePath) === false) {\n        // Ensure that the relative path starts at least with ./ otherwise it would be a request into the modules directory (like node_modules).\n        singlePath = './' + singlePath;\n      }\n    }\n    return singlePath.replace(/\\\\/g, '/') + query;\n  }).join('!'));\n}\nmodule.exports = stringifyRequest;","map":{"version":3,"names":["path","require","matchRelativePath","isAbsolutePath","str","posix","isAbsolute","win32","isRelativePath","test","stringifyRequest","loaderContext","request","splitted","split","context","options","JSON","stringify","map","part","splittedPart","match","query","singlePath","relative","replace","join","module","exports"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/node_modules/worker-loader/node_modules/loader-utils/lib/stringifyRequest.js"],"sourcesContent":["'use strict';\n\nconst path = require('path');\n\nconst matchRelativePath = /^\\.\\.?[/\\\\]/;\n\nfunction isAbsolutePath(str) {\n  return path.posix.isAbsolute(str) || path.win32.isAbsolute(str);\n}\n\nfunction isRelativePath(str) {\n  return matchRelativePath.test(str);\n}\n\nfunction stringifyRequest(loaderContext, request) {\n  const splitted = request.split('!');\n  const context =\n    loaderContext.context ||\n    (loaderContext.options && loaderContext.options.context);\n\n  return JSON.stringify(\n    splitted\n      .map((part) => {\n        // First, separate singlePath from query, because the query might contain paths again\n        const splittedPart = part.match(/^(.*?)(\\?.*)/);\n        const query = splittedPart ? splittedPart[2] : '';\n        let singlePath = splittedPart ? splittedPart[1] : part;\n\n        if (isAbsolutePath(singlePath) && context) {\n          singlePath = path.relative(context, singlePath);\n\n          if (isAbsolutePath(singlePath)) {\n            // If singlePath still matches an absolute path, singlePath was on a different drive than context.\n            // In this case, we leave the path platform-specific without replacing any separators.\n            // @see https://github.com/webpack/loader-utils/pull/14\n            return singlePath + query;\n          }\n\n          if (isRelativePath(singlePath) === false) {\n            // Ensure that the relative path starts at least with ./ otherwise it would be a request into the modules directory (like node_modules).\n            singlePath = './' + singlePath;\n          }\n        }\n\n        return singlePath.replace(/\\\\/g, '/') + query;\n      })\n      .join('!')\n  );\n}\n\nmodule.exports = stringifyRequest;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5B,MAAMC,iBAAiB,GAAG,aAAa;AAEvC,SAASC,cAAc,CAACC,GAAG,EAAE;EAC3B,OAAOJ,IAAI,CAACK,KAAK,CAACC,UAAU,CAACF,GAAG,CAAC,IAAIJ,IAAI,CAACO,KAAK,CAACD,UAAU,CAACF,GAAG,CAAC;AACjE;AAEA,SAASI,cAAc,CAACJ,GAAG,EAAE;EAC3B,OAAOF,iBAAiB,CAACO,IAAI,CAACL,GAAG,CAAC;AACpC;AAEA,SAASM,gBAAgB,CAACC,aAAa,EAAEC,OAAO,EAAE;EAChD,MAAMC,QAAQ,GAAGD,OAAO,CAACE,KAAK,CAAC,GAAG,CAAC;EACnC,MAAMC,OAAO,GACXJ,aAAa,CAACI,OAAO,IACpBJ,aAAa,CAACK,OAAO,IAAIL,aAAa,CAACK,OAAO,CAACD,OAAQ;EAE1D,OAAOE,IAAI,CAACC,SAAS,CACnBL,QAAQ,CACLM,GAAG,CAAEC,IAAI,IAAK;IACb;IACA,MAAMC,YAAY,GAAGD,IAAI,CAACE,KAAK,CAAC,cAAc,CAAC;IAC/C,MAAMC,KAAK,GAAGF,YAAY,GAAGA,YAAY,CAAC,CAAC,CAAC,GAAG,EAAE;IACjD,IAAIG,UAAU,GAAGH,YAAY,GAAGA,YAAY,CAAC,CAAC,CAAC,GAAGD,IAAI;IAEtD,IAAIjB,cAAc,CAACqB,UAAU,CAAC,IAAIT,OAAO,EAAE;MACzCS,UAAU,GAAGxB,IAAI,CAACyB,QAAQ,CAACV,OAAO,EAAES,UAAU,CAAC;MAE/C,IAAIrB,cAAc,CAACqB,UAAU,CAAC,EAAE;QAC9B;QACA;QACA;QACA,OAAOA,UAAU,GAAGD,KAAK;MAC3B;MAEA,IAAIf,cAAc,CAACgB,UAAU,CAAC,KAAK,KAAK,EAAE;QACxC;QACAA,UAAU,GAAG,IAAI,GAAGA,UAAU;MAChC;IACF;IAEA,OAAOA,UAAU,CAACE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,GAAGH,KAAK;EAC/C,CAAC,CAAC,CACDI,IAAI,CAAC,GAAG,CAAC,CACb;AACH;AAEAC,MAAM,CAACC,OAAO,GAAGnB,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}