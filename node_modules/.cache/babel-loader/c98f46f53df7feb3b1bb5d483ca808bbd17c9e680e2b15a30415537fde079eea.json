{"ast":null,"code":"import BaseModal from './BaseModal.vue';\nimport ModalHeader from './ModalHeader.vue';\nimport MainDmd from '../../dmd/MainDmd.vue';\nimport SubDmd from '../../dmd/SubDmd.vue';\nimport store from \"../../../stores/store.js\";\nimport { useWpcEditStore } from '../../../stores/wpcEditStore.js';\nconst WpcEditStore = useWpcEditStore(store);\nexport default {\n  name: 'SpriteModal',\n  components: {\n    BaseModal,\n    ModalHeader,\n    MainDmd,\n    SubDmd\n  },\n  setup() {},\n  data() {\n    return {\n      doBlend: true,\n      doMerge0: false,\n      doMerge1: false,\n      blendOffset: 1,\n      merge0Offset: 2,\n      merge1Offset: 3\n    };\n  },\n  props: {\n    show: Boolean,\n    index: Number\n  },\n  methods: {\n    setBlendStatus(state) {\n      if (state == true) {\n        this.doBlend = true;\n      } else if (state == false) {\n        this.doBlend = false;\n      }\n    },\n    setMerge0Status(state) {\n      if (state == true) {\n        this.doMerge0 = true;\n      } else if (state == false) {\n        this.doMerge0 = false;\n      }\n    },\n    setMerge1Status(state) {\n      if (state == true) {\n        this.doMerge1 = true;\n      } else if (state == false) {\n        this.doMerge1 = false;\n      }\n    },\n    goToNextBlendPlane() {\n      this.blendOffset++;\n    },\n    goToPrevBlendPlane() {\n      this.blendOffset--;\n    },\n    goToNextMerge0Plane() {\n      this.merge0Offset++;\n    },\n    goToPrevMerge0Plane() {\n      this.merge0Offset--;\n    },\n    goToNextMerge1Plane() {\n      this.merge1Offset++;\n    },\n    goToPrevMerge1Plane() {\n      this.merge1Offset--;\n    },\n    computed: {\n      plane0() {\n        return this.mainPlane();\n      },\n      plane1() {\n        if (this.doBlend) {\n          return this.blendPlane();\n        }\n        return this.mainPlane();\n      },\n      mainPlane() {\n        if (this.doMerge0) {\n          console.log(\"merge0\");\n          const plane = WpcEditStore.getFullFrameImageAt(this.index);\n          const merge = WpcEditStore.getFullFrameImageAt(this.index + this.merge0Offset);\n          return WpcEditStore.mergePlanes(plane, merge);\n        }\n        return WpcEditStore.getFullFrameImageAt(this.index).image;\n      },\n      blendPlane() {\n        if (this.doMerge1) {\n          console.log(\"merge1\");\n          const plane = WpcEditStore.getFullFrameImageAt(this.index + this.blendOffset);\n          const merge = WpcEditStore.getFullFrameImageAt(this.index + this.merge1Offset);\n          return WpcEditStore.mergePlanes(plane, merge);\n        }\n        return WpcEditStore.getFullFrameImageAt(this.index + this.blendOffset).image;\n      },\n      merge0Plane() {\n        return WpcEditStore.getFullFrameImageAt(this.index + this.merge0Offset).image;\n      },\n      merge1Plane() {\n        return WpcEditStore.getFullFrameImageAt(this.index + this.merge1Offset).image;\n      }\n    }\n  },\n  updated() {\n    // reset the values (or get from a store when that ha been implemented)\n    this.doBlend = true;\n    this.doMerge0 = false;\n    this.doMerge1 = false;\n    this.blendOffset = 1;\n    this.merge0Offset = 2;\n    this.merge1Offset = 3;\n  }\n};","map":{"version":3,"mappings":"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","names":["BaseModal","ModalHeader","MainDmd","SubDmd","store","useWpcEditStore","WpcEditStore","name","components","setup","data","doBlend","doMerge0","doMerge1","blendOffset","merge0Offset","merge1Offset","props","show","Boolean","index","Number","methods","setBlendStatus","state","setMerge0Status","setMerge1Status","goToNextBlendPlane","goToPrevBlendPlane","goToNextMerge0Plane","goToPrevMerge0Plane","goToNextMerge1Plane","goToPrevMerge1Plane","computed","plane0","mainPlane","plane1","blendPlane","console","log","plane","getFullFrameImageAt","merge","mergePlanes","image","merge0Plane","merge1Plane","updated"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/ui/modals/FullFrameModal.vue"],"sourcesContent":["<template>\n    <BaseModal :show=\"show\" class=\"modal-mask\" @close=\"$emit('close')\">\n        <ModalHeader :stepBtns=\"true\" :closeBtn=\"true\" title=\"Test title\" @close=\"$emit('close')\"></ModalHeader>\n        <div class=\"modal-body\">\n            <MainDmd :plane0=\"plane0()\" :plane1=\"plane1()\"></MainDmd>\n            <div class=\"sub-dmds blend\">\n                <SubDmd\n                    class=\"plane plane0\"\n                    title=\"This plane, index\"\n                    :plane=\"mainPlane()\">\n                </SubDmd>\n                <SubDmd\n                    class=\"plane plane1\"\n                    checkbox=\"Blend with index \"\n                    :plane=\"blendPlane()\"\n                    :isEnabled=\"this.doBlend\"\n                    :navBtns=\"true\"\n                    @next=\"goToNextBlendPlane()\"\n                    @prev=\"goToPrevBlendPlane()\"\n                    @enabled=\"setBlendStatus\">\n                </SubDmd>\n            </div>\n            <div class=\"sub-dmds merge\">\n                <SubDmd\n                class=\"plane plane1\"\n                    checkbox=\"Merge with index \"\n                    :plane=\"merge0Plane()\"\n                    :isEnabled=\"this.doMerge0\"\n                    :navBtns=\"true\"\n                    @next=\"goToNextMerge0Plane()\"\n                    @prev=\"goToPrevMerge0Plane()\"\n                    @enabled=\"setMerge0Status\">\n                </SubDmd>\n                <SubDmd\n                    class=\"plane plane1\"\n                    checkbox=\"Merge with index \"\n                    :plane=\"merge1Plane()\"\n                    :isEnabled=\"this.doMerge1\"\n                    :navBtns=\"true\"\n                    @next=\"goToNextMerge1Plane()\"\n                    @prev=\"goToPrevMerge1Plane()\"\n                    @enabled=\"setMerge1Status\">\n                </SubDmd>\n            </div>\n        </div>\n    </BaseModal>\n</template>\n\n<script>\nimport BaseModal from './BaseModal.vue';\nimport ModalHeader from './ModalHeader.vue';\nimport MainDmd from '../../dmd/MainDmd.vue';\nimport SubDmd from '../../dmd/SubDmd.vue';\nimport store from \"../../../stores/store.js\";\nimport { useWpcEditStore } from '../../../stores/wpcEditStore.js'\n\nconst WpcEditStore = useWpcEditStore(store);\n\nexport default {\n    name: 'SpriteModal',\n    components: { \n        BaseModal,\n        ModalHeader,\n        MainDmd,\n        SubDmd\n    },\n    setup() {\n    },\n    data() {\n        return {\n            doBlend: true,\n            doMerge0: false,\n            doMerge1: false,\n            blendOffset: 1,\n            merge0Offset: 2,\n            merge1Offset: 3\n        }\n    },\n    props: {\n        show: Boolean,\n        index: Number\n    },\n    methods: {\n         setBlendStatus(state) {\n            if(state == true) {\n                this.doBlend = true;\n            } else if(state == false) {\n                this.doBlend = false;\n            }\n        },\n        setMerge0Status(state) {\n            if(state == true) {\n                this.doMerge0 = true;\n            } else if(state == false) {\n                this.doMerge0 = false;\n            }\n        },\n        setMerge1Status(state) {\n            if(state == true) {\n                this.doMerge1 = true;\n            } else if(state == false) {\n                this.doMerge1 = false;\n            }\n        },\n        goToNextBlendPlane() {\n            this.blendOffset++;\n        },\n        goToPrevBlendPlane() {\n            this.blendOffset--;\n        },\n        goToNextMerge0Plane() {\n            this.merge0Offset++;\n        },\n        goToPrevMerge0Plane() {\n            this.merge0Offset--;\n        },\n        goToNextMerge1Plane() {\n            this.merge1Offset++;\n        },\n        goToPrevMerge1Plane() {\n            this.merge1Offset--;\n        },\n    computed: {\n        plane0() {\n            return this.mainPlane();\n        },\n        plane1() {\n            if(this.doBlend) {\n                return this.blendPlane();\n            }\n            return this.mainPlane();\n        },\n        mainPlane() {\n            if(this.doMerge0) {\n                console.log(\"merge0\")\n                const plane = WpcEditStore.getFullFrameImageAt(this.index);\n                const merge = WpcEditStore.getFullFrameImageAt(this.index+this.merge0Offset);\n                return WpcEditStore.mergePlanes(plane,merge);\n            }\n            return WpcEditStore.getFullFrameImageAt(this.index).image;\n        },\n        blendPlane() {\n            if(this.doMerge1) {\n                console.log(\"merge1\")\n                const plane = WpcEditStore.getFullFrameImageAt(this.index+this.blendOffset);\n                const merge = WpcEditStore.getFullFrameImageAt(this.index+this.merge1Offset);\n                return WpcEditStore.mergePlanes(plane,merge);\n            }\n            return WpcEditStore.getFullFrameImageAt(this.index+this.blendOffset).image;\n        },\n        merge0Plane() {\n            return WpcEditStore.getFullFrameImageAt(this.index+this.merge0Offset).image;\n        },\n        merge1Plane() {\n            return WpcEditStore.getFullFrameImageAt(this.index+this.merge1Offset).image;\n        },\n    }\n    },\n    updated() {\n        // reset the values (or get from a store when that ha been implemented)\n        this.doBlend = true;\n        this.doMerge0 = false;\n        this.doMerge1 = false;\n        this.blendOffset = 1;\n        this.merge0Offset = 2;\n        this.merge1Offset = 3;\n    }\n}\n</script>\n\n<style scoped>\n.sub-dmds {\n    margin-top: var(--space-md);\n    display: grid;\n    gap: var(--space-md);\n    grid-template-columns: 1fr 1fr;\n}\n.plane {\n    justify-self: left;\n}\n.modal-body {\n    margin: 0 var(--space-md);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}