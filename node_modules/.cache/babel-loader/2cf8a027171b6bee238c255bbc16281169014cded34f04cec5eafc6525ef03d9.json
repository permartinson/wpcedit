{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { WPCEdit } from 'wpcedit';\nexport const useWpcEditStore = defineStore('wpcEditStore', {\n  state: () => {\n    return {\n      romIsLoaded: false,\n      viewTitle: 'WPC Edit',\n      isAtHomeView: true,\n      currSpriteIndex: 0,\n      currSpriteTableIndex: 0,\n      currentRomData: null\n    };\n  },\n  getters: {\n    maxFullFrameIndex: state => {\n      console.log(state);\n      return 1000; //TEMP! Get value from ROM!\n    },\n\n    maxSpriteTable: () => {\n      return 64; //TEMP! Get value from ROM!\n    },\n\n    maxSpriteIndexInCurrentTable: () => {\n      return 1208; //TEMP! Get value from ROM!\n    }\n  },\n\n  actions: {\n    loadRom(data) {\n      WPCEdit.init();\n      WPCEdit.rom = data;\n      this.romIsLoaded = true;\n      this.currentRomData = data;\n    },\n    getFullFrameImageAt(index) {\n      WPCEdit.fullFrameImage.index = index;\n      return WPCEdit.fullFrameImage.plane;\n    },\n    getSpriteAt(table, index) {\n      const indexDelta = index - WPCEdit.variableSizedImage.index;\n      if (indexDelta < 0) {\n        WPCEdit.variableSizedImage.prev(Math.abs(indexDelta));\n      } else {\n        WPCEdit.variableSizedImage.next(indexDelta);\n      }\n      //this.currSpriteIndex = index;\n\n      //WPCEdit.variableSizedImage.next(indexDelta);\n      console.log(table + \" \" + index);\n\n      /* implement a pattern like this in WPCEdit.js\n      /* ===========================================\n      const indexDelta = index - this.currSpriteIndex;\n      if(indexDelta < 0) {\n          WPCEdit.variableSizedImage.prev(Math.abs(indexDelta))\n      } else {\n          WPCEdit.variableSizedImage.next(indexDelta);\n      }\n      this.currSpriteIndex = index;\n      */\n\n      return WPCEdit.variableSizedImage.plane;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","WPCEdit","useWpcEditStore","state","romIsLoaded","viewTitle","isAtHomeView","currSpriteIndex","currSpriteTableIndex","currentRomData","getters","maxFullFrameIndex","console","log","maxSpriteTable","maxSpriteIndexInCurrentTable","actions","loadRom","data","init","rom","getFullFrameImageAt","index","fullFrameImage","plane","getSpriteAt","table","indexDelta","variableSizedImage","prev","Math","abs","next"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/stores/wpcEditStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport { WPCEdit } from 'wpcedit';\n\nexport const useWpcEditStore = defineStore('wpcEditStore', {\n    state: () => {\n        return {\n            romIsLoaded: false,\n            viewTitle: 'WPC Edit',\n            isAtHomeView: true,\n            currSpriteIndex: 0,\n            currSpriteTableIndex: 0,\n            currentRomData: null\n        }\n    },\n    getters: {\n        maxFullFrameIndex: (state) => {\n            console.log(state);\n            return 1000; //TEMP! Get value from ROM!\n        },\n        maxSpriteTable: () => {\n            return 64; //TEMP! Get value from ROM!\n        },\n        maxSpriteIndexInCurrentTable: () => {\n            return 1208; //TEMP! Get value from ROM!\n        },\n    },\n    actions: {\n        loadRom(data) {\n            WPCEdit.init();\n            WPCEdit.rom = data;\n            this.romIsLoaded = true;\n            this.currentRomData = data;\n        },\n        getFullFrameImageAt(index) {\n            WPCEdit.fullFrameImage.index = index;\n            return WPCEdit.fullFrameImage.plane;\n        },\n        getSpriteAt(table,index) {\n            \n            const indexDelta = index - WPCEdit.variableSizedImage.index;\n            if(indexDelta < 0) {\n                WPCEdit.variableSizedImage.prev(Math.abs(indexDelta))\n            } else {\n                WPCEdit.variableSizedImage.next(indexDelta);\n            }\n            //this.currSpriteIndex = index;\n\n            \n            \n            //WPCEdit.variableSizedImage.next(indexDelta);\n            console.log(table+ \" \"+index);\n\n\n\n\n\n\n            /* implement a pattern like this in WPCEdit.js\n            /* ===========================================\n            const indexDelta = index - this.currSpriteIndex;\n            if(indexDelta < 0) {\n                WPCEdit.variableSizedImage.prev(Math.abs(indexDelta))\n            } else {\n                WPCEdit.variableSizedImage.next(indexDelta);\n            }\n            this.currSpriteIndex = index;\n            */\n\n            return WPCEdit.variableSizedImage.plane;\n        }\n    }\n})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,OAAO,QAAQ,SAAS;AAEjC,OAAO,MAAMC,eAAe,GAAGF,WAAW,CAAC,cAAc,EAAE;EACvDG,KAAK,EAAE,MAAM;IACT,OAAO;MACHC,WAAW,EAAE,KAAK;MAClBC,SAAS,EAAE,UAAU;MACrBC,YAAY,EAAE,IAAI;MAClBC,eAAe,EAAE,CAAC;MAClBC,oBAAoB,EAAE,CAAC;MACvBC,cAAc,EAAE;IACpB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,iBAAiB,EAAGR,KAAK,IAAK;MAC1BS,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;MAClB,OAAO,IAAI,CAAC,CAAC;IACjB,CAAC;;IACDW,cAAc,EAAE,MAAM;MAClB,OAAO,EAAE,CAAC,CAAC;IACf,CAAC;;IACDC,4BAA4B,EAAE,MAAM;MAChC,OAAO,IAAI,CAAC,CAAC;IACjB;EACJ,CAAC;;EACDC,OAAO,EAAE;IACLC,OAAO,CAACC,IAAI,EAAE;MACVjB,OAAO,CAACkB,IAAI,EAAE;MACdlB,OAAO,CAACmB,GAAG,GAAGF,IAAI;MAClB,IAAI,CAACd,WAAW,GAAG,IAAI;MACvB,IAAI,CAACK,cAAc,GAAGS,IAAI;IAC9B,CAAC;IACDG,mBAAmB,CAACC,KAAK,EAAE;MACvBrB,OAAO,CAACsB,cAAc,CAACD,KAAK,GAAGA,KAAK;MACpC,OAAOrB,OAAO,CAACsB,cAAc,CAACC,KAAK;IACvC,CAAC;IACDC,WAAW,CAACC,KAAK,EAACJ,KAAK,EAAE;MAErB,MAAMK,UAAU,GAAGL,KAAK,GAAGrB,OAAO,CAAC2B,kBAAkB,CAACN,KAAK;MAC3D,IAAGK,UAAU,GAAG,CAAC,EAAE;QACf1B,OAAO,CAAC2B,kBAAkB,CAACC,IAAI,CAACC,IAAI,CAACC,GAAG,CAACJ,UAAU,CAAC,CAAC;MACzD,CAAC,MAAM;QACH1B,OAAO,CAAC2B,kBAAkB,CAACI,IAAI,CAACL,UAAU,CAAC;MAC/C;MACA;;MAIA;MACAf,OAAO,CAACC,GAAG,CAACa,KAAK,GAAE,GAAG,GAACJ,KAAK,CAAC;;MAO7B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAEY,OAAOrB,OAAO,CAAC2B,kBAAkB,CAACJ,KAAK;IAC3C;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}