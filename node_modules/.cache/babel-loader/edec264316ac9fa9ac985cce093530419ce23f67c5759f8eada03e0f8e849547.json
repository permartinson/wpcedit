{"ast":null,"code":"import { DataTypes, WPC } from \"../resources/Constants.js\";\nimport { DmdDecoder } from \"./DmdDecoder.js\";\nimport { FullFrameImageData } from \"../stores/FullFrameImageData.js\";\nexport class FullFrameImage {\n  static init() {\n    if (FullFrameImage.instance) {\n      return this.instance;\n    }\n    this.instance = new FullFrameImage();\n    return this.instance;\n  }\n  constructor() {\n    FullFrameImageData.init();\n  }\n  prev(steps) {\n    DmdDecoder.decodePreviousIndex(steps, DataTypes.Graphics);\n  }\n  next(steps) {\n    DmdDecoder.decodeNextIndex(steps, DataTypes.Graphics);\n  }\n  get minImageIndex() {\n    return 0;\n  }\n  get maxImageIndex() {\n    let countInvalidEncodings = 0;\n    let index = 900;\n    while (countInvalidEncodings < 4) {\n      const encoding = DmdDecoder.getImageEncoding(index);\n      if (!WPC.ValidEncodings.includes(encoding)) {\n        countInvalidEncodings++;\n      }\n    }\n    return index - 3;\n  }\n  set index(index) {\n    FullFrameImageData.CurrentImageIndex = Math.max(0, index);\n  }\n  get index() {\n    return FullFrameImageData.CurrentImageIndex;\n  }\n  get plane() {\n    FullFrameImage._getCurrent();\n    return FullFrameImage.currentPlane;\n  }\n  getPlaneAt(index) {\n    FullFrameImageData.CurrentImageIndex = Math.max(0, index);\n    FullFrameImage._getCurrent();\n    return FullFrameImage.currentPlane;\n  }\n  static _getCurrent() {\n    DmdDecoder.decodeFullFrameGraphic(FullFrameImageData.CurrentImageIndex);\n    FullFrameImage.currentPlane.image = FullFrameImageData.Planes.Plane0.Plane_Data;\n    FullFrameImage.currentPlane.mask = FullFrameImageData.Planes.Plane0.Plane_Skipped;\n    FullFrameImage.currentPlane.xor = FullFrameImageData.Planes.Plane0.Plane_XorBits;\n  }\n}\nFullFrameImage.currentPlane = {\n  width: WPC.DmdCols,\n  height: WPC.DmdRows,\n  image: new Uint8Array(WPC.DmdPageBytes),\n  mask: new Uint8Array(WPC.DmdPageBytes),\n  xor: new Uint8Array(WPC.DmdPageBytes),\n  xOffset: 0,\n  yOffset: 0\n};","map":{"version":3,"names":["DataTypes","WPC","DmdDecoder","FullFrameImageData","FullFrameImage","init","instance","constructor","prev","steps","decodePreviousIndex","Graphics","next","decodeNextIndex","minImageIndex","maxImageIndex","countInvalidEncodings","index","encoding","getImageEncoding","ValidEncodings","includes","CurrentImageIndex","Math","max","plane","_getCurrent","currentPlane","getPlaneAt","decodeFullFrameGraphic","image","Planes","Plane0","Plane_Data","mask","Plane_Skipped","xor","Plane_XorBits","width","DmdCols","height","DmdRows","Uint8Array","DmdPageBytes","xOffset","yOffset"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/node_modules/wpcedit/dist/classes/FullFrameImage.js"],"sourcesContent":["import { DataTypes, WPC } from \"../resources/Constants.js\";\nimport { DmdDecoder } from \"./DmdDecoder.js\";\nimport { FullFrameImageData } from \"../stores/FullFrameImageData.js\";\nexport class FullFrameImage {\n    static init() {\n        if (FullFrameImage.instance) {\n            return this.instance;\n        }\n        this.instance = new FullFrameImage();\n        return this.instance;\n    }\n    constructor() {\n        FullFrameImageData.init();\n    }\n    prev(steps) {\n        DmdDecoder.decodePreviousIndex(steps, DataTypes.Graphics);\n    }\n    next(steps) {\n        DmdDecoder.decodeNextIndex(steps, DataTypes.Graphics);\n    }\n    get minImageIndex() {\n        return 0;\n    }\n    get maxImageIndex() {\n        let countInvalidEncodings = 0;\n        let index = 900;\n        while (countInvalidEncodings < 4) {\n            const encoding = DmdDecoder.getImageEncoding(index);\n            if (!WPC.ValidEncodings.includes(encoding)) {\n                countInvalidEncodings++;\n            }\n        }\n        return index - 3;\n    }\n    set index(index) {\n        FullFrameImageData.CurrentImageIndex = Math.max(0, index);\n    }\n    get index() {\n        return FullFrameImageData.CurrentImageIndex;\n    }\n    get plane() {\n        FullFrameImage._getCurrent();\n        return FullFrameImage.currentPlane;\n    }\n    getPlaneAt(index) {\n        FullFrameImageData.CurrentImageIndex = Math.max(0, index);\n        FullFrameImage._getCurrent();\n        return FullFrameImage.currentPlane;\n    }\n    static _getCurrent() {\n        DmdDecoder.decodeFullFrameGraphic(FullFrameImageData.CurrentImageIndex);\n        FullFrameImage.currentPlane.image = FullFrameImageData.Planes.Plane0.Plane_Data;\n        FullFrameImage.currentPlane.mask = FullFrameImageData.Planes.Plane0.Plane_Skipped;\n        FullFrameImage.currentPlane.xor = FullFrameImageData.Planes.Plane0.Plane_XorBits;\n    }\n}\nFullFrameImage.currentPlane = {\n    width: WPC.DmdCols,\n    height: WPC.DmdRows,\n    image: new Uint8Array(WPC.DmdPageBytes),\n    mask: new Uint8Array(WPC.DmdPageBytes),\n    xor: new Uint8Array(WPC.DmdPageBytes),\n    xOffset: 0,\n    yOffset: 0\n};\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,GAAG,QAAQ,2BAA2B;AAC1D,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,kBAAkB,QAAQ,iCAAiC;AACpE,OAAO,MAAMC,cAAc,CAAC;EACxB,OAAOC,IAAI,GAAG;IACV,IAAID,cAAc,CAACE,QAAQ,EAAE;MACzB,OAAO,IAAI,CAACA,QAAQ;IACxB;IACA,IAAI,CAACA,QAAQ,GAAG,IAAIF,cAAc,EAAE;IACpC,OAAO,IAAI,CAACE,QAAQ;EACxB;EACAC,WAAW,GAAG;IACVJ,kBAAkB,CAACE,IAAI,EAAE;EAC7B;EACAG,IAAI,CAACC,KAAK,EAAE;IACRP,UAAU,CAACQ,mBAAmB,CAACD,KAAK,EAAET,SAAS,CAACW,QAAQ,CAAC;EAC7D;EACAC,IAAI,CAACH,KAAK,EAAE;IACRP,UAAU,CAACW,eAAe,CAACJ,KAAK,EAAET,SAAS,CAACW,QAAQ,CAAC;EACzD;EACA,IAAIG,aAAa,GAAG;IAChB,OAAO,CAAC;EACZ;EACA,IAAIC,aAAa,GAAG;IAChB,IAAIC,qBAAqB,GAAG,CAAC;IAC7B,IAAIC,KAAK,GAAG,GAAG;IACf,OAAOD,qBAAqB,GAAG,CAAC,EAAE;MAC9B,MAAME,QAAQ,GAAGhB,UAAU,CAACiB,gBAAgB,CAACF,KAAK,CAAC;MACnD,IAAI,CAAChB,GAAG,CAACmB,cAAc,CAACC,QAAQ,CAACH,QAAQ,CAAC,EAAE;QACxCF,qBAAqB,EAAE;MAC3B;IACJ;IACA,OAAOC,KAAK,GAAG,CAAC;EACpB;EACA,IAAIA,KAAK,CAACA,KAAK,EAAE;IACbd,kBAAkB,CAACmB,iBAAiB,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEP,KAAK,CAAC;EAC7D;EACA,IAAIA,KAAK,GAAG;IACR,OAAOd,kBAAkB,CAACmB,iBAAiB;EAC/C;EACA,IAAIG,KAAK,GAAG;IACRrB,cAAc,CAACsB,WAAW,EAAE;IAC5B,OAAOtB,cAAc,CAACuB,YAAY;EACtC;EACAC,UAAU,CAACX,KAAK,EAAE;IACdd,kBAAkB,CAACmB,iBAAiB,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEP,KAAK,CAAC;IACzDb,cAAc,CAACsB,WAAW,EAAE;IAC5B,OAAOtB,cAAc,CAACuB,YAAY;EACtC;EACA,OAAOD,WAAW,GAAG;IACjBxB,UAAU,CAAC2B,sBAAsB,CAAC1B,kBAAkB,CAACmB,iBAAiB,CAAC;IACvElB,cAAc,CAACuB,YAAY,CAACG,KAAK,GAAG3B,kBAAkB,CAAC4B,MAAM,CAACC,MAAM,CAACC,UAAU;IAC/E7B,cAAc,CAACuB,YAAY,CAACO,IAAI,GAAG/B,kBAAkB,CAAC4B,MAAM,CAACC,MAAM,CAACG,aAAa;IACjF/B,cAAc,CAACuB,YAAY,CAACS,GAAG,GAAGjC,kBAAkB,CAAC4B,MAAM,CAACC,MAAM,CAACK,aAAa;EACpF;AACJ;AACAjC,cAAc,CAACuB,YAAY,GAAG;EAC1BW,KAAK,EAAErC,GAAG,CAACsC,OAAO;EAClBC,MAAM,EAAEvC,GAAG,CAACwC,OAAO;EACnBX,KAAK,EAAE,IAAIY,UAAU,CAACzC,GAAG,CAAC0C,YAAY,CAAC;EACvCT,IAAI,EAAE,IAAIQ,UAAU,CAACzC,GAAG,CAAC0C,YAAY,CAAC;EACtCP,GAAG,EAAE,IAAIM,UAAU,CAACzC,GAAG,CAAC0C,YAAY,CAAC;EACrCC,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}