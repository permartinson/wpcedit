{"ast":null,"code":"'use strict';\n\n// we can't use path.win32.isAbsolute because it also matches paths starting with a forward slash\nconst matchNativeWin32Path = /^[A-Z]:[/\\\\]|^\\\\\\\\/i;\nfunction urlToRequest(url, root) {\n  // Do not rewrite an empty url\n  if (url === '') {\n    return '';\n  }\n  const moduleRequestRegex = /^[^?]*~/;\n  let request;\n  if (matchNativeWin32Path.test(url)) {\n    // absolute windows path, keep it\n    request = url;\n  } else if (root !== undefined && root !== false && /^\\//.test(url)) {\n    // if root is set and the url is root-relative\n    switch (typeof root) {\n      // 1. root is a string: root is prefixed to the url\n      case 'string':\n        // special case: `~` roots convert to module request\n        if (moduleRequestRegex.test(root)) {\n          request = root.replace(/([^~/])$/, '$1/') + url.slice(1);\n        } else {\n          request = root + url;\n        }\n        break;\n      // 2. root is `true`: absolute paths are allowed\n      //    *nix only, windows-style absolute paths are always allowed as they doesn't start with a `/`\n      case 'boolean':\n        request = url;\n        break;\n      default:\n        throw new Error(\"Unexpected parameters to loader-utils 'urlToRequest': url = \" + url + ', root = ' + root + '.');\n    }\n  } else if (/^\\.\\.?\\//.test(url)) {\n    // A relative url stays\n    request = url;\n  } else {\n    // every other url is threaded like a relative url\n    request = './' + url;\n  }\n\n  // A `~` makes the url an module\n  if (moduleRequestRegex.test(request)) {\n    request = request.replace(moduleRequestRegex, '');\n  }\n  return request;\n}\nmodule.exports = urlToRequest;","map":{"version":3,"names":["matchNativeWin32Path","urlToRequest","url","root","moduleRequestRegex","request","test","undefined","replace","slice","Error","module","exports"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/node_modules/worker-loader/node_modules/loader-utils/lib/urlToRequest.js"],"sourcesContent":["'use strict';\n\n// we can't use path.win32.isAbsolute because it also matches paths starting with a forward slash\nconst matchNativeWin32Path = /^[A-Z]:[/\\\\]|^\\\\\\\\/i;\n\nfunction urlToRequest(url, root) {\n  // Do not rewrite an empty url\n  if (url === '') {\n    return '';\n  }\n\n  const moduleRequestRegex = /^[^?]*~/;\n  let request;\n\n  if (matchNativeWin32Path.test(url)) {\n    // absolute windows path, keep it\n    request = url;\n  } else if (root !== undefined && root !== false && /^\\//.test(url)) {\n    // if root is set and the url is root-relative\n    switch (typeof root) {\n      // 1. root is a string: root is prefixed to the url\n      case 'string':\n        // special case: `~` roots convert to module request\n        if (moduleRequestRegex.test(root)) {\n          request = root.replace(/([^~/])$/, '$1/') + url.slice(1);\n        } else {\n          request = root + url;\n        }\n        break;\n      // 2. root is `true`: absolute paths are allowed\n      //    *nix only, windows-style absolute paths are always allowed as they doesn't start with a `/`\n      case 'boolean':\n        request = url;\n        break;\n      default:\n        throw new Error(\n          \"Unexpected parameters to loader-utils 'urlToRequest': url = \" +\n            url +\n            ', root = ' +\n            root +\n            '.'\n        );\n    }\n  } else if (/^\\.\\.?\\//.test(url)) {\n    // A relative url stays\n    request = url;\n  } else {\n    // every other url is threaded like a relative url\n    request = './' + url;\n  }\n\n  // A `~` makes the url an module\n  if (moduleRequestRegex.test(request)) {\n    request = request.replace(moduleRequestRegex, '');\n  }\n\n  return request;\n}\n\nmodule.exports = urlToRequest;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA,MAAMA,oBAAoB,GAAG,qBAAqB;AAElD,SAASC,YAAY,CAACC,GAAG,EAAEC,IAAI,EAAE;EAC/B;EACA,IAAID,GAAG,KAAK,EAAE,EAAE;IACd,OAAO,EAAE;EACX;EAEA,MAAME,kBAAkB,GAAG,SAAS;EACpC,IAAIC,OAAO;EAEX,IAAIL,oBAAoB,CAACM,IAAI,CAACJ,GAAG,CAAC,EAAE;IAClC;IACAG,OAAO,GAAGH,GAAG;EACf,CAAC,MAAM,IAAIC,IAAI,KAAKI,SAAS,IAAIJ,IAAI,KAAK,KAAK,IAAI,KAAK,CAACG,IAAI,CAACJ,GAAG,CAAC,EAAE;IAClE;IACA,QAAQ,OAAOC,IAAI;MACjB;MACA,KAAK,QAAQ;QACX;QACA,IAAIC,kBAAkB,CAACE,IAAI,CAACH,IAAI,CAAC,EAAE;UACjCE,OAAO,GAAGF,IAAI,CAACK,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,GAAGN,GAAG,CAACO,KAAK,CAAC,CAAC,CAAC;QAC1D,CAAC,MAAM;UACLJ,OAAO,GAAGF,IAAI,GAAGD,GAAG;QACtB;QACA;MACF;MACA;MACA,KAAK,SAAS;QACZG,OAAO,GAAGH,GAAG;QACb;MACF;QACE,MAAM,IAAIQ,KAAK,CACb,8DAA8D,GAC5DR,GAAG,GACH,WAAW,GACXC,IAAI,GACJ,GAAG,CACN;IAAC;EAER,CAAC,MAAM,IAAI,UAAU,CAACG,IAAI,CAACJ,GAAG,CAAC,EAAE;IAC/B;IACAG,OAAO,GAAGH,GAAG;EACf,CAAC,MAAM;IACL;IACAG,OAAO,GAAG,IAAI,GAAGH,GAAG;EACtB;;EAEA;EACA,IAAIE,kBAAkB,CAACE,IAAI,CAACD,OAAO,CAAC,EAAE;IACpCA,OAAO,GAAGA,OAAO,CAACG,OAAO,CAACJ,kBAAkB,EAAE,EAAE,CAAC;EACnD;EAEA,OAAOC,OAAO;AAChB;AAEAM,MAAM,CAACC,OAAO,GAAGX,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}