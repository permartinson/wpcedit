{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-25a6daae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"list-item-inner\"\n};\nconst _hoisted_2 = {\n  class: \"dmd-container\"\n};\nconst _hoisted_3 = {\n  ref: \"dmd\",\n  class: \"dmd\",\n  width: \"256\",\n  height: \"64\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"list-item-fullframe\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('open', $props.index))\n  }, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"canvas\", _hoisted_3, null, 512 /* NEED_PATCH */)])])]);\n}","map":{"version":3,"mappings":";;;EAEWA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAe;;EAChBC,GAAG,EAAC,KAAK;EAACD,KAAK,EAAC,KAAK;EAACE,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;uBAHvDC,oBAMM;IANDJ,KAAK,EAAC,qBAAqB;IAAEK,OAAK,sCAAEC,UAAK,SAAQC,YAAK;MACzDC,oBAIM,OAJNC,UAIM,GAHJD,oBAEM,OAFNE,UAEM,GADJF,oBAA+D,UAA/DG,UAA+D","names":["class","ref","width","height","_createElementBlock","onClick","_ctx","$props","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/ui/list-items/FullFrameItem.vue"],"sourcesContent":["<template>\n    <div class=\"list-item-fullframe\" @click=\"$emit('open',index)\">\n      <div class=\"list-item-inner\">\n        <div class=\"dmd-container\">\n          <canvas ref=\"dmd\" class=\"dmd\" width=\"256\" height=\"64\"></canvas>\n        </div>\n      </div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'FullFrameItem',\n  props: {\n    plane: Uint8Array,\n    index: Number,\n  },\n  methods: {\n    drawImage() {\n        const DOT_SIZE = 2;\n        const canvas = this.$refs.dmd;\n        const ctx = canvas.getContext(\"2d\");\n        for(let i=0; i<128*32; i++) {\n            const dotX = (i % 128) * DOT_SIZE;\n            const dotY = Math.floor(i / 128) * DOT_SIZE;\n            const dotVal = this.getDotValue(this.plane,i);\n            ctx.beginPath();\n            ctx.beginPath();\n            ctx.rect(dotX, dotY, DOT_SIZE, DOT_SIZE);\n            ctx.fillStyle = `rgba(250, 136, 2, ${dotVal*255})`;\n            ctx.fill();\n        }\n    },\n    drawWorker() {\n      const worker = new Worker('../../workers/drawFullFrame.js')\n      const canvas = this.$refs.dmd;\n      const plane = this.plane;\n\n      const ctx = canvas.getContext('bitmaprenderer'); // \n      const offscreenCanvas = new OffscreenCanvas(canvas.width, canvas.height);\n\n      worker.postMessage({msg: 'init', canvas: offscreenCanvas, plane: plane}, [offscreenCanvas, plane]);\n\n      worker.addEventListener('message', function(ev) {\n        if(ev.data.msg === 'render') {\n          ctx.transferFromImageBitmap(ev.data.bitmap);\n        }\n      });\n    },\n    getDotValue(plane0Data,index) {\n        const width = 128;\n        const col = index % width;\n        const byte = Math.floor(index/8);\n        const bitPos = (col % 8);\n        const bit =  ( plane0Data[byte] & 0xFF ) >> (bitPos) & 1;\n        return bit;\n    }\n  },\n  mounted() {\n    this.drawWorker();\n    //this.drawImage();\n  }\n}\n\n</script>\n\n<style scoped>\n\n.list-item-fullframe {\n  width: 23.5rem;\n  height: 8.2rem;\n  background: var(--grey5);\n  border-radius: var(--radius-md);\n  cursor: pointer;\n  box-shadow: var(--shadow-btn-default);\n}\n\n.list-item-fullframe:hover {\n  background: var(--grey4);\n  box-shadow: var(--shadow-btn-hover);\n}\n\n.list-item-inner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n.dmd-container {\n  position: absolute;\n  top: var(--btn-outer-frame);\n  left: var(--btn-outer-frame);\n  bottom: var(--btn-outer-frame);\n  right: var(--btn-outer-frame);\n  border: 0.1rem solid var(--grey8);\n  display: flex;\n  align-items: center center;\n}\n\n.dmd {\n  width: calc(100% - var(--space-md));\n  margin: auto;\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}