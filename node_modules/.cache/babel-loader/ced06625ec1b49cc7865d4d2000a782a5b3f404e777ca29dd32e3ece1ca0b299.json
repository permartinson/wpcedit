{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ce660642\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"controls\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"dmd-container\"\n};\nconst _hoisted_3 = {\n  ref: \"dmd\",\n  width: \"512\",\n  height: \"128\",\n  class: \"dmd\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"canvas\", _hoisted_3, null, 512 /* NEED_PATCH */)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;gEACEA,oBAA4B;EAAvBC,KAAK,EAAC;AAAU;;EAChBA,KAAK,EAAC;AAAe;;EAChBC,GAAG,EAAC,KAAK;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC,KAAK;EAACH,KAAK,EAAC;;;6DAFnDI,UAA4B,EAC5BL,oBAEM,OAFNM,UAEM,GADJN,oBAAgE,UAAhEO,UAAgE","names":["_createElementVNode","class","ref","width","height","_hoisted_1","_hoisted_2","_hoisted_3"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/dmd/SubDmd.vue"],"sourcesContent":["<template>\n  <div class=\"controls\"></div>\n  <div class=\"dmd-container\">\n    <canvas ref=\"dmd\" width=\"512\" height=\"128\" class=\"dmd\"></canvas>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: 'SubDmd',\n  props: {\n    plane: Uint8Array,\n  },\n  methods: {\n    drawImage() {\n        const DOT_SIZE = 4;\n        const canvas = this.$refs.dmd;\n        const ctx = canvas.getContext(\"2d\");\n        for(let i=0; i<128*32; i++) {\n            const dotX = (i % 128) * DOT_SIZE + DOT_SIZE/2;\n            const dotY = Math.floor(i / 128) * DOT_SIZE + DOT_SIZE/2;\n            const dotVal = this.getDotValue(this.plane,i);\n            ctx.beginPath();\n            ctx.arc(dotX, dotY, DOT_SIZE/2*0.9, 0, 2 * Math.PI, false);\n            ctx.fillStyle = `rgba(220, 133, 33, ${dotVal*255})`;\n            ctx.fill();\n        }\n    },\n    getDotValue(plane0Data,index) {\n        const width = 128;\n        const col = index % width;\n        const byte = Math.floor(index/8);\n        const bitPos = (col % 8);\n        const bit =  ( plane0Data[byte] & 0xFF ) >>(bitPos) & 1;\n        return bit;\n    }\n  },\n  mounted() {\n    this.drawImage();\n  },\n  updated() {\n    this.drawImage();\n  }\n}\n\n</script>\n\n<style scoped>\n.controls {\n  height: 3.2rem;\n}\n.dmd-container {\n  background: var(--black);\n}\n.dmd {\n  width: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}