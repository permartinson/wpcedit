{"ast":null,"code":"export default {\n  name: 'NumeralInput',\n  props: {\n    value: Number,\n    max: Number,\n    min: Number,\n    maxlength: Number,\n    size: String\n  },\n  data() {\n    return {};\n  },\n  computed: {\n    model: {\n      get() {\n        return this.value;\n      },\n      set(state) {\n        this.$emit('change', state);\n      }\n    }\n  },\n  methods: {\n    getClass() {\n      let className = \"small\";\n      if (this.size == \"large\") {\n        className = \"large\";\n      }\n      return className;\n    },\n    limitLength() {\n      const input = this.$refs.input;\n      const value = input.value;\n      console.log(value.length);\n      if (value.length >= this.maxlength) {\n        input.value = value.slice(0, this.maxlength - 1);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAKA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,KAAK,EAAEC,MAAM;IACbC,GAAG,EAAED,MAAM;IACXE,GAAG,EAAEF,MAAM;IACXG,SAAS,EAAEH,MAAM;IACjBI,IAAI,EAAEC;EACR,CAAC;EACDC,IAAI,GAAG;IACL,OAAO,CACP;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,KAAK,EAAE;MACHC,GAAG,GAAG;QAAE,OAAO,IAAI,CAACV,KAAI;MAAE,CAAC;MAC3BW,GAAG,CAACC,KAAK,EAAE;QAAE,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAED,KAAK;MAAE;IAC7C;EACA,CAAC;EACHE,OAAO,EAAE;IACPC,QAAQ,GAAG;MACP,IAAIC,SAAQ,GAAI,OAAO;MACvB,IAAG,IAAI,CAACX,IAAG,IAAK,OAAO,EAAE;QACrBW,SAAQ,GAAI,OAAO;MACvB;MACA,OAAOA,SAAS;IACpB,CAAC;IACDC,WAAW,GAAG;MACV,MAAMC,KAAI,GAAI,IAAI,CAACC,KAAK,CAACD,KAAK;MAC9B,MAAMlB,KAAI,GAAIkB,KAAK,CAAClB,KAAI;MACxBoB,OAAO,CAACC,GAAG,CAACrB,KAAK,CAACsB,MAAM;MACxB,IAAGtB,KAAK,CAACsB,MAAM,IAAE,IAAI,CAAClB,SAAS,EAAE;QAC7Bc,KAAK,CAAClB,KAAI,GAAIA,KAAK,CAACuB,KAAK,CAAC,CAAC,EAAC,IAAI,CAACnB,SAAS,GAAC,CAAC;MAChD;IACJ;EACF;AACF","names":["name","props","value","Number","max","min","maxlength","size","String","data","computed","model","get","set","state","$emit","methods","getClass","className","limitLength","input","$refs","console","log","length","slice"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/ui/inputs/NumeralInput.vue"],"sourcesContent":["<template>\n    <input type=\"number\" class=\"num-input\" :class=\"getClass()\" :min=\"min\" :max=\"max\" @keypress=\"limitLength\" v-model=\"model\" ref=\"input\" />\n</template>\n\n<script>\nexport default {\n  name: 'NumeralInput',\n  props: {\n    value: Number,\n    max: Number,\n    min: Number,\n    maxlength: Number,\n    size: String\n  },\n  data() {\n    return {\n    }\n  },\n  computed: {\n    model: {\n        get() { return this.value },\n        set(state) { this.$emit('change', state) }\n    }\n    },\n  methods: {\n    getClass() {\n        let className = \"small\";\n        if(this.size == \"large\") {\n            className = \"large\";\n        }\n        return className;\n    },\n    limitLength() {\n        const input = this.$refs.input;\n        const value = input.value\n        console.log(value.length)\n        if(value.length>=this.maxlength) {\n            input.value = value.slice(0,this.maxlength-1)\n        }\n    }\n  }\n}\n</script>\n\n<style scoped>\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n/* Firefox */\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n\n.num-input {\n    font-family: inherit;\n    transition: var(--hover-anim);\n    background: var(--grey5);\n    box-sizing: border-box;\n    border: 1px solid var(--grey8);\n    border-radius: var(--radius-xs);\n    font-weight: 400;\n    color: var(--grey9);\n    text-align: center;\n}\n.num-input.large {\n    height: 4.8rem;\n    font-size: var(--text-md);\n    padding: 0 var(--space-md);\n}\n.num-input.small {\n  height: 3.2rem;\n  font-size: var(--text-sm);\n  font-weight: 700;\n  padding: 0 var(--space-sm);\n}\n.num-input:hover {\n    background: var(--grey4);\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}