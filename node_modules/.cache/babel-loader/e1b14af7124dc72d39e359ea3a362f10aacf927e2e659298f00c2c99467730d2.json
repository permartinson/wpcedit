{"ast":null,"code":"import '../settings.mjs';\nimport { settings } from '@pixi/settings';\nlet supported;\nfunction isWebGLSupported() {\n  if (typeof supported === \"undefined\") {\n    supported = function supported2() {\n      const contextOptions = {\n        stencil: true,\n        failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT\n      };\n      try {\n        if (!settings.ADAPTER.getWebGLRenderingContext()) {\n          return false;\n        }\n        const canvas = settings.ADAPTER.createCanvas();\n        let gl = canvas.getContext(\"webgl\", contextOptions) || canvas.getContext(\"experimental-webgl\", contextOptions);\n        const success = !!gl?.getContextAttributes()?.stencil;\n        if (gl) {\n          const loseContext = gl.getExtension(\"WEBGL_lose_context\");\n          if (loseContext) {\n            loseContext.loseContext();\n          }\n        }\n        gl = null;\n        return success;\n      } catch (e) {\n        return false;\n      }\n    }();\n  }\n  return supported;\n}\nexport { isWebGLSupported };","map":{"version":3,"mappings":";;AAEA,IAAIA;AASJ;EACQ,WAAOA,cAAc,WACzB;IACIA,YAAa,SACbC;MACI,MAAMC,cAAiB;QACnBC,OAAS;QACTC,8BAA8BC,QAAS;MAAA,CAC3C;MAGA;QACI,IAAI,CAACA,SAASC,OAAQ,2BACtB;UACW;QAAA;QAGL,eAASD,QAAS,SAAQE,YAAa;QACzC,SACAC,OAAOC,UAAW,UAASP,cAAc,CACtC,WAAOO,UAAW,uBAAsBP,cAAc;QAG7D,MAAMQ,OAAU,IAAC,CAACC,IAAIC,sBAAwB;QAE9C,IAAID,EACJ;UACU,oBAAcA,EAAG,cAAa,oBAAoB;UAExD,IAAIE,WACJ;YACIA,YAAYA,WAAY;UAAA;QAC5B;QAGCF;QAEE;MAAA,SAEJG,CAAP;QAEW;MAAA;IACX,CACD;EAAA;EAGA;AACX","names":["supported","supported2","contextOptions","stencil","failIfMajorPerformanceCaveat","settings","ADAPTER","createCanvas","canvas","getContext","success","gl","getContextAttributes","loseContext","e"],"sources":["../../src/browser/isWebGLSupported.ts"],"sourcesContent":["import { settings } from '../settings';\n\nlet supported: boolean | undefined;\n\n/**\n * Helper for checking for WebGL support.\n * @memberof PIXI.utils\n * @function isWebGLSupported\n * @returns {boolean} Is WebGL supported.\n */\nexport function isWebGLSupported(): boolean\n{\n    if (typeof supported === 'undefined')\n    {\n        supported = (function supported(): boolean\n        {\n            const contextOptions = {\n                stencil: true,\n                failIfMajorPerformanceCaveat: settings.FAIL_IF_MAJOR_PERFORMANCE_CAVEAT,\n            };\n\n            try\n            {\n                if (!settings.ADAPTER.getWebGLRenderingContext())\n                {\n                    return false;\n                }\n\n                const canvas = settings.ADAPTER.createCanvas();\n                let gl = (\n                    canvas.getContext('webgl', contextOptions)\n                    || canvas.getContext('experimental-webgl', contextOptions)\n                ) as WebGLRenderingContext | null;\n\n                const success = !!gl?.getContextAttributes()?.stencil;\n\n                if (gl)\n                {\n                    const loseContext = gl.getExtension('WEBGL_lose_context');\n\n                    if (loseContext)\n                    {\n                        loseContext.loseContext();\n                    }\n                }\n\n                gl = null;\n\n                return success;\n            }\n            catch (e)\n            {\n                return false;\n            }\n        })();\n    }\n\n    return supported;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}