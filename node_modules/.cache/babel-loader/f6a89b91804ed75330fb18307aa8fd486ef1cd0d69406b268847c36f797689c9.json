{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport BaseModal from './BaseModal.vue';\nimport ModalHeader from './ModalHeader.vue';\nimport ModalFooter from './ModalFooter.vue';\nimport ExportSection from '../ExportSection.vue';\nimport MainDmd from '../../dmd/MainDmd.vue';\nimport SubDmd from '../../dmd/SubDmd.vue';\nimport CheckBox from '../../ui/CheckBox.vue';\nimport { storeToRefs } from 'pinia';\nimport store from \"../../../stores/store.js\";\nimport { useWpcEditStore } from '../../../stores/wpcEditStore.js';\nconst WpcEditStore = useWpcEditStore(store);\nexport default {\n  name: 'SpriteModal',\n  components: {\n    BaseModal,\n    ModalHeader,\n    ModalFooter,\n    ExportSection,\n    MainDmd,\n    SubDmd,\n    CheckBox\n  },\n  setup() {\n    const {\n      exportOption,\n      settings\n    } = storeToRefs(WpcEditStore);\n    return {\n      exportOption,\n      settings\n    };\n  },\n  data() {\n    // fetch the selected export option and create an object to pass the data for the selector\n    const options = new Array();\n    const labels = ['PNG image from render', 'Monochrome BMP image', 'Monochrome BMP image (inverted)', 'Raw byte array, horizontal encoding'];\n    for (let i = 0; i < labels.length; i++) {\n      const selected = i == this.exportOption;\n      options.push({\n        value: i,\n        label: labels[i],\n        selected: selected\n      });\n    }\n    return {\n      doBlend: true,\n      doMerge0: false,\n      doMerge1: false,\n      offset: 0,\n      blendOffset: 1,\n      merge0Offset: 2,\n      merge1Offset: 3,\n      doInBetween0: true,\n      doInBetween1: true,\n      exportMainDmd: -1,\n      options: options\n    };\n  },\n  props: {\n    show: Boolean,\n    index: Number\n  },\n  computed: {\n    planeIndices() {\n      const currIndex = Math.max(this.index + this.offset, 0);\n      return {\n        current: currIndex,\n        blend: Math.max(currIndex + this.blendOffset, 0),\n        merge0: Math.max(currIndex + this.merge0Offset, 0),\n        merge1: Math.max(currIndex + this.merge1Offset, 0)\n      };\n    },\n    currPlaneTitle() {\n      return `This plane, index ${this.planeIndices.current}`;\n    },\n    blendPlaneLabel() {\n      return `Blend with index ${this.planeIndices.blend}`;\n    },\n    merge0Label() {\n      return `Apply index ${this.planeIndices.merge0} on top`;\n    },\n    merge1Label() {\n      return `Apply index ${this.planeIndices.merge1} on top`;\n    }\n  },\n  methods: {\n    plane0() {\n      return this.mainPlane();\n    },\n    plane1() {\n      if (this.doBlend) {\n        return this.blendPlane();\n      }\n      return this.mainPlane();\n    },\n    mainPlane() {\n      const indices = this.planeIndices;\n      if (this.doMerge0) {\n        let image1 = WpcEditStore.getFullFrameImageAt(indices.current).image;\n        if (this.doInBetween0) {\n          for (let i = 1; i <= Math.abs(indices.merge0 - indices.current); i++) {\n            if (this.doBlend && i % 2 != 0) {\n              continue;\n            } else {\n              const plane2 = WpcEditStore.getFullFrameImageAt(indices.current + i);\n              image1 = WpcEditStore.mergePlanes(image1, plane2);\n            }\n          }\n        } else {\n          const plane2 = WpcEditStore.getFullFrameImageAt(indices.merge0);\n          image1 = WpcEditStore.mergePlanes(image1, plane2);\n        }\n        //const plane2 = WpcEditStore.getFullFrameImageAt(indices.merge0);\n        //const image2 = plane2.image;\n        //const mask = plane2.mask;\n        return image1;\n      }\n      return WpcEditStore.getFullFrameImageAt(indices.current).image;\n    },\n    blendPlane() {\n      const indices = this.planeIndices;\n      let image1 = WpcEditStore.getFullFrameImageAt(indices.blend).image;\n      if (this.doMerge1) {\n        if (this.doInBetween0) {\n          for (let i = 1; i <= Math.abs(indices.merge1 - indices.current); i++) {\n            if (this.doBlend && i % 2 != 1) {\n              continue;\n            } else {\n              const plane2 = WpcEditStore.getFullFrameImageAt(indices.current + i);\n              const image2 = plane2.image;\n              const mask = plane2.mask;\n              image1 = WpcEditStore.mergeImages(image1, image2, mask);\n            }\n          }\n        } else {\n          const plane2 = WpcEditStore.getFullFrameImageAt(indices.merge1);\n          const image2 = plane2.image;\n          const mask = plane2.mask;\n          image1 = WpcEditStore.mergeImages(image1, image2, mask);\n        }\n\n        //const plane1 = WpcEditStore.getFullFrameImageAt(indices.merge1);\n        //const image2 = plane1.image;\n        //const mask = plane1.mask;\n        return image1;\n      }\n      return WpcEditStore.getFullFrameImageAt(indices.blend).image;\n    },\n    merge0Plane() {\n      const indices = this.planeIndices;\n      return WpcEditStore.getFullFrameImageAt(indices.merge0).image;\n    },\n    merge1Plane() {\n      const indices = this.planeIndices;\n      return WpcEditStore.getFullFrameImageAt(indices.merge1).image;\n    },\n    setBlendStatus(state) {\n      if (state == true) {\n        this.doBlend = true;\n      } else if (state == false) {\n        this.doBlend = false;\n      }\n    },\n    setMerge0Status(state) {\n      if (state == true) {\n        this.doMerge0 = true;\n      } else if (state == false) {\n        this.doMerge0 = false;\n      }\n    },\n    setMerge1Status(state) {\n      if (state == true) {\n        this.doMerge1 = true;\n      } else if (state == false) {\n        this.doMerge1 = false;\n      }\n    },\n    setBetween0Status(state) {\n      if (state == true) {\n        this.doInBetween0 = true;\n      } else if (state == false) {\n        this.doInBetween0 = false;\n      }\n    },\n    setBetween1Status(state) {\n      if (state == true) {\n        this.doInBetween1 = true;\n      } else if (state == false) {\n        this.doInBetween1 = false;\n      }\n    },\n    goToNextBlendPlane() {\n      this.blendOffset++;\n    },\n    goToPrevBlendPlane() {\n      this.blendOffset--;\n    },\n    goToNextMerge0Plane() {\n      this.merge0Offset++;\n    },\n    goToPrevMerge0Plane() {\n      if (this.merge0Offset > 0) {\n        this.merge0Offset--;\n      }\n    },\n    goToNextMerge1Plane() {\n      this.merge1Offset++;\n    },\n    goToPrevMerge1Plane() {\n      if (this.merge1Offset > this.blendOffset) {\n        this.merge1Offset--;\n      }\n    },\n    goNext() {\n      this.offset++;\n      this.setInitValues();\n    },\n    goPrev() {\n      if (this.planeIndices.current > 0) {\n        this.offset--;\n      }\n      this.setInitValues();\n    },\n    goN2() {\n      this.offset += 2;\n      this.setInitValues();\n    },\n    goP2() {\n      if (this.planeIndices.current > 0) {\n        this.offset -= 2;\n      }\n      this.setInitValues();\n    },\n    setInitValues() {\n      // reset the values (or get from a store when that ha been implemented)\n      this.doBlend = true;\n      this.doMerge0 = false;\n      this.doMerge1 = false;\n      this.blendOffset = 1;\n      this.merge0Offset = 2;\n      this.merge1Offset = 3;\n    },\n    exportCurrentFrame() {\n      if (this.exportOption == 0) {\n        this.$refs.main.downloadPng();\n      } else if (this.exportOption == 3) {\n        let dataString = WpcEditStore.exportAsDataArray(this.mainPlane());\n        if (this.doBlend) {\n          dataString += \"\\n\\n\" + WpcEditStore.exportAsDataArray(this.blendPlane());\n        }\n        let link = document.createElement(\"a\");\n        link.href = 'data:text/plain;charset=utf-8,' + encodeURIComponent(dataString);\n        const filename = \"plane\" + this.planeIndices.current + \".txt\";\n        link.download = filename;\n        link.style.display = \"none\";\n        document.body.appendChild(link);\n        link.click();\n        link.parentNode.removeChild(link);\n      } else if (this.exportOption == 1 || this.exportOption == 2) {\n        let inverted = false;\n        if (this.exportOption == 2) {\n          inverted = true;\n        }\n        let image = WpcEditStore.exportAs1bitBmp(this.mainPlane(), inverted);\n        let link = document.createElement(\"a\");\n        link.href = 'data:image/bmp;base64,' + image;\n        const filename = \"plane\" + this.planeIndices.current + \".bmp\";\n        link.download = filename;\n        link.style.display = \"none\";\n        document.body.appendChild(link);\n        link.click();\n        link.parentNode.removeChild(link);\n      }\n    }\n  },\n  updated() {\n    this.offset = 0;\n    this.setInitValues();\n  }\n};","map":{"version":3,"mappings":"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","names":["BaseModal","ModalHeader","ModalFooter","ExportSection","MainDmd","SubDmd","CheckBox","storeToRefs","store","useWpcEditStore","WpcEditStore","name","components","setup","exportOption","settings","data","options","Array","labels","i","length","selected","push","value","label","doBlend","doMerge0","doMerge1","offset","blendOffset","merge0Offset","merge1Offset","doInBetween0","doInBetween1","exportMainDmd","props","show","Boolean","index","Number","computed","planeIndices","currIndex","Math","max","current","blend","merge0","merge1","currPlaneTitle","blendPlaneLabel","merge0Label","merge1Label","methods","plane0","mainPlane","plane1","blendPlane","indices","image1","getFullFrameImageAt","image","abs","plane2","mergePlanes","image2","mask","mergeImages","merge0Plane","merge1Plane","setBlendStatus","state","setMerge0Status","setMerge1Status","setBetween0Status","setBetween1Status","goToNextBlendPlane","goToPrevBlendPlane","goToNextMerge0Plane","goToPrevMerge0Plane","goToNextMerge1Plane","goToPrevMerge1Plane","goNext","setInitValues","goPrev","goN2","goP2","exportCurrentFrame","$refs","main","downloadPng","dataString","exportAsDataArray","link","document","createElement","href","encodeURIComponent","filename","download","style","display","body","appendChild","click","parentNode","removeChild","inverted","exportAs1bitBmp","updated"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/ui/modals/FullFrameModal.vue"],"sourcesContent":["<template>\n    <BaseModal :show=\"show\" @close=\"$emit('close')\">\n        <ModalHeader\n            :stepBtns=\"true\"\n            :closeBtn=\"true\"\n            title=\"Test title\"\n            @next=\"goNext()\"\n            @prev=\"goPrev()\"\n            @next2=\"goN2()\"\n            @prev2=\"goP2()\"\n            @close=\"$emit('close')\">\n        </ModalHeader>\n        <div class=\"modal-body\">\n            <MainDmd :plane0=\"plane0()\" :plane1=\"plane1()\" :index=\"planeIndices.current\" ref=\"main\"></MainDmd>\n            <div class=\"sub-dmds blend\">\n                <SubDmd\n                    class=\"plane plane0\"\n                    :title=\"this.currPlaneTitle\"\n                    :isEnabled=\"true\"\n                    :plane=\"mainPlane()\">\n                </SubDmd>\n                <SubDmd\n                    class=\"plane plane1\"\n                    :checkbox=\"this.blendPlaneLabel\"\n                    :plane=\"blendPlane()\"\n                    :isEnabled=\"this.doBlend\"\n                    :navBtns=\"true\"\n                    @next=\"goToNextBlendPlane()\"\n                    @prev=\"goToPrevBlendPlane()\"\n                    @enabled=\"setBlendStatus\">\n                </SubDmd>\n            </div>\n            <div class=\"sub-dmds merge\">\n                <div class=\"plane plane0\">\n                    <SubDmd\n                        :checkbox=\"this.merge0Label\"\n                        :plane=\"merge0Plane()\"\n                        :isEnabled=\"this.doMerge0\"\n                        :navBtns=\"true\"\n                        @next=\"goToNextMerge0Plane()\"\n                        @prev=\"goToPrevMerge0Plane()\"\n                        @enabled=\"setMerge0Status\">\n                    </SubDmd>\n                    <CheckBox v-if=\"settings.optionalInbetweening\" class=\"in-between\" @change=\"setBetween0Status\" :checked=\"true\" label=\"Also apply the planes in between\" ref=\"inBetween0\"></CheckBox>\n                </div>\n                <div>\n                    <SubDmd\n                        class=\"plane plane1\"\n                        :checkbox=\"this.merge1Label\"\n                        :plane=\"merge1Plane()\"\n                        :isEnabled=\"this.doMerge1\"\n                        :navBtns=\"true\"\n                        @next=\"goToNextMerge1Plane()\"\n                        @prev=\"goToPrevMerge1Plane()\"\n                        @enabled=\"setMerge1Status\">\n                    </SubDmd>\n                    <CheckBox v-if=\"settings.optionalInbetweening\" class=\"in-between\" @change=\"setBetween1Status\" :checked=\"true\" label=\"Also apply the planes in between\" ref=\"inBetween1\"></CheckBox>\n                </div>\n            </div>\n        </div>\n        <ModalFooter>\n            <ExportSection @export=\"exportCurrentFrame\" :options=\"options\">\n            </ExportSection>\n        </ModalFooter>\n    </BaseModal>\n</template>\n\n<script>\nimport BaseModal from './BaseModal.vue';\nimport ModalHeader from './ModalHeader.vue';\nimport ModalFooter from './ModalFooter.vue';\nimport ExportSection from '../ExportSection.vue';\nimport MainDmd from '../../dmd/MainDmd.vue';\nimport SubDmd from '../../dmd/SubDmd.vue';\nimport CheckBox from '../../ui/CheckBox.vue';\nimport { storeToRefs } from 'pinia';\nimport store from \"../../../stores/store.js\";\nimport { useWpcEditStore } from '../../../stores/wpcEditStore.js';\n\nconst WpcEditStore = useWpcEditStore(store);\n\nexport default {\n    name: 'SpriteModal',\n    components: { \n        BaseModal,\n        ModalHeader,\n        ModalFooter,\n        ExportSection,\n        MainDmd,\n        SubDmd,\n        CheckBox\n    },\n    setup() {\n        const { exportOption, settings } = storeToRefs(WpcEditStore);\n        return {\n            exportOption,\n            settings\n        }\n    },\n    data() {\n        // fetch the selected export option and create an object to pass the data for the selector\n        const options = new Array();\n        const labels = [\n            'PNG image from render',\n            'Monochrome BMP image',\n            'Monochrome BMP image (inverted)',\n            'Raw byte array, horizontal encoding'\n        ]\n        for(let i=0;i<labels.length;i++) {\n            const selected = (i == this.exportOption);\n            options.push({value:i,label:labels[i],selected:selected})\n        }\n\n        return {\n            doBlend: true,\n            doMerge0: false,\n            doMerge1: false,\n            offset: 0,\n            blendOffset: 1,\n            merge0Offset: 2,\n            merge1Offset: 3,\n            doInBetween0: true,\n            doInBetween1: true,\n            exportMainDmd: -1,\n            options: options\n        }\n    },\n    props: {\n        show: Boolean,\n        index: Number\n    },\n    computed: {\n        planeIndices() {\n            const currIndex = Math.max(this.index+this.offset,0);\n            return {\n                current: currIndex,\n                blend: Math.max(currIndex+this.blendOffset,0),\n                merge0: Math.max(currIndex+this.merge0Offset,0),\n                merge1: Math.max(currIndex+this.merge1Offset,0)\n            }\n        },\n        currPlaneTitle() {\n            return `This plane, index ${this.planeIndices.current}`;\n        },\n        blendPlaneLabel() {\n            return `Blend with index ${this.planeIndices.blend}`;\n        },\n        merge0Label() {\n            return `Apply index ${this.planeIndices.merge0} on top`;\n        },\n        merge1Label() {\n            return `Apply index ${this.planeIndices.merge1} on top`;\n        }\n    },\n    methods: {\n        plane0() {\n            return this.mainPlane();\n        },\n        plane1() {\n            if(this.doBlend) {\n                return this.blendPlane();\n            }\n            return this.mainPlane();\n        },\n        mainPlane() {\n            const indices = this.planeIndices;\n            if(this.doMerge0) {\n                let image1 = WpcEditStore.getFullFrameImageAt(indices.current).image;\n                if(this.doInBetween0) {\n                    for(let i=1; i<=Math.abs(indices.merge0-indices.current); i++) {\n                        if(this.doBlend && i%2!=0) {\n                            continue;\n                        } else {\n                            const plane2 = WpcEditStore.getFullFrameImageAt(indices.current+i);\n                            image1 = WpcEditStore.mergePlanes(image1,plane2);\n                        }\n                    }\n                } else {\n                    const plane2 = WpcEditStore.getFullFrameImageAt(indices.merge0);\n                    image1 = WpcEditStore.mergePlanes(image1,plane2);\n\n                }\n                //const plane2 = WpcEditStore.getFullFrameImageAt(indices.merge0);\n                //const image2 = plane2.image;\n                //const mask = plane2.mask;\n                return image1;\n            }\n            return WpcEditStore.getFullFrameImageAt(indices.current).image;\n        },\n        blendPlane() {\n            const indices = this.planeIndices;\n            let image1 = WpcEditStore.getFullFrameImageAt(indices.blend).image;\n            if(this.doMerge1) {\n                if(this.doInBetween0) {\n                    for(let i=1; i<=Math.abs(indices.merge1-indices.current); i++) {\n                        if(this.doBlend && i%2!=1) {\n                            continue;\n                        } else {\n                            const plane2 = WpcEditStore.getFullFrameImageAt(indices.current+i);\n                            const image2 = plane2.image;\n                            const mask = plane2.mask;\n                            image1 = WpcEditStore.mergeImages(image1,image2,mask)\n                        }\n                    }\n                } else {\n                    const plane2 = WpcEditStore.getFullFrameImageAt(indices.merge1);\n                    const image2 = plane2.image;\n                    const mask = plane2.mask;\n                    image1 = WpcEditStore.mergeImages(image1,image2,mask)\n                }\n\n                //const plane1 = WpcEditStore.getFullFrameImageAt(indices.merge1);\n                //const image2 = plane1.image;\n                //const mask = plane1.mask;\n                return image1;\n            }\n            return WpcEditStore.getFullFrameImageAt(indices.blend).image;\n        },\n        merge0Plane() {\n            const indices = this.planeIndices;\n            return WpcEditStore.getFullFrameImageAt(indices.merge0).image;\n        },\n        merge1Plane() {\n            const indices = this.planeIndices;\n            return WpcEditStore.getFullFrameImageAt(indices.merge1).image;\n        },\n        setBlendStatus(state) {\n            if(state == true) {\n                this.doBlend = true;\n            } else if(state == false) {\n                this.doBlend = false;\n            }\n        },\n        setMerge0Status(state) {\n            if(state == true) {\n                this.doMerge0 = true;\n            } else if(state == false) {\n                this.doMerge0 = false;\n            }\n        },\n        setMerge1Status(state) {\n            if(state == true) {\n                this.doMerge1 = true;\n            } else if(state == false) {\n                this.doMerge1 = false;\n            }\n        },\n        setBetween0Status(state) {\n            if(state == true) {\n                this.doInBetween0 = true;\n            } else if(state == false) {\n                this.doInBetween0 = false;\n            }\n        },\n        setBetween1Status(state) {\n            if(state == true) {\n                this.doInBetween1 = true;\n            } else if(state == false) {\n                this.doInBetween1 = false;\n            }\n        },\n        goToNextBlendPlane() {\n            this.blendOffset++;\n        },\n        goToPrevBlendPlane() {\n            this.blendOffset--;\n        },\n        goToNextMerge0Plane() {\n            this.merge0Offset++;\n        },\n        goToPrevMerge0Plane() {\n            if(this.merge0Offset > 0) {\n               this.merge0Offset--;\n            }\n        },\n        goToNextMerge1Plane() {\n            this.merge1Offset++;\n        },\n        goToPrevMerge1Plane() {\n            if(this.merge1Offset > this.blendOffset) {\n                this.merge1Offset--;\n            }\n        },\n        goNext() {\n            this.offset++;\n            this.setInitValues();\n        },\n        goPrev() {\n            if(this.planeIndices.current > 0) {\n                this.offset--;\n            }\n            this.setInitValues();\n        },\n        goN2() {\n            this.offset+=2;\n            this.setInitValues();\n        },\n        goP2() {\n            if(this.planeIndices.current > 0) {\n                this.offset-=2;\n            }\n            this.setInitValues();\n        },\n        setInitValues() {\n            // reset the values (or get from a store when that ha been implemented)\n            this.doBlend = true;\n            this.doMerge0 = false;\n            this.doMerge1 = false;\n            this.blendOffset = 1;\n            this.merge0Offset = 2;\n            this.merge1Offset = 3;\n        },\n        exportCurrentFrame() {\n            if(this.exportOption == 0) {\n                this.$refs.main.downloadPng();\n            } else if(this.exportOption == 3) {\n                let dataString =  WpcEditStore.exportAsDataArray(this.mainPlane());\n                if(this.doBlend) {\n                    dataString += \"\\n\\n\"+ WpcEditStore.exportAsDataArray(this.blendPlane());\n                }\n                let link = document.createElement(\"a\");\n                link.href = 'data:text/plain;charset=utf-8,' + encodeURIComponent(dataString);\n                const filename = \"plane\"+this.planeIndices.current+\".txt\";\n                link.download = filename;\n                link.style.display = \"none\";\n                document.body.appendChild(link);\n                link.click();\n                link.parentNode.removeChild(link);\n            } else if(this.exportOption == 1 || this.exportOption == 2) {\n                let inverted = false;\n                if(this.exportOption == 2) {\n                    inverted = true;\n                }\n                let image = WpcEditStore.exportAs1bitBmp(this.mainPlane(),inverted);\n                let link = document.createElement(\"a\");\n                link.href = 'data:image/bmp;base64,' + image;\n                const filename = \"plane\"+this.planeIndices.current+\".bmp\";\n                link.download = filename;\n                link.style.display = \"none\";\n                document.body.appendChild(link);\n                link.click();\n                link.parentNode.removeChild(link);\n            }\n        }\n    },\n    updated() {\n        this.offset = 0;\n        this.setInitValues();\n    }\n}\n</script>\n\n<style scoped>\n.sub-dmds {\n    margin-top: var(--space-md);\n    display: grid;\n    gap: var(--space-md);\n    grid-template-columns: 1fr 1fr;\n}\n.plane {\n    justify-self: left;\n}\n.modal-body {\n    margin: 0 var(--space-md);\n}\n.in-between {\n    margin-top: var(--space-sm);\n    margin-bottom: var(--space-md);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}