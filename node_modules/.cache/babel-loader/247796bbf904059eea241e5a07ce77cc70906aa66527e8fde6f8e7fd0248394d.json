{"ast":null,"code":"require(\"core-js/modules/web.dom-exception.stack.js\");\nfunction writeBmp(arr, depth, width, height) {\n  // Borrowed from https://gist.github.com/vukicevic/8112515\n  let offset, data;\n  function conv(size) {\n    return String.fromCharCode(size & 0xff, size >> 8 & 0xff, size >> 16 & 0xff, size >> 24 & 0xff);\n  }\n  offset = depth <= 8 ? 54 + Math.pow(2, depth) * 4 : 54;\n\n  //BMP Header\n  data = 'BM'; // ID field\n  data += conv(offset + arr.length); // BMP size\n  data += conv(0); // unused\n  data += conv(offset); // pixel data offset\n\n  //DIB Header\n  data += conv(40); // DIB header length\n  data += conv(width); // image height\n  data += conv(height); // image width\n  data += String.fromCharCode(1, 0); // colour panes\n  data += String.fromCharCode(depth, 0); // bits per pixel\n  data += conv(0); // compression method\n  data += conv(arr.length); // size of the raw data\n  data += conv(2835); // horizontal print resolution\n  data += conv(2835); // vertical print resolution\n  data += conv(0); // colour palette, 0 == 2^n\n  data += conv(0); // important colours\n\n  //Grayscale tables for bit depths <= 8\n  if (depth <= 8) {\n    data += conv(0);\n    for (let s = Math.floor(255 / (Math.pow(2, depth) - 1)), i = s; i < 256; i += s) {\n      data += conv(i + i * 256 + i * 65536);\n    }\n  }\n\n  //Pixel data\n  data += String.fromCharCode.apply(String, arr);\n  return window.btoa(data);\n}\nmodule.exports = {\n  writeBmp\n};","map":{"version":3,"names":["writeBmp","arr","depth","width","height","offset","data","conv","size","String","fromCharCode","Math","pow","length","s","floor","i","apply","window","btoa","module","exports"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/helpers/export.js"],"sourcesContent":["function writeBmp(arr, depth, width, height) {\n    // Borrowed from https://gist.github.com/vukicevic/8112515\n    let offset, data;\n\n    function conv(size) {\n        return String.fromCharCode(size&0xff, (size>>8)&0xff, (size>>16)&0xff, (size>>24)&0xff);\n    }\n\n    offset = depth <= 8 ? 54 + Math.pow(2, depth)*4 : 54;\n\n    //BMP Header\n    data  = 'BM';                          // ID field\n    data += conv(offset + arr.length);     // BMP size\n    data += conv(0);                       // unused\n    data += conv(offset);                  // pixel data offset\n    \n    //DIB Header\n    data += conv(40);                       // DIB header length\n    data += conv(width);                    // image height\n    data += conv(height);                   // image width\n    data += String.fromCharCode(1, 0);      // colour panes\n    data += String.fromCharCode(depth, 0);  // bits per pixel\n    data += conv(0);                        // compression method\n    data += conv(arr.length);               // size of the raw data\n    data += conv(2835);                     // horizontal print resolution\n    data += conv(2835);                     // vertical print resolution\n    data += conv(0);                        // colour palette, 0 == 2^n\n    data += conv(0);                        // important colours\n    \n    //Grayscale tables for bit depths <= 8\n    if (depth <= 8) {\n        data += conv(0);\n        \n        for (let s = Math.floor(255/(Math.pow(2, depth)-1)), i = s; i < 256; i += s)  {\n            data += conv(i + i*256 + i*65536);\n        }\n    }\n    \n    //Pixel data\n    data += String.fromCharCode.apply(String, arr);\n\n    return window.btoa(data);\n}\n\nmodule.exports = { writeBmp }"],"mappings":";AAAA,SAASA,QAAQ,CAACC,GAAG,EAAEC,KAAK,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACzC;EACA,IAAIC,MAAM,EAAEC,IAAI;EAEhB,SAASC,IAAI,CAACC,IAAI,EAAE;IAChB,OAAOC,MAAM,CAACC,YAAY,CAACF,IAAI,GAAC,IAAI,EAAGA,IAAI,IAAE,CAAC,GAAE,IAAI,EAAGA,IAAI,IAAE,EAAE,GAAE,IAAI,EAAGA,IAAI,IAAE,EAAE,GAAE,IAAI,CAAC;EAC3F;EAEAH,MAAM,GAAGH,KAAK,IAAI,CAAC,GAAG,EAAE,GAAGS,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEV,KAAK,CAAC,GAAC,CAAC,GAAG,EAAE;;EAEpD;EACAI,IAAI,GAAI,IAAI,CAAC,CAA0B;EACvCA,IAAI,IAAIC,IAAI,CAACF,MAAM,GAAGJ,GAAG,CAACY,MAAM,CAAC,CAAC,CAAK;EACvCP,IAAI,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAuB;EACvCD,IAAI,IAAIC,IAAI,CAACF,MAAM,CAAC,CAAC,CAAkB;;EAEvC;EACAC,IAAI,IAAIC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAuB;EACxCD,IAAI,IAAIC,IAAI,CAACJ,KAAK,CAAC,CAAC,CAAoB;EACxCG,IAAI,IAAIC,IAAI,CAACH,MAAM,CAAC,CAAC,CAAmB;EACxCE,IAAI,IAAIG,MAAM,CAACC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAM;EACxCJ,IAAI,IAAIG,MAAM,CAACC,YAAY,CAACR,KAAK,EAAE,CAAC,CAAC,CAAC,CAAE;EACxCI,IAAI,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAwB;EACxCD,IAAI,IAAIC,IAAI,CAACN,GAAG,CAACY,MAAM,CAAC,CAAC,CAAe;EACxCP,IAAI,IAAIC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAqB;EACxCD,IAAI,IAAIC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAqB;EACxCD,IAAI,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAwB;EACxCD,IAAI,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAwB;;EAExC;EACA,IAAIL,KAAK,IAAI,CAAC,EAAE;IACZI,IAAI,IAAIC,IAAI,CAAC,CAAC,CAAC;IAEf,KAAK,IAAIO,CAAC,GAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,IAAEJ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEV,KAAK,CAAC,GAAC,CAAC,CAAC,CAAC,EAAEc,CAAC,GAAGF,CAAC,EAAEE,CAAC,GAAG,GAAG,EAAEA,CAAC,IAAIF,CAAC,EAAG;MAC1ER,IAAI,IAAIC,IAAI,CAACS,CAAC,GAAGA,CAAC,GAAC,GAAG,GAAGA,CAAC,GAAC,KAAK,CAAC;IACrC;EACJ;;EAEA;EACAV,IAAI,IAAIG,MAAM,CAACC,YAAY,CAACO,KAAK,CAACR,MAAM,EAAER,GAAG,CAAC;EAE9C,OAAOiB,MAAM,CAACC,IAAI,CAACb,IAAI,CAAC;AAC5B;AAEAc,MAAM,CAACC,OAAO,GAAG;EAAErB;AAAS,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}