{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-853032ce\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"scroll-area\"\n};\nconst _hoisted_2 = {\n  class: \"main-container\"\n};\nconst _hoisted_3 = {\n  class: \"content-wrapper\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PaginationBlock = _resolveComponent(\"PaginationBlock\");\n  const _component_FullFrameItem = _resolveComponent(\"FullFrameItem\");\n  const _component_FullFrameModal = _resolveComponent(\"FullFrameModal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$setup.settings.dmdsPerPage > 0 ? (_openBlock(), _createBlock(_component_PaginationBlock, {\n    key: 0,\n    class: \"pagination\",\n    onNext: $options.nextPage,\n    onPrev: $options.prevPage,\n    onStart: $options.startPage\n  }, null, 8 /* PROPS */, [\"onNext\", \"onPrev\", \"onStart\"])) : _createCommentVNode(\"v-if\", true), (_openBlock(), _createElementBlock(\"div\", {\n    class: \"fullframe-list\",\n    key: $data.currPage\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.pageLength, n => {\n    return _openBlock(), _createBlock(_component_FullFrameItem, {\n      image: $options.getFrame(n - 1),\n      key: n,\n      index: n - 1,\n      onOpen: $options.openModal\n    }, null, 8 /* PROPS */, [\"image\", \"index\", \"onOpen\"]);\n  }), 128 /* KEYED_FRAGMENT */))]))])]), _createVNode(_component_FullFrameModal, {\n    show: $data.showModal,\n    onClose: _cache[0] || (_cache[0] = $event => $data.showModal = false),\n    index: $data.activeIndex\n  }, null, 8 /* PROPS */, [\"show\", \"index\"])]);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAa;;EACjBA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAiB;;;;;uBAFhCC,oBAUM,OAVNC,UAUM,GATJC,oBAOI,OAPJC,UAOI,GANFD,oBAKI,OALJE,UAKI,GAJmBC,eAAQ,CAACC,WAAW,sBAA3CC,aAAyIC;;IAA1FT,KAAK,EAAC,YAAY;IAAEU,MAAI,EAAEC,iBAAQ;IAAGC,MAAI,EAAED,iBAAQ;IAAGE,OAAK,EAAEF;gHAC5GV,oBAEM;IAFDD,KAAK,EAAC,gBAAgB;IAAEc,GAAG,EAAEC;yBAChCd,oBAAsHe,6BAA3FL,mBAAU,EAAfM,CAAC;yBAAvBT,aAAsHU;MAA9EC,KAAK,EAAER,iBAAQ,CAACM,CAAC;MAAMH,GAAG,EAAEG,CAAC;MAAGG,KAAK,EAAEH,CAAC;MAAKI,MAAI,EAAEV;;yCAI/FW,aAAmGC;IAAlFC,IAAI,EAAET,eAAS;IAAGU,OAAK,sCAAEV,eAAS;IAAWK,KAAK,EAAEL","names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$setup","dmdsPerPage","_createBlock","_component_PaginationBlock","onNext","$options","onPrev","onStart","key","$data","_Fragment","n","_component_FullFrameItem","image","index","onOpen","_createVNode","_component_FullFrameModal","show","onClose"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/views/FullFrameView.vue"],"sourcesContent":["<template>\n    <div class=\"scroll-area\">\n      <div class=\"main-container\">\n        <div class=\"content-wrapper\">\n        <PaginationBlock v-if=\"settings.dmdsPerPage>0\" class=\"pagination\" @next=\"nextPage\" @prev=\"prevPage\" @start=\"startPage\"></PaginationBlock>\n        <div class=\"fullframe-list\" :key=\"currPage\">\n          <FullFrameItem v-for=\"n in pageLength\" :image=\"getFrame(n-1)\" :key=\"n\" :index=\"n-1\" @open=\"openModal\"></FullFrameItem>\n        </div>\n      </div>\n    </div>\n      <FullFrameModal :show=\"showModal\" @close=\"showModal = false\" :index=\"activeIndex\"></FullFrameModal>\n    </div>\n  </template>\n  \n  <script>\n    import FullFrameModal from '../components/ui/modals/FullFrameModal.vue';\n    import PaginationBlock from '../components/ui/PaginationBlock.vue';\n    import store from \"../stores/store.js\";\n    import { storeToRefs } from 'pinia';\n    import { useMainStore } from '../stores/mainStore.js';\n    import { defineAsyncComponent } from 'vue'\n    \n    const MainStore = useMainStore(store);\n\n  export default {\n    name: 'FullFrameView',\n    components: {\n        FullFrameItem : defineAsyncComponent(() =>\n          import('../components/ui/list-items/FullFrameItem.vue')\n        ),\n        PaginationBlock,\n        FullFrameModal\n    },\n    props: {\n      \n      },\n    setup() {\n      const { maxFullFrameIndex, settings } = storeToRefs(MainStore);\n      return {\n        maxFullFrameIndex,\n        settings,\n      }\n    },\n    data() {\n        return {\n          activeIndex: 0,\n          currPage: 0,\n          showModal: false\n          }\n    },\n    computed: {\n      pageLength() {\n        const setting = Number(this.settings.dmdsPerPage);\n        if(setting == 0) {\n          return this.maxFullFrameIndex;\n        } else {\n          if(setting == 1) {\n            return 16;\n          } else if(this.settings.dmdsPerPage == 2) {\n            return 24;\n          } else {\n            return 32;\n          }\n        }\n      }\n    },\n    methods: {\n      openModal(index) {\n        const offset = this.currPage*this.pageLength;\n        index += offset;\n        this.activeIndex = index;\n        this.showModal = true\n      },\n      getFrame(index) {\n        const offset = this.currPage*this.pageLength;\n        index += offset;\n        return MainStore.getFullFrameImageAt(index).image;\n      },\n      nextPage() {\n        this.currPage++;\n      },\n      prevPage() {\n        this.currPage = Math.max(0,this.currPage-1);\n      },\n      startPage() {\n        this.currPage = 0;\n      }\n    },\n    beforeRouteEnter() {\n      MainStore.setViewTitle(\"Full frame graphics\");\n      MainStore.isAtHomeView = false;\n    }\n  }\n  \n  </script>\n  \n  <style scoped>\n   .fullframe-list {\n    display: grid;\n    gap: var(--space-md);\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    margin-bottom: var(--space-lg);\n    justify-content: center;\n  }\n  @media screen and (max-width: 1024px) {\n    .fullframe-list {\n      grid-template-columns: 1fr 1fr 1fr;\n    }\n  }\n  @media screen and (max-width: 768px) {\n    .fullframe-list {\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n  @media screen and (max-width: 520px) {\n    .fullframe-list {\n      grid-template-columns: 1fr;\n    }\n  }\n  </style>\n  \n  \n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}