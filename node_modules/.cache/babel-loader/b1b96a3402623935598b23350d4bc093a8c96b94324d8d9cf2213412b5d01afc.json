{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"input\", {\n    type: \"checkbox\",\n    ref: \"checkbox\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.didChange && $options.didChange(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */);\n}","map":{"version":3,"mappings":";;uBACIA,oBAA4D;IAArDC,IAAI,EAAC,UAAU;IAACC,GAAG,EAAC,UAAU;IAAEC,QAAM,yCAAEC,iDAAS","names":["_createElementBlock","type","ref","onChange","$options"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/ui/CheckBox.vue"],"sourcesContent":["<template>\n    <input type=\"checkbox\" ref=\"checkbox\" @change=\"didChange\" />\n</template>\n\n<script>\nexport default {\n  name: 'CheckBox',\n  props: {\n  },\n  methods: {\n    didChange() {\n        const checkbox = this.$refs.checkbox;\n        const state = checkbox.checked;\n        this.$emit('change',state);\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}