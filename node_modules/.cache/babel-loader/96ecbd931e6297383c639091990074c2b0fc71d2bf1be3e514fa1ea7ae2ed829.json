{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7eff97cc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"modal-body\"\n};\nconst _hoisted_2 = {\n  class: \"sub-dmds\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ModalHeader = _resolveComponent(\"ModalHeader\");\n  const _component_MainDmd = _resolveComponent(\"MainDmd\");\n  const _component_CheckBox = _resolveComponent(\"CheckBox\");\n  const _component_SubDmd = _resolveComponent(\"SubDmd\");\n  const _component_BaseModal = _resolveComponent(\"BaseModal\");\n  return _openBlock(), _createBlock(_component_BaseModal, {\n    show: $props.show,\n    class: \"modal-mask\",\n    onClose: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n  }, {\n    default: _withCtx(() => [_createVNode(_component_ModalHeader, {\n      stepBtns: \"true\",\n      title: \"Test title\"\n    }), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_MainDmd, {\n      plane0: $options.plane0(),\n      plane1: $options.plane1()\n    }, null, 8 /* PROPS */, [\"plane0\", \"plane1\"]), _createVNode(_component_CheckBox, {\n      onChange: $options.setBlendStatus\n    }, null, 8 /* PROPS */, [\"onChange\"]), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_SubDmd, {\n      plane: $options.plane0()\n    }, null, 8 /* PROPS */, [\"plane\"]), _createVNode(_component_SubDmd, {\n      plane: $options.blendPlane()\n    }, null, 8 /* PROPS */, [\"plane\"])])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]);\n}","map":{"version":3,"mappings":";;;EAGaA,KAAK,EAAC;AAAY;;EAGdA,KAAK,EAAC;AAAU;;;;;;;uBAL7BC,aAUYC;IAVAC,IAAI,EAAEC,WAAI;IAAEJ,KAAK,EAAC,YAAY;IAAEK,OAAK,sCAAEC,UAAK;;sBACpD,MAA8D,CAA9DC,aAA8DC;MAAjDC,QAAQ,EAAC,MAAM;MAACC,KAAK,EAAC;QACnCC,oBAOM,OAPNC,UAOM,GANFL,aAAyDM;MAA/CC,MAAM,EAAEC,eAAM;MAAKC,MAAM,EAAED,eAAM;mDAC3CR,aAA8CU;MAAnCC,QAAM,EAAEH;IAAc,uCACjCJ,oBAGM,OAHNQ,UAGM,GAFFZ,aAAmCa;MAA1BC,KAAK,EAAEN,eAAM;wCACtBR,aAAuCa;MAA9BC,KAAK,EAAEN,mBAAU","names":["class","_createBlock","_component_BaseModal","show","$props","onClose","_ctx","_createVNode","_component_ModalHeader","stepBtns","title","_createElementVNode","_hoisted_1","_component_MainDmd","plane0","$options","plane1","_component_CheckBox","onChange","_hoisted_2","_component_SubDmd","plane"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/ui/modals/SpriteModal.vue"],"sourcesContent":["<template>\n    <BaseModal :show=\"show\" class=\"modal-mask\" @close=\"$emit('close')\">\n        <ModalHeader stepBtns=\"true\" title=\"Test title\"></ModalHeader>\n        <div class=\"modal-body\">\n            <MainDmd :plane0=\"plane0()\" :plane1=\"plane1()\"></MainDmd>\n            <CheckBox @change=\"setBlendStatus\"></CheckBox>\n            <div class=\"sub-dmds\">\n                <SubDmd :plane=\"plane0()\"></SubDmd>\n                <SubDmd :plane=\"blendPlane()\"></SubDmd>\n            </div>\n        </div>\n    </BaseModal>\n</template>\n\n<script>\nimport BaseModal from './BaseModal.vue';\nimport ModalHeader from './ModalHeader.vue';\nimport MainDmd from '../../dmd/MainDmd.vue';\nimport SubDmd from '../../dmd/SubDmd.vue';\nimport CheckBox from '../../ui/CheckBox.vue';\nimport store from \"../../../stores/store.js\";\nimport { useWpcEditStore } from '../../../stores/wpcEditStore.js'\n\nconst WpcEditStore = useWpcEditStore(store);\n\nexport default {\n    name: 'SpriteModal',\n    components: { \n        BaseModal,\n        ModalHeader,\n        MainDmd,\n        SubDmd,\n        CheckBox\n    },\n    setup() {\n    },\n    data() {\n        return {\n            doBlend: false,\n            blendOffset: 1\n        }\n    },\n    props: {\n        show: Boolean,\n        index: Number,\n        table: Number\n    },\n    methods: {\n        plane0() {\n            return WpcEditStore.getSpriteAt(this.table,this.index);\n        },\n        plane1() {\n            console.log(\"redraw plane\")\n            //console.log(\"plane1: \"+this.this.index+1)\n            if(this.doBlend) {\n                return this.blendPlane();\n            }\n            return WpcEditStore.getSpriteAt(this.table,this.index);\n        },\n        blendPlane() {\n            return WpcEditStore.getSpriteAt(this.table,this.index+this.blendOffset);\n        },\n        setBlendStatus(state) {\n            //console.log(state.returnValue)\n            \n            if(state == true) { // temp, to make sure the values are correct. cleanup later\n                this.doBlend = true;\n            } else if(state == false) {\n                this.doBlend = false;\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n.sub-dmds {\n    display: flex;\n    flex-flow: row;\n}\n.modal-body {\n    margin: 0 var(--space-md);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}