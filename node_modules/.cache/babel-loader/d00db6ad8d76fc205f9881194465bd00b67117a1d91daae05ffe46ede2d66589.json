{"ast":null,"code":"export default {\n  name: 'CheckBox',\n  props: {\n    label: String\n  },\n  methods: {\n    didChange() {\n      const checkbox = this.$refs.checkbox;\n      const state = checkbox.checked;\n      this.$emit('change', state);\n    }\n  }\n};","map":{"version":3,"mappings":"AAQA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACLC,KAAK,EAAEC;EACT,CAAC;EACDC,OAAO,EAAE;IACPC,SAAS,GAAG;MACR,MAAMC,QAAO,GAAI,IAAI,CAACC,KAAK,CAACD,QAAQ;MACpC,MAAME,KAAI,GAAIF,QAAQ,CAACG,OAAO;MAC9B,IAAI,CAACC,KAAK,CAAC,QAAQ,EAACF,KAAK,CAAC;IAC1B;EACJ;AACJ","names":["name","props","label","String","methods","didChange","checkbox","$refs","state","checked","$emit"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/ui/CheckBox.vue"],"sourcesContent":["<template>\n    <label class=\"label\">{{ label }}\n        <input class=\"input\" type=\"checkbox\" checked=\"checked\" ref=\"checkbox\" @change=\"didChange\">\n        <span class=\"checkmark\"></span>\n    </label>\n</template>\n\n<script>\nexport default {\n  name: 'CheckBox',\n  props: {\n    label: String\n  },\n  methods: {\n    didChange() {\n        const checkbox = this.$refs.checkbox;\n        const state = checkbox.checked;\n        this.$emit('change',state);\n        }\n    }\n}\n</script>\n\n<style scoped>\n.input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n    appearance: none;\n}\n\n.label {\n    position: relative;\n    font-size: var(--text-sm);\n    font-weight: 300;\n    padding: 0 var(--space-xxs);\n    color: var(--grey10);\n    padding-left: 3.2rem;\n}\n\n.checkmark {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 2.4rem;\n    width: 2.4rem;\n    border: 1px solid var(--grey9);\n    border-radius: 0.4rem;\n}\n\n/* On mouse-over, add a grey background color */\n.label:hover input ~ .checkmark {\n    border: 1px solid var(--grey9);\n}\n\n/* When the checkbox is checked, add a blue background */\n.input:checked ~ .checkmark {\n    border: 1px solid var(--grey9);\n}\n\n/* Create the checkmark/indicator (hidden when not checked) */\n.checkmark:after {\n    content: \"\";\n    position: absolute;\n    display: none;\n}\n\n/* Show the checkmark when checked */\n.input:checked ~ .checkmark:after {\n    display: block;\n}\n\n/* Style the checkmark/indicator */\n.label .checkmark:after {\n    position: absolute;\n    left: 4px;\n    top: 4px;\n    width: 14px;\n    height: 14px;\n    background-color: var(--grey7);\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}