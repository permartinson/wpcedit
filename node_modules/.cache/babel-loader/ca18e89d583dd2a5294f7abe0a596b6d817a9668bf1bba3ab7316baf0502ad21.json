{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-eca191c6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"save-section\"\n};\nconst _hoisted_2 = {\n  key: 2,\n  class: \"label\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_StandardButton = _resolveComponent(\"StandardButton\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.romIsAltered ? (_openBlock(), _createBlock(_component_StandardButton, {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = $event => {\n      this.$emit('unload');\n    }),\n    size: \"small\",\n    type: \"primary\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Save ROM\")]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), $props.romIsLoaded ? (_openBlock(), _createBlock(_component_StandardButton, {\n    key: 1,\n    onClick: _cache[1] || (_cache[1] = $event => {\n      this.$emit('save');\n    }),\n    size: \"small\",\n    class: \"unload\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Unload\")]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true), $props.romIsLoaded ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($props.fileName), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAc;;;EAGlBA,KAAK,EAAC;;;;uBAHbC,oBAIM,OAJNC,UAIM,GAHoBC,mBAAY,kBAAlCC,aAAwHC;;IAAnFC,OAAK;MAAA,KAAOC,KAAK;IAAA;IAAaC,IAAI,EAAC,OAAO;IAACC,IAAI,EAAC;;sBAAU,MAAQ,kBAAR,UAAQ;;2CACjFN,kBAAW,kBAAjCC,aAAmHC;;IAA/EC,OAAK;MAAA,KAAOC,KAAK;IAAA;IAAWC,IAAI,EAAC,OAAO;IAACR,KAAK,EAAC;;sBAAS,MAAM,kBAAN,QAAM;;2CAC3EG,kBAAW,kBAAlCF,oBAAsD,KAAtDS,UAAsD,mBAAfP,eAAQ","names":["class","_createElementBlock","_hoisted_1","$props","_createBlock","_component_StandardButton","onClick","$emit","size","type","_hoisted_2"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/ui/SaveSection.vue"],"sourcesContent":["<template>\n    <div class=\"save-section\">\n        <StandardButton v-if=\"romIsAltered\" @click=\"this.$emit('unload');\" size=\"small\" type=\"primary\">Save ROM</StandardButton>\n        <StandardButton v-if=\"romIsLoaded\" @click=\"this.$emit('save');\" size=\"small\" class=\"unload\">Unload</StandardButton>\n        <p class=\"label\" v-if=\"romIsLoaded\">{{ fileName }}</p>\n    </div>\n  </template>\n  \n  <script>\n  import StandardButton from '../ui/buttons/StandardButton.vue';\n  \n  export default {\n    name: 'SaveSection',\n    components: {\n        StandardButton\n    },\n    props: {\n      fileName: String,\n      romIsLoaded: Boolean,\n      romIsAltered: Boolean\n    },\n    methods: {\n    }\n  }\n  \n  </script>\n  \n  <style scoped>\n  .save-section {\n    display: flex;\n    flex-flow: row;\n    align-items: center;\n  }\n  .unload {\n    margin-left: var(--space-sm);\n  }\n  .label {\n    position: relative;\n    font-size: var(--text-sm);\n    font-weight: 300;\n    color: var(--grey10);\n    padding-left: 28px;\n    display: flex;\n    align-items: center;\n}\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}