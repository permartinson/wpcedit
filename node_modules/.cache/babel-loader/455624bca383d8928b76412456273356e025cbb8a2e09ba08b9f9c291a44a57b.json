{"ast":null,"code":"export default {\n  name: 'NumeralInput',\n  props: {\n    value: Number,\n    max: Number,\n    min: Number,\n    maxlength: Number,\n    size: String\n  },\n  computed: {\n    model: {\n      get() {\n        return this.value;\n      },\n      set(value) {\n        // limit the length of the input value, by converting back and forth to a string:\n        const input = this.$refs.input;\n        const length = value.toString().length;\n        if (length > this.maxlength) {\n          input.value = Number(value.toString().slice(0, this.maxlength));\n        }\n        this.$emit('input', value);\n      }\n    }\n  },\n  methods: {\n    getClass() {\n      let className = \"small\";\n      if (this.size == \"large\") {\n        className = \"large\";\n      }\n      return className;\n    },\n    limitLength() {\n      const input = this.$refs.input;\n      const value = input.value;\n      if (value.length >= this.maxlength) {\n        input.value = value.slice(0, this.maxlength - 1);\n      }\n    }\n  }\n};","map":{"version":3,"mappings":"AAKA,eAAe;EACbA,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE;IACLC,KAAK,EAAEC,MAAM;IACbC,GAAG,EAAED,MAAM;IACXE,GAAG,EAAEF,MAAM;IACXG,SAAS,EAAEH,MAAM;IACjBI,IAAI,EAAEC;EACR,CAAC;EACDC,QAAQ,EAAE;IACRC,KAAK,EAAE;MACHC,GAAGA,GAAG;QAAE,OAAO,IAAI,CAACT,KAAI;MAAE,CAAC;MAC3BU,GAAGA,CAACV,KAAK,EAAE;QACX;QACA,MAAMW,KAAI,GAAI,IAAI,CAACC,KAAK,CAACD,KAAK;QAC9B,MAAME,MAAK,GAAIb,KAAK,CAACc,QAAQ,CAAC,CAAC,CAACD,MAAM;QACtC,IAAGA,MAAM,GAAC,IAAI,CAACT,SAAS,EAAE;UACtBO,KAAK,CAACX,KAAI,GAAIC,MAAM,CAAED,KAAK,CAACc,QAAQ,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAC,IAAI,CAACX,SAAS,CAAC,CAAC;QACnE;QACA,IAAI,CAACY,KAAK,CAAC,OAAO,EAAEhB,KAAK,CAAC;MAC5B;IACF;EACF,CAAC;EACDiB,OAAO,EAAE;IACPC,QAAQA,GAAG;MACP,IAAIC,SAAQ,GAAI,OAAO;MACvB,IAAG,IAAI,CAACd,IAAG,IAAK,OAAO,EAAE;QACrBc,SAAQ,GAAI,OAAO;MACvB;MACA,OAAOA,SAAS;IACpB,CAAC;IACDC,WAAWA,GAAG;MACV,MAAMT,KAAI,GAAI,IAAI,CAACC,KAAK,CAACD,KAAK;MAC9B,MAAMX,KAAI,GAAIW,KAAK,CAACX,KAAI;MACxB,IAAGA,KAAK,CAACa,MAAM,IAAE,IAAI,CAACT,SAAS,EAAE;QAC7BO,KAAK,CAACX,KAAI,GAAIA,KAAK,CAACe,KAAK,CAAC,CAAC,EAAC,IAAI,CAACX,SAAS,GAAC,CAAC;MAChD;IACJ;EACF;AACF","names":["name","props","value","Number","max","min","maxlength","size","String","computed","model","get","set","input","$refs","length","toString","slice","$emit","methods","getClass","className","limitLength"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit/src/components/ui/inputs/NumeralInput.vue"],"sourcesContent":["<template>\n    <input type=\"number\" class=\"num-input\" :class=\"getClass()\" :min=\"min\" :max=\"max\" v-model=\"model\" ref=\"input\" />\n</template>\n\n<script>\nexport default {\n  name: 'NumeralInput',\n  props: {\n    value: Number,\n    max: Number,\n    min: Number,\n    maxlength: Number,\n    size: String\n  },\n  computed: {\n    model: {\n        get() { return this.value },\n        set(value) {\n        // limit the length of the input value, by converting back and forth to a string:\n        const input = this.$refs.input;\n        const length = value.toString().length;\n        if(length>this.maxlength) {\n            input.value = Number( value.toString().slice(0,this.maxlength)); \n        }\n        this.$emit('input', value);\n      }\n    }\n  },\n  methods: {\n    getClass() {\n        let className = \"small\";\n        if(this.size == \"large\") {\n            className = \"large\";\n        }\n        return className;\n    },\n    limitLength() {\n        const input = this.$refs.input;\n        const value = input.value\n        if(value.length>=this.maxlength) {\n            input.value = value.slice(0,this.maxlength-1)\n        }\n    }\n  }\n}\n</script>\n\n<style scoped>\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n/* Firefox */\ninput[type=number] {\n  -moz-appearance: textfield;\n}\n\n.num-input {\n    font-family: inherit;\n    transition: var(--hover-anim);\n    background: var(--grey5);\n    box-sizing: border-box;\n    border: 1px solid var(--grey8);\n    border-radius: var(--radius-xs);\n    font-weight: 400;\n    color: var(--grey9);\n    text-align: center;\n}\n.num-input.large {\n    height: 4.8rem;\n    font-size: var(--text-md);\n    padding: 0 var(--space-md);\n}\n.num-input.small {\n  height: 3.2rem;\n  font-size: var(--text-sm);\n  font-weight: 700;\n  padding: 0 var(--space-sm);\n}\n.num-input:hover {\n    background: var(--grey4);\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}