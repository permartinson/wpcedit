{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TopBar from './components/ui/TopBar.vue';\nimport FullFrameModal from './components/ui/modals/FullFrameModal.vue';\nimport SpriteModal from './components/ui/modals/SpriteModal.vue';\nimport DisclaimerModal from './components/ui/modals/DisclaimerModal.vue';\nimport store from \"./stores/store.js\";\nimport { storeToRefs } from 'pinia';\nimport { useAppState } from './stores/appState.js';\nimport { useWpcEditStore } from './stores/wpcEditStore.js';\nconst WpcEditStore = useWpcEditStore(store);\nexport default {\n  name: 'App',\n  components: {\n    TopBar,\n    FullFrameModal,\n    SpriteModal,\n    DisclaimerModal\n  },\n  props: {},\n  setup() {\n    const AppState = useAppState(store);\n    const {\n      viewTitle,\n      isAtHomeView,\n      romIsLoaded,\n      currentRomData\n    } = storeToRefs(AppState);\n    return {\n      viewTitle,\n      isAtHomeView,\n      romIsLoaded,\n      currentRomData\n    };\n  },\n  data() {\n    return {\n      showFullFrameModal: false,\n      showSpriteModal: false,\n      showMask: false,\n      modalProps: {\n        index: 0,\n        table: 0\n      }\n    };\n  },\n  methods: {\n    openModal(value) {\n      if (value.type == \"full\") {\n        this.showFullFrameModal = true;\n        this.modalProps.index = value.index;\n      }\n      if (value.type == \"sprite\") {\n        this.showSpriteModal = true;\n        this.modalProps.index = value.index;\n        this.modalProps.table = value.table;\n      }\n      if (value.type == \"mask\") {\n        this.showMask = true;\n      }\n      if (value.type == \"close-mask\") {\n        this.showMask = false;\n      }\n    }\n  },\n  mounted() {\n    // restore rom data from cache:\n    if (!this.romIsLoaded && this.currentRomData == null) {\n      WpcEditStore.getRomFromCache();\n    }\n    // never give access to any sub pages if no rom is loaded:\n    if (!this.romIsLoaded) {\n      this.$router.push('/');\n    }\n  }\n};","map":{"version":3,"mappings":";AAgBA,OAAOA,MAAK,MAAO,4BAA4B;AAC/C,OAAOC,cAAa,MAAO,2CAA2C;AACtE,OAAOC,WAAU,MAAO,wCAAwC;AAChE,OAAOC,eAAc,MAAO,4CAA4C;AACxE,OAAOC,KAAI,MAAO,mBAAmB;AACrC,SAASC,WAAU,QAAS,OAAO;AACnC,SAASC,WAAU,QAAS,sBAAsB;AAClD,SAASC,eAAc,QAAS,0BAA0B;AAE1D,MAAMC,YAAW,GAAID,eAAe,CAACH,KAAK,CAAC;AAE3C,eAAe;EACbK,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVV,MAAM;IACNC,cAAc;IACdC,WAAW;IACXC;EACF,CAAC;EACDQ,KAAK,EAAE,CACP,CAAC;EACDC,KAAK,GAAG;IACN,MAAMC,QAAO,GAAIP,WAAW,CAACF,KAAK,CAAC;IACnC,MAAM;MAAEU,SAAS;MAAEC,YAAY;MAAEC,WAAW;MAAEC;IAAe,IAAIZ,WAAW,CAACQ,QAAQ,CAAC;IACtF,OAAO;MACLC,SAAS;MACTC,YAAY;MACZC,WAAW;MACXC;IACF;EACF,CAAC;EACDC,IAAI,GAAG;IACL,OAAO;MACLC,kBAAkB,EAAE,KAAK;MACzBC,eAAe,EAAE,KAAK;MACtBC,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE;QACVC,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE;MACT;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,SAAS,CAACC,KAAK,EAAE;MACf,IAAGA,KAAK,CAACC,IAAG,IAAK,MAAM,EAAE;QACvB,IAAI,CAACT,kBAAiB,GAAI,IAAI;QAC9B,IAAI,CAACG,UAAU,CAACC,KAAI,GAAII,KAAK,CAACJ,KAAK;MACrC;MACA,IAAGI,KAAK,CAACC,IAAG,IAAK,QAAQ,EAAE;QACzB,IAAI,CAACR,eAAc,GAAI,IAAI;QAC3B,IAAI,CAACE,UAAU,CAACC,KAAI,GAAII,KAAK,CAACJ,KAAK;QACnC,IAAI,CAACD,UAAU,CAACE,KAAI,GAAIG,KAAK,CAACH,KAAK;MACrC;MACA,IAAGG,KAAK,CAACC,IAAG,IAAK,MAAM,EAAE;QACvB,IAAI,CAACP,QAAO,GAAI,IAAI;MACtB;MACA,IAAGM,KAAK,CAACC,IAAG,IAAK,YAAY,EAAE;QAC7B,IAAI,CAACP,QAAO,GAAI,KAAK;MACvB;IAEF;EACF,CAAC;EACDQ,OAAO,GAAG;IACR;IACA,IAAI,CAAC,IAAI,CAACb,WAAU,IAAK,IAAI,CAACC,cAAa,IAAK,IAAG,EAAI;MACrDT,YAAY,CAACsB,eAAe,EAAE;IAChC;IACA;IACA,IAAG,CAAC,IAAI,CAACd,WAAW,EAAE;MACpB,IAAI,CAACe,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB;EACF;AACF","names":["TopBar","FullFrameModal","SpriteModal","DisclaimerModal","store","storeToRefs","useAppState","useWpcEditStore","WpcEditStore","name","components","props","setup","AppState","viewTitle","isAtHomeView","romIsLoaded","currentRomData","data","showFullFrameModal","showSpriteModal","showMask","modalProps","index","table","methods","openModal","value","type","mounted","getRomFromCache","$router","push"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/App.vue"],"sourcesContent":["<template>\n  <TopBar :showBackButton=\"!isAtHomeView\" :title=\"viewTitle\"/>\n  <div class=\"scroll-area\">\n    <router-view v-slot=\"{ Component, route }\" class=\"main-container\">\n      <transition :name=\"route.meta.transition\">\n        <component :is=\"Component\" @modal=\"openModal\" />\n      </transition>\n    </router-view>\n  </div>\n  <FullFrameModal :show=\"showFullFrameModal\" @close=\"showFullFrameModal = false\" :index=\"modalProps.index\"></FullFrameModal>\n  <SpriteModal :show=\"showSpriteModal\" @close=\"showSpriteModal = false\" :index=\"modalProps.index\" :table=\"modalProps.table\"></SpriteModal>\n  <div class=\"modal-mask\" v-if=\"showMask\"></div>\n\n</template>\n\n<script>\nimport TopBar from './components/ui/TopBar.vue';\nimport FullFrameModal from './components/ui/modals/FullFrameModal.vue';\nimport SpriteModal from './components/ui/modals/SpriteModal.vue';\nimport DisclaimerModal from './components/ui/modals/DisclaimerModal.vue';\nimport store from \"./stores/store.js\";\nimport { storeToRefs } from 'pinia';\nimport { useAppState } from './stores/appState.js';\nimport { useWpcEditStore } from './stores/wpcEditStore.js';\n\nconst WpcEditStore = useWpcEditStore(store);\n\nexport default {\n  name: 'App',\n  components: {\n    TopBar,\n    FullFrameModal,\n    SpriteModal,\n    DisclaimerModal\n  },\n  props: {\n  },\n  setup() {\n    const AppState = useAppState(store);\n    const { viewTitle, isAtHomeView, romIsLoaded, currentRomData } = storeToRefs(AppState);\n    return {\n      viewTitle,\n      isAtHomeView,\n      romIsLoaded,\n      currentRomData\n    }\n  },\n  data() {\n    return {\n      showFullFrameModal: false,\n      showSpriteModal: false,\n      showMask: false,\n      modalProps: {\n        index: 0,\n        table: 0\n      }\n    }\n  },\n  methods: {\n    openModal(value) {\n      if(value.type == \"full\") {\n        this.showFullFrameModal = true;\n        this.modalProps.index = value.index;\n      }\n      if(value.type == \"sprite\") {\n        this.showSpriteModal = true;\n        this.modalProps.index = value.index;\n        this.modalProps.table = value.table;\n      }\n      if(value.type == \"mask\") {\n        this.showMask = true;\n      }\n      if(value.type == \"close-mask\") {\n        this.showMask = false;\n      }\n\n    }\n  },\n  mounted() {\n    // restore rom data from cache:\n    if( !this.romIsLoaded && this.currentRomData == null ) {\n      WpcEditStore.getRomFromCache();\n    }\n    // never give access to any sub pages if no rom is loaded:\n    if(!this.romIsLoaded) {\n      this.$router.push('/');\n    }\n  }\n}\n\n</script>\n\n<style>\n  @import './assets/variables.css';\n  @import './assets/graphics.css';\n  @import url('https://fonts.googleapis.com/css2?family=Inria+Sans:wght@300;400;700&display=swap');\n\n  html {\n    font-size: 62.5%;\n    font-family: 'Inria Sans', sans-serif;\n  } \n  \n  body {\n    background: var(--grey2);\n    overflow: hidden;\n  }\n\n  #app {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  .scroll-area {\n    position: absolute;\n    top: 6rem;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    overflow-y: auto;\n  }\n\n  .headline {\n    font-weight: 700;\n    font-size: var(--text-lg);\n    color: var(--grey9);\n    margin: var(--space-md) 0;\n  }\n\n  .body-sm {\n    font-weight: 400;\n    font-size: var(--text-sm);\n    line-height: var(--text-leading-sm);\n    color: var(--grey9);\n    width: 100%;\n    margin: 0;\n    margin-bottom: var(--space-md);\n    max-width: 66rem;\n  }\n  \n  .label-md {\n    font-weight: 700;\n    font-size: var(--text-md);\n    line-height: var(--text-leading-sm);\n    color: var(--grey9);\n    margin: 0;\n  }\n  .label-sm {\n    font-weight: 300;\n    font-size: var(--text-sm);\n    line-height: var(--text-leading-sm);\n    color: var(--grey9);\n    margin: 0;\n  }\n  .text-accent {\n    color: var(--accent);\n  }\n\n  .main-container {\n    position: absolute;\n    width: 102rem;\n    top: 6rem;\n    left: 50%;\n    transform: translate(-50%, 0);\n  }\n\n  hr {\n    border-style: solid;\n    border-color: var(--grey7);\n    margin: var(--space-lg) 0;\n  }\n\n  .modal-mask {\n    z-index: 1000;\n    position: fixed;\n    right: 100%;\n    inset: 0;\n    background: rgba(0.3,0.3,0.3,0.75);\n    display: grid;\n    place-items: center;\n  }\n\n\n  .slide-left-enter-active {\n    transition: all 1s ease-out;\n  }\n  .slide-left-enter-from,\n  .slide-left-leave-to {\n    /*transform: translateX(100%);*/\n    opacity: 0;\n  }\n</style>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}