{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4f599ea2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"headline\"\n}, \"Display style\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"headline\"\n}, \"Make in-betweening optional\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"body-sm\"\n}, \"Some of the DMD encodings rely on previous frames to render completely. In the DMD viewer, ther is an option to apply another frame on top of the current frame. Per default, WPC Edit tries its best to render all the in-between frames to get a proper output, but you may make this optional by turning off the setting below:\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"headline\"\n}, \"DMD graphics per page\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"body-sm\"\n}, \"Rendering many DMD images at once can be perfomance-intense. If you experience issues, you may reduce the amount of DMD images per page in the Full Frame and Sprite listings.\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"headline\"\n}, \"Other options\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"headline\"\n}, \"About WPC Edit\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"body-sm\"\n}, \"WPC Edit was first developed and released in 2004 by Garrett Lee as a Windows app. In 2023, Per Martinson took on the challange to transition the code base to Javascript and turn it into a web app. All the code is open source, and you may help improving it at \", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_MainDmd = _resolveComponent(\"MainDmd\");\n  const _component_SelectInput = _resolveComponent(\"SelectInput\");\n  const _component_CheckBox = _resolveComponent(\"CheckBox\");\n  const _component_StandardButton = _resolveComponent(\"StandardButton\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_MainDmd, {\n    plane0: $data.plane0,\n    plane1: $data.plane1,\n    index: 0,\n    ref: \"main\"\n  }, null, 8 /* PROPS */, [\"plane0\", \"plane1\"]), _createVNode(_component_SelectInput, {\n    name: \"dmdstyle\",\n    options: $data.dmdOptions,\n    onChange: $options.setDmdStyle,\n    class: \"dmd-style-select\"\n  }, null, 8 /* PROPS */, [\"options\", \"onChange\"]), _hoisted_2, _hoisted_3, _createVNode(_component_CheckBox, {\n    class: \"in-between\",\n    onChange: $options.setIntbetween,\n    checked: false,\n    label: \"Add option for in-between\",\n    ref: \"inBetween\"\n  }, null, 8 /* PROPS */, [\"onChange\"]), _hoisted_4, _hoisted_5, _createVNode(_component_SelectInput, {\n    name: \"perpage\",\n    options: $data.paginationOptions,\n    onChange: $options.setPagination,\n    class: \"pagination-select\"\n  }, null, 8 /* PROPS */, [\"options\", \"onChange\"]), _hoisted_6, _createVNode(_component_StandardButton, {\n    size: \"small\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.resetWarnings())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Reset all warning messages\")]),\n    _: 1 /* STABLE */\n  }), _hoisted_7, _hoisted_8, _hoisted_9]);\n}","map":{"version":3,"mappings":";;gEAEQA,oBAAqC;EAAlCC,KAAK,EAAC;AAAU,GAAC,eAAa;gEAMjCD,oBAAmD;EAAhDC,KAAK,EAAC;AAAU,GAAC,6BAA2B;gEAC/CD,oBAAyV;EAAtVC,KAAK,EAAC;AAAS,GAAC,oUAAkU;gEAGrVD,oBAA6C;EAA1CC,KAAK,EAAC;AAAU,GAAC,uBAAqB;gEACzCD,oBAAqM;EAAlMC,KAAK,EAAC;AAAS,GAAC,gLAA8K;gEAGjMD,oBAAqC;EAAlCC,KAAK,EAAC;AAAU,GAAC,eAAa;gEAGjCD,oBAAK;gEACLA,oBAAsC;EAAnCC,KAAK,EAAC;AAAU,GAAC,gBAAc;gEAClCD,oBAA2R;EAAxRC,KAAK,EAAC;AAAS,GAAC,sQAAoQ;;;;;;;uBApB3RC,oBAsBM,cArBFC,UAAqC,EAErCC,aAA2EC;IAAjEC,MAAM,EAAEC,YAAM;IAAGC,MAAM,EAAED,YAAM;IAAGE,KAAK,EAAE,CAAC;IAAEC,GAAG,EAAC;iDAE1DN,aAAgHO;IAAnGC,IAAI,EAAC,UAAU;IAAEC,OAAO,EAAEN,gBAAU;IAAGO,QAAM,EAAEC,oBAAW;IAAEd,KAAK,EAAC;oDAE/Ee,UAAmD,EACnDC,UAAyV,EACzVb,aAAmIc;IAAzHjB,KAAK,EAAC,YAAY;IAAEa,QAAM,EAAEC,sBAAa;IAAGI,OAAO,EAAE,KAAK;IAAEC,KAAK,EAAC,2BAA2B;IAACV,GAAG,EAAC;yCAE5GW,UAA6C,EAC7CC,UAAqM,EACrMlB,aAAyHO;IAA5GC,IAAI,EAAC,SAAS;IAAEC,OAAO,EAAEN,uBAAiB;IAAGO,QAAM,EAAEC,sBAAa;IAAEd,KAAK,EAAC;oDAEvFsB,UAAqC,EACrCnB,aAAiGoB;IAAjFC,IAAI,EAAC,OAAO;IAAEC,OAAK,sCAAEX,sBAAa;;sBAAI,MAA0B,kBAA1B,4BAA0B;;MAEhFY,UAAK,EACLC,UAAsC,EACtCC,UAA2R","names":["_createElementVNode","class","_createElementBlock","_hoisted_1","_createVNode","_component_MainDmd","plane0","$data","plane1","index","ref","_component_SelectInput","name","options","onChange","$options","_hoisted_2","_hoisted_3","_component_CheckBox","checked","label","_hoisted_4","_hoisted_5","_hoisted_6","_component_StandardButton","size","onClick","_hoisted_7","_hoisted_8","_hoisted_9"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/views/SettingsView.vue"],"sourcesContent":["<template>\n    <div>\n        <p class=\"headline\">Display style</p>\n\n        <MainDmd :plane0=\"plane0\" :plane1=\"plane1\" :index=\"0\" ref=\"main\"></MainDmd>\n\n        <SelectInput name=\"dmdstyle\" :options=\"dmdOptions\" @change=\"setDmdStyle\" class=\"dmd-style-select\"></SelectInput>\n\n        <p class=\"headline\">Make in-betweening optional</p>\n        <p class=\"body-sm\">Some of the DMD encodings rely on previous frames to render completely. In the DMD viewer, ther is an option to apply another frame on top of the current frame. Per default, WPC Edit tries its best to render all the in-between frames to get a proper output, but you may make this optional by turning off the setting below:</p>\n        <CheckBox class=\"in-between\" @change=\"setIntbetween\" :checked=\"false\" label=\"Add option for in-between\" ref=\"inBetween\"></CheckBox>\n\n        <p class=\"headline\">DMD graphics per page</p>\n        <p class=\"body-sm\">Rendering many DMD images at once can be perfomance-intense. If you experience issues, you may reduce the amount of DMD images per page in the Full Frame and Sprite listings.</p>\n        <SelectInput name=\"perpage\" :options=\"paginationOptions\" @change=\"setPagination\" class=\"pagination-select\"></SelectInput>\n\n        <p class=\"headline\">Other options</p>\n        <StandardButton size=\"small\" @click=\"resetWarnings()\">Reset all warning messages</StandardButton>\n        \n        <hr/>\n        <p class=\"headline\">About WPC Edit</p>\n        <p class=\"body-sm\">WPC Edit was first developed and released in 2004 by Garrett Lee as a Windows app. In 2023, Per Martinson took on the challange to transition the code base to Javascript and turn it into a web app. All the code is open source, and you may help improving it at </p>\n\n    </div>\n</template>\n\n<script>\n    import StandardButton from '../components/ui/buttons/StandardButton.vue';\n    import MainDmd from '../components/dmd/MainDmd.vue';\n    import SelectInput from '../components/ui/inputs/SelectInput.vue';\n    import CheckBox from '../components/ui/CheckBox.vue';\n    import store from \"../stores/store.js\";\n    import { useAppState } from '../stores/appState.js';\n    import { useWpcEditStore } from '../stores/wpcEditStore.js';\n    import { storeToRefs } from 'pinia';\n\n    const AppState = useAppState(store);\n    const WpcEditStore = useWpcEditStore(store);\n\n    export default {\n      name: 'SettingsView',\n      components: {\n        StandardButton,\n        MainDmd,\n        SelectInput,\n        CheckBox\n      },\n      props: {\n      },\n      data() { \n        const plane0 = Uint8Array.from([0, 0, 0, 0, 0, 16, 0, 128, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 222, 63, 96, 244, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 127, 160, 255, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0, 255, 255, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244, 0, 0, 255, 63, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 2, 0, 254, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 24, 0, 224, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 4, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 56, 38, 0, 0, 0, 0, 0, 16, 6, 64, 0, 0, 0, 0, 0, 0, 248, 32, 0, 0, 0, 32, 0, 0, 4, 2, 0, 0, 0, 0, 0, 0, 248, 39, 0, 0, 0, 0, 192, 8, 196, 63, 58, 0, 0, 0, 0, 0, 155, 35, 0, 0, 0, 96, 64, 8, 2, 240, 31, 128, 1, 0, 0, 0, 49, 32, 0, 0, 128, 101, 64, 8, 2, 16, 32, 0, 1, 0, 0, 128, 240, 55, 8, 0, 128, 97, 8, 8, 4, 0, 2, 0, 2, 0, 0, 128, 48, 152, 1, 0, 32, 38, 0, 152, 252, 255, 153, 15, 2, 0, 0, 64, 240, 23, 5, 0, 32, 36, 64, 0, 223, 15, 60, 3, 4, 0, 0, 96, 48, 247, 114, 42, 33, 76, 204, 59, 58, 29, 222, 113, 12, 0, 0, 32, 144, 231, 183, 147, 100, 76, 8, 100, 250, 139, 235, 60, 8, 0, 0, 48, 112, 224, 255, 239, 231, 201, 140, 73, 255, 51, 8, 31, 24, 0, 0, 48, 248, 129, 255, 255, 227, 201, 120, 151, 223, 255, 20, 15, 24, 0, 0, 16, 24, 138, 255, 255, 226, 195, 240, 166, 62, 255, 255, 33, 16, 0, 0, 56, 252, 155, 0, 224, 199, 237, 243, 129, 255, 253, 15, 192, 56, 0, 0, 152, 125, 0, 0, 216, 255, 207, 243, 199, 255, 227, 3, 192, 51, 0, 0, 152, 4, 28, 0, 252, 255, 255, 255, 231, 255, 31, 1, 128, 51, 0, 0, 128, 126, 3, 0, 158, 254, 255, 255, 255, 255, 127, 0, 0, 3, 0, 0, 16, 254, 1, 0, 98, 251, 255, 255, 255, 255, 31, 0, 0, 16, 0, 0, 24, 126, 0, 0, 255, 221, 255, 255, 255, 255, 3, 0, 0, 48, 0, 0, 24, 12, 0, 0, 63, 188, 255, 255, 191, 123, 0, 0, 0, 48, 0, 0, 8, 0, 0, 0, 193, 207, 251, 255, 239, 2, 0, 0, 0, 32, 0, 0, 24, 0, 0, 0, 127, 124, 0, 0, 176, 3, 0, 0, 0, 48, 0, 0, 16, 0, 0, 0, 135, 31, 0, 0, 208, 5, 0, 0, 0, 16, 0]);\n        const plane1 = Uint8Array.from([0, 0, 0, 0, 0, 224, 63, 0, 184, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 0, 128, 11, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 223, 252, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 43, 247, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 191, 189, 245, 1, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 192, 127, 231, 110, 95, 15, 0, 0, 0, 0, 0, 0, 190, 1, 0, 0, 226, 218, 250, 255, 255, 58, 0, 0, 0, 0, 0, 0, 200, 7, 0, 16, 251, 255, 255, 255, 255, 255, 3, 0, 0, 0, 0, 0, 48, 123, 0, 64, 239, 255, 255, 239, 255, 255, 31, 0, 0, 0, 0, 0, 192, 217, 0, 240, 251, 255, 255, 239, 249, 191, 127, 0, 0, 0, 0, 0, 0, 159, 3, 124, 255, 223, 255, 255, 251, 253, 255, 0, 0, 0, 0, 0, 16, 216, 255, 255, 255, 255, 63, 247, 59, 194, 197, 3, 0, 0, 0, 0, 99, 220, 190, 251, 255, 159, 191, 247, 253, 15, 128, 207, 1, 0, 0, 0, 197, 223, 255, 255, 127, 154, 191, 247, 253, 239, 79, 63, 1, 0, 0, 128, 7, 200, 247, 255, 127, 158, 247, 247, 251, 255, 77, 127, 3, 0, 0, 128, 194, 103, 254, 255, 223, 217, 31, 96, 51, 208, 31, 132, 2, 0, 0, 64, 3, 232, 250, 255, 223, 219, 175, 199, 32, 224, 199, 115, 5, 0, 0, 224, 193, 8, 141, 213, 222, 179, 163, 20, 197, 242, 195, 13, 15, 0, 0, 96, 97, 24, 72, 108, 155, 179, 231, 155, 229, 85, 228, 70, 13, 0, 0, 240, 176, 31, 0, 16, 24, 54, 19, 182, 208, 191, 23, 30, 30, 0, 0, 240, 0, 126, 0, 0, 28, 54, 7, 123, 40, 127, 240, 15, 30, 0, 0, 240, 241, 117, 255, 63, 29, 60, 15, 94, 137, 255, 255, 113, 31, 0, 0, 248, 1, 100, 0, 192, 56, 18, 12, 112, 3, 252, 63, 240, 63, 0, 0, 248, 129, 127, 0, 224, 1, 48, 12, 60, 87, 246, 7, 224, 63, 0, 0, 248, 250, 3, 0, 204, 31, 0, 0, 88, 248, 223, 1, 224, 63, 0, 0, 248, 128, 4, 0, 110, 126, 50, 32, 96, 254, 127, 0, 192, 63, 0, 0, 248, 0, 0, 0, 158, 59, 134, 7, 128, 255, 31, 0, 128, 63, 0, 0, 248, 32, 0, 0, 14, 222, 255, 119, 249, 255, 3, 0, 128, 63, 0, 0, 248, 1, 0, 0, 195, 131, 255, 255, 31, 96, 0, 0, 0, 63, 0, 0, 248, 0, 0, 0, 62, 49, 250, 255, 15, 13, 0, 0, 0, 62, 0, 0, 248, 0, 0, 0, 135, 3, 0, 0, 112, 15, 0, 0, 0, 62, 0, 0, 240, 0, 0, 0, 126, 0, 0, 0, 176, 11, 0, 0, 0, 30, 0]);\n        // fetch the selected export option and create an object to pass the data for the selector\n        const dmdOptions = new Array();\n        const dmdLabels = [\n            'Simulated plasma display',\n            'Orange dots',\n            'White dots',\n            'White squares'\n        ]\n        for(let i=0;i<dmdLabels.length;i++) {\n            const selected = (i == this.exportOption);\n            dmdOptions.push({value:i,label:dmdLabels[i],selected:selected})\n        }\n        const paginationOptions = new Array();\n        const paginationLabels = [\n            'Infinite',\n            '8',\n            '16',\n            '32'\n        ]\n        for(let i=0;i<paginationLabels.length;i++) {\n            const selected = (i == this.exportOption);\n            paginationOptions.push({value:i,label:paginationLabels[i],selected:selected})\n        }\n          return {\n            inputVal: Number(this.versionByte),\n            checksumFeedbackClass: 'hidden',\n            disableFeedbackClass: 'hidden',\n            checksumFeedbackMsg: '',\n            disableFeedbackMsg: '',\n            plane0: plane0,\n            plane1: plane1,\n            dmdOptions: dmdOptions,\n            paginationOptions: paginationOptions,\n          }\n      },\n      setup() {\n        const { settings } = storeToRefs(WpcEditStore);\n        return {\n            settings\n        }\n      },\n      beforeRouteEnter() {\n        AppState.setViewTitle(\"Settings\");\n        AppState.isAtHomeView = false;\n      },\n      methods: {\n        setDmdStyle() {\n            console.log('DMD style')\n        },\n        setIntbetween() {\n\n        },\n        setPagination() {\n\n        },\n        resetWarnings() {\n            WpcEditStore.resetWarnings();\n        }\n      }\n    }\n  </script>\n\n<style scoped>\n.dmd-style-select {\n    width: 30rem;\n}\n.pagination-select {\n    width: 12rem;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}