{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4f599ea2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<p class=\\\"headline\\\" data-v-4f599ea2>Display style</p><p class=\\\"body-sm\\\" data-v-4f599ea2>Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.</p><p class=\\\"headline\\\" data-v-4f599ea2>Make auto-sequencing optional</p><p class=\\\"body-sm\\\" data-v-4f599ea2>Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.</p><p class=\\\"headline\\\" data-v-4f599ea2>DMD graphics per page</p><p class=\\\"body-sm\\\" data-v-4f599ea2>Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.</p><p class=\\\"headline\\\" data-v-4f599ea2>Other options</p><p class=\\\"body-sm\\\" data-v-4f599ea2>Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.</p><hr data-v-4f599ea2><p class=\\\"headline\\\" data-v-4f599ea2>About WPC Edit</p><p class=\\\"body-sm\\\" data-v-4f599ea2>Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.</p>\", 11);\nconst _hoisted_12 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _hoisted_12);\n}","map":{"version":3,"mappings":";;;qBAEQA,UAAqC;;uBADzCC,oBAiBM","names":["_hoisted_1","_createElementBlock"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/views/SettingsView.vue"],"sourcesContent":["<template>\n    <div>\n        <p class=\"headline\">Display style</p>\n        <p class=\"body-sm\">Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.</p>\n\n        <p class=\"headline\">Make auto-sequencing optional</p>\n        <p class=\"body-sm\">Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.</p>\n\n        <p class=\"headline\">DMD graphics per page</p>\n        <p class=\"body-sm\">Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.</p>\n\n        <p class=\"headline\">Other options</p>\n        <p class=\"body-sm\">Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.</p>\n\n        <hr/>\n        <p class=\"headline\">About WPC Edit</p>\n        <p class=\"body-sm\">Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.</p>\n\n    </div>\n</template>\n\n<script>\n    import StandardButton from '../components/ui/buttons/StandardButton.vue'\n    import NumeralInput from '../components/ui/inputs/NumeralInput.vue'\n    import LargeIcon from '../components/icons/LargeIcon.vue'\n    import store from \"../stores/store.js\";\n    import { useAppState } from '../stores/appState.js';\n    import { useWpcEditStore } from '../stores/wpcEditStore.js';\n    import { storeToRefs } from 'pinia';\n\n    const AppState = useAppState(store);\n    const WpcEditStore = useWpcEditStore(store);\n\n    export default {\n      name: 'SettingsView',\n      components: {\n        StandardButton,\n        NumeralInput,\n        LargeIcon\n      },\n      props: {\n      },\n      data() {\n          return {\n            inputVal: Number(this.versionByte),\n            checksumFeedbackClass: 'hidden',\n            disableFeedbackClass: 'hidden',\n            checksumFeedbackMsg: '',\n            disableFeedbackMsg: ''\n          }\n      },\n      setup() {\n        const { romIsLoaded, romIsAltered, storedChecksum, calculatedChecksum, fixupBytes, versionByte, checksumIsValid } = storeToRefs(WpcEditStore);\n        return {\n            romIsLoaded, romIsAltered, storedChecksum, calculatedChecksum, fixupBytes, versionByte, checksumIsValid\n        }\n      },\n      beforeRouteEnter() {\n        AppState.setViewTitle(\"Settings\");\n        AppState.isAtHomeView = false;\n      },\n      methods: {\n        updateChecksum() {\n            const newVersion = this.inputVal;\n            this.checksumFeedbackClass = 'hidden';\n            setTimeout(() => {\n                const result = WpcEditStore.updateChecksum(newVersion);\n                if(result == 1) {\n                    this.checksumFeedbackMsg = 'The checksum was successfully updated!';\n                } else if (result == 0) {\n                    this.checksumFeedbackMsg = 'The version byte matches the current checksum, no need to update';\n                } else {\n                    this.checksumFeedbackMsg = 'Was not able to figure out a new checksum :(';\n                }\n                this.checksumFeedbackClass = 'show';\n            }, 500);\n        },\n        disableChecksum() {\n            this.disableFeedbackClass = 'hidden';\n            setTimeout(() => {\n                if (WpcEditStore.disableChecksum() == 1) {\n                    this.disableFeedbackMsg = 'The checksum is now disabled.';\n                } else {\n                    this.disableFeedbackMsg = 'An error occured while trying to disable.';\n                }\n                this.disableFeedbackClass = 'show';\n            }, 500);\n        },\n        updateInput(event) {\n            this.inputVal = event.target.value;\n        }\n      }\n    }\n  </script>\n\n<style scoped>\n.info-container {\n    padding: 1.6rem;\n    width: 49rem;\n    border: 1px solid var(--grey7);\n    border-radius: var(--radius-md);\n    margin-bottom: var(--space-lg);\n}\n.info-row {\n    display: flex;\n    flex-direction: row;\n    margin-top: var(--space-md);\n}\n.info-col {\n    width: 50%;\n}\n.checksum-form {\n    display: flex;\n    flex-direction: row;\n}\n.version-input {\n    width: 18rem;\n    margin-right: var(--space-md);\n}\n.status-msg {\n    display: flex;\n    align-items: center;\n}\n.status-msg .icon {\n    margin-right: var(--space-sm);\n    background-color: var(--accent);\n}\n.feedback-msg {\n    margin-top: var(--space-sm);\n    opacity: 1;\n    transition: opacity 1s;\n}\n.feedback-msg.hidden {\n    opacity: 0;\n    transition: opacity 0.2s;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}