{"ast":null,"code":"import StandardButton from '../components/ui/buttons/StandardButton.vue';\nimport NumeralInput from '../components/ui/inputs/NumeralInput.vue';\nimport store from \"../stores/store.js\";\nimport { useAppState } from '../stores/appState.js';\nimport { useWpcEditStore } from '../stores/wpcEditStore.js';\nimport { storeToRefs } from 'pinia';\nconst AppState = useAppState(store);\nconst WpcEditStore = useWpcEditStore(store);\nexport default {\n  name: 'ChecksumView',\n  components: {\n    StandardButton,\n    NumeralInput\n  },\n  props: {},\n  data() {\n    return {\n      inputVal: Number(this.versionByte)\n    };\n  },\n  setup() {\n    const {\n      romIsLoaded,\n      romIsAltered,\n      storedChecksum,\n      calculatedChecksum,\n      fixupBytes,\n      versionByte,\n      checksumIsValid\n    } = storeToRefs(WpcEditStore);\n    return {\n      romIsLoaded,\n      romIsAltered,\n      storedChecksum,\n      calculatedChecksum,\n      fixupBytes,\n      versionByte,\n      checksumIsValid\n    };\n  },\n  beforeRouteEnter() {\n    AppState.setViewTitle(\"Checksum tool\");\n    AppState.isAtHomeView = false;\n  },\n  methods: {\n    updateChecksum() {\n      const newVersion = this.$refs.version.value;\n      console.log(newVersion);\n      WpcEditStore.updateChecksum(newVersion);\n    },\n    disableChecksum() {\n      WpcEditStore.disableChecksum();\n    },\n    updateInput(event) {\n      this.inputVal = event.value;\n    }\n  }\n};","map":{"version":3,"mappings":"AA0CI,OAAOA,cAAa,MAAO,6CAA4C;AACvE,OAAOC,YAAW,MAAO,0CAAyC;AAClE,OAAOC,KAAI,MAAO,oBAAoB;AACtC,SAASC,WAAU,QAAS,uBAAuB;AACnD,SAASC,eAAc,QAAS,2BAA2B;AAC3D,SAASC,WAAU,QAAS,OAAO;AAEnC,MAAMC,QAAO,GAAIH,WAAW,CAACD,KAAK,CAAC;AACnC,MAAMK,YAAW,GAAIH,eAAe,CAACF,KAAK,CAAC;AAE3C,eAAe;EACbM,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACVT,cAAc;IACdC;EACF,CAAC;EACDS,KAAK,EAAE,CACP,CAAC;EACDC,IAAI,GAAG;IACH,OAAO;MACLC,QAAQ,EAAEC,MAAM,CAAC,IAAI,CAACC,WAAW;IACnC;EACJ,CAAC;EACDC,KAAK,GAAG;IACN,MAAM;MAAEC,WAAW;MAAEC,YAAY;MAAEC,cAAc;MAAEC,kBAAkB;MAAEC,UAAU;MAAEN,WAAW;MAAEO;IAAgB,IAAIhB,WAAW,CAACE,YAAY,CAAC;IAC7I,OAAO;MACHS,WAAW;MAAEC,YAAY;MAAEC,cAAc;MAAEC,kBAAkB;MAAEC,UAAU;MAAEN,WAAW;MAAEO;IAC5F;EACF,CAAC;EACDC,gBAAgB,GAAG;IACjBhB,QAAQ,CAACiB,YAAY,CAAC,eAAe,CAAC;IACtCjB,QAAQ,CAACkB,YAAW,GAAI,KAAK;EAC/B,CAAC;EACDC,OAAO,EAAE;IACPC,cAAc,GAAG;MACb,MAAMC,UAAS,GAAI,IAAI,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK;MAC3CC,OAAO,CAACC,GAAG,CAACL,UAAU;MACtBpB,YAAY,CAACmB,cAAc,CAACC,UAAU,CAAC;IAC3C,CAAC;IACDM,eAAe,GAAG;MACd1B,YAAY,CAAC0B,eAAe,EAAE;IAClC,CAAC;IACDC,WAAW,CAACC,KAAK,EAAE;MACf,IAAI,CAACvB,QAAO,GAAIuB,KAAK,CAACL,KAAK;IAC/B;EACF;AACF","names":["StandardButton","NumeralInput","store","useAppState","useWpcEditStore","storeToRefs","AppState","WpcEditStore","name","components","props","data","inputVal","Number","versionByte","setup","romIsLoaded","romIsAltered","storedChecksum","calculatedChecksum","fixupBytes","checksumIsValid","beforeRouteEnter","setViewTitle","isAtHomeView","methods","updateChecksum","newVersion","$refs","version","value","console","log","disableChecksum","updateInput","event"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/views/ChecksumView.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"info-container\">\n            <p v-if=\"checksumIsValid && fixupBytes!='00FF'\" class=\"label-md text-accent\">The checksum in this ROM is valid</p>\n            <p v-if=\"!checksumIsValid && fixupBytes!='00FF'\" class=\"label-md text-accent\" ref=\"invalid\">The checksum in this ROM is invalid</p>\n            <p v-if=\"fixupBytes=='00FF'\" class=\"label-md text-accent\" ref=\"invalid\">The checksum has been disabled in this ROM</p>\n            <div class=\"info-row\">\n                <div class=\"info-col\">\n                    <p class=\"label-sm\">Current checksum</p>\n                    <p class=\"label-md\">{{ storedChecksum }}</p>\n                </div>\n                <div class=\"info-col\">\n                    <p class=\"label-sm\">Fixup bytes</p>\n                    <p class=\"label-md\">{{ fixupBytes }}</p>\n                </div>\n            </div>\n            <div class=\"info-row\">\n                <div class=\"info-col\">\n                    <p class=\"label-sm\">Calculated checksum</p>\n                    <p class=\"label-md\">{{ calculatedChecksum }}</p>\n                </div>\n                <div class=\"info-col\">\n                    <p class=\"label-sm\">Version byte</p>\n                    <p class=\"label-md\">{{ versionByte }}</p>\n                </div>\n            </div>\n        </div>\n        <p class=\"headline\">Calculate and update checksum</p>\n        <p class=\"body-sm\">Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.</p>\n        <p class=\"headline\">Desired game version:</p>\n        <div class=\"checksum-form\">\n            <NumeralInput size=\"large\" :value=\"this.inputVal\" :maxlength=\"2\" :min=\"1\" :max=\"99\" class=\"version-input\" ref=\"version\" @change=\"updateInput\"></NumeralInput>\n            <StandardButton size=\"large\" type=\"primary\" @click=\"updateChecksum()\">Update checksum</StandardButton>\n        </div>\n        <hr/>\n        <p class=\"headline\">Disable checksum</p>\n        <p class=\"body-sm\">The checksum may be temporarily disabled while debugging ROM. This is done by setting the fixup bytes to 0xFF00. This will also remove other startup tests. Once the modified ROM is ready, you should always insert a correct checksum using the tool above so that the game will alert you about any errors.</p>\n        <StandardButton size=\"large\" type=\"primary\" @click=\"disableChecksum()\">Disable checksum</StandardButton>\n    </div>\n</template>\n\n<script>\n    import StandardButton from '../components/ui/buttons/StandardButton.vue'\n    import NumeralInput from '../components/ui/inputs/NumeralInput.vue'\n    import store from \"../stores/store.js\";\n    import { useAppState } from '../stores/appState.js';\n    import { useWpcEditStore } from '../stores/wpcEditStore.js';\n    import { storeToRefs } from 'pinia';\n\n    const AppState = useAppState(store);\n    const WpcEditStore = useWpcEditStore(store);\n\n    export default {\n      name: 'ChecksumView',\n      components: {\n        StandardButton,\n        NumeralInput\n      },\n      props: {\n      },\n      data() {\n          return {\n            inputVal: Number(this.versionByte)\n          }\n      },\n      setup() {\n        const { romIsLoaded, romIsAltered, storedChecksum, calculatedChecksum, fixupBytes, versionByte, checksumIsValid } = storeToRefs(WpcEditStore);\n        return {\n            romIsLoaded, romIsAltered, storedChecksum, calculatedChecksum, fixupBytes, versionByte, checksumIsValid\n        }\n      },\n      beforeRouteEnter() {\n        AppState.setViewTitle(\"Checksum tool\");\n        AppState.isAtHomeView = false;\n      },\n      methods: {\n        updateChecksum() {\n            const newVersion = this.$refs.version.value;\n            console.log(newVersion)\n            WpcEditStore.updateChecksum(newVersion);\n        },\n        disableChecksum() {\n            WpcEditStore.disableChecksum();\n        },\n        updateInput(event) {\n            this.inputVal = event.value;\n        }\n      }\n    }\n  </script>\n\n<style scoped>\n.info-container {\n    padding: 1.6rem;\n    width: 49rem;\n    border: 1px solid var(--grey7);\n    border-radius: var(--radius-md);\n    margin-bottom: var(--space-lg);\n}\n.info-row {\n    display: flex;\n    flex-direction: row;\n    margin-top: var(--space-md);\n}\n.info-col {\n    width: 50%;\n}\n.checksum-form {\n    display: flex;\n    flex-direction: row;\n}\n.version-input {\n    width: 18rem;\n    margin-right: var(--space-md);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}