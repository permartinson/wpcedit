{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { WPCEdit } from 'wpcedit';\nimport Worker from 'worker-loader!../workers/getFullFrameData.js';\nexport const useWpcEditStore = defineStore('wpcEditStore', {\n  state: () => {\n    return {\n      romIsLoaded: false,\n      viewTitle: 'WPC Edit',\n      isAtHomeView: true\n    };\n  },\n  getters: {\n    maxFullFrameIndex: state => {\n      console.log(state);\n      return 50; //TEMP! Get value from ROM!\n    }\n  },\n\n  actions: {\n    loadRom(data) {\n      WPCEdit.init();\n      WPCEdit.rom = data;\n      this.romIsLoaded = true;\n    },\n    getFullFrameImageAt(index) {\n      const worker = new Worker();\n      worker.postMessage(index);\n      worker.addEventListener('message', function (ev) {\n        if (ev.data.msg === 'image') {\n          return ev.data.image;\n        }\n      });\n      //WPCEdit.fullFrameImage.index = index;\n      //return WPCEdit.fullFrameImage.plane;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","WPCEdit","Worker","useWpcEditStore","state","romIsLoaded","viewTitle","isAtHomeView","getters","maxFullFrameIndex","console","log","actions","loadRom","data","init","rom","getFullFrameImageAt","index","worker","postMessage","addEventListener","ev","msg","image"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/stores/wpcEditStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport { WPCEdit } from 'wpcedit';\nimport Worker from 'worker-loader!../workers/getFullFrameData.js'\n\nexport const useWpcEditStore = defineStore('wpcEditStore', {\n    state: () => {\n        return {\n            romIsLoaded: false,\n            viewTitle: 'WPC Edit',\n            isAtHomeView: true\n        }\n    },\n    getters: {\n        maxFullFrameIndex: (state) => {\n            console.log(state);\n            return 50; //TEMP! Get value from ROM!\n        },\n    },\n    actions: {\n        loadRom(data) {\n            WPCEdit.init();\n            WPCEdit.rom = data;\n            this.romIsLoaded = true;\n        },\n        getFullFrameImageAt(index) {\n            const worker = new Worker();\n            worker.postMessage(index);\n\n            worker.addEventListener('message', function(ev) {\n              if(ev.data.msg === 'image') {\n                return ev.data.image;\n              }\n            });\n            //WPCEdit.fullFrameImage.index = index;\n            //return WPCEdit.fullFrameImage.plane;\n        }\n    }\n})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,OAAO,QAAQ,SAAS;AACjC,OAAOC,MAAM,MAAM,8CAA8C;AAEjE,OAAO,MAAMC,eAAe,GAAGH,WAAW,CAAC,cAAc,EAAE;EACvDI,KAAK,EAAE,MAAM;IACT,OAAO;MACHC,WAAW,EAAE,KAAK;MAClBC,SAAS,EAAE,UAAU;MACrBC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,iBAAiB,EAAGL,KAAK,IAAK;MAC1BM,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;MAClB,OAAO,EAAE,CAAC,CAAC;IACf;EACJ,CAAC;;EACDQ,OAAO,EAAE;IACLC,OAAO,CAACC,IAAI,EAAE;MACVb,OAAO,CAACc,IAAI,EAAE;MACdd,OAAO,CAACe,GAAG,GAAGF,IAAI;MAClB,IAAI,CAACT,WAAW,GAAG,IAAI;IAC3B,CAAC;IACDY,mBAAmB,CAACC,KAAK,EAAE;MACvB,MAAMC,MAAM,GAAG,IAAIjB,MAAM,EAAE;MAC3BiB,MAAM,CAACC,WAAW,CAACF,KAAK,CAAC;MAEzBC,MAAM,CAACE,gBAAgB,CAAC,SAAS,EAAE,UAASC,EAAE,EAAE;QAC9C,IAAGA,EAAE,CAACR,IAAI,CAACS,GAAG,KAAK,OAAO,EAAE;UAC1B,OAAOD,EAAE,CAACR,IAAI,CAACU,KAAK;QACtB;MACF,CAAC,CAAC;MACF;MACA;IACJ;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}