{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { WPCEdit } from 'wpcedit';\nexport const useWpcEditStore = defineStore('wpcEditStore', {\n  state: () => {\n    return {\n      romIsLoaded: false,\n      viewTitle: 'WPC Edit',\n      isAtHomeView: true,\n      currSpriteIndex: 0,\n      currSpriteTableIndex: 0,\n      currentRomData: null\n    };\n  },\n  getters: {\n    maxFullFrameIndex: state => {\n      let index = 900; //WPCEdit.fullFrameImage.maxImageIndex;\n      let invalidImages = 0;\n      while (invalidImages < 3) {\n        const plane = WPCEdit.getFullFrameImageAt(index);\n        if (plane.type > 11 && plane.type != 255) {\n          invalidImages++;\n          //console.log(\"INVALID at index: \"+index);\n        }\n      }\n      //console.log(\"type: \"+plane.type);\n\n      //console.log(state);\n      //console.log(\"max: \"+max)\n      return index;\n    },\n    maxSpriteTable: () => {\n      return 64; //TEMP! Get value from ROM!\n    },\n\n    maxSpriteIndexInCurrentTable: () => {\n      return 1208; //TEMP! Get value from ROM!\n    }\n  },\n\n  actions: {\n    loadRom(data) {\n      WPCEdit.init();\n      WPCEdit.setRom(data);\n      //if(WPCEdit.setRom(data)) {\n      this.romIsLoaded = true;\n      this.currentRomData = data;\n      //}\n    },\n\n    getFullFrameImageAt(index) {\n      WPCEdit.fullFrameImage.index = index;\n      return WPCEdit.fullFrameImage.plane;\n    },\n    getSpriteAt(table, index) {\n      WPCEdit.variableSizedImage.next(1);\n      console.log(table + \" \" + index);\n\n      /* implement a pattern like this in WPCEdit.js\n      /* ===========================================\n      const indexDelta = index - this.currSpriteIndex;\n      if(indexDelta < 0) {\n          WPCEdit.variableSizedImage.prev(Math.abs(indexDelta))\n      } else {\n          WPCEdit.variableSizedImage.next(indexDelta);\n      }\n      this.currSpriteIndex = index;\n      */\n\n      return WPCEdit.variableSizedImage.plane;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","WPCEdit","useWpcEditStore","state","romIsLoaded","viewTitle","isAtHomeView","currSpriteIndex","currSpriteTableIndex","currentRomData","getters","maxFullFrameIndex","index","invalidImages","plane","getFullFrameImageAt","type","maxSpriteTable","maxSpriteIndexInCurrentTable","actions","loadRom","data","init","setRom","fullFrameImage","getSpriteAt","table","variableSizedImage","next","console","log"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/stores/wpcEditStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport { WPCEdit } from 'wpcedit';\n\nexport const useWpcEditStore = defineStore('wpcEditStore', {\n    state: () => {\n        return {\n            romIsLoaded: false,\n            viewTitle: 'WPC Edit',\n            isAtHomeView: true,\n            currSpriteIndex: 0,\n            currSpriteTableIndex: 0,\n            currentRomData: null\n        }\n    },\n    getters: {\n        maxFullFrameIndex: (state) => {\n            let index = 900;//WPCEdit.fullFrameImage.maxImageIndex;\n            let invalidImages = 0;\n            while(invalidImages<3) {\n                const plane = WPCEdit.getFullFrameImageAt(index);\n                if(plane.type > 11 && plane.type != 255) {\n                    invalidImages++;\n                    //console.log(\"INVALID at index: \"+index);\n                }\n            }\n            //console.log(\"type: \"+plane.type);\n    \n            //console.log(state);\n            //console.log(\"max: \"+max)\n            return index;\n        },\n        maxSpriteTable: () => {\n            return 64; //TEMP! Get value from ROM!\n        },\n        maxSpriteIndexInCurrentTable: () => {\n            return 1208; //TEMP! Get value from ROM!\n        }\n    },\n    actions: {\n        loadRom(data) {\n            WPCEdit.init();\n            WPCEdit.setRom(data)\n            //if(WPCEdit.setRom(data)) {\n                this.romIsLoaded = true;\n                this.currentRomData = data;    \n            //}\n        },\n        getFullFrameImageAt(index) {\n            WPCEdit.fullFrameImage.index = index;\n            return WPCEdit.fullFrameImage.plane;\n        },\n        getSpriteAt(table,index) {\n            WPCEdit.variableSizedImage.next(1);\n            console.log(table+ \" \"+index);\n\n            /* implement a pattern like this in WPCEdit.js\n            /* ===========================================\n            const indexDelta = index - this.currSpriteIndex;\n            if(indexDelta < 0) {\n                WPCEdit.variableSizedImage.prev(Math.abs(indexDelta))\n            } else {\n                WPCEdit.variableSizedImage.next(indexDelta);\n            }\n            this.currSpriteIndex = index;\n            */\n\n            return WPCEdit.variableSizedImage.plane;\n        }\n    }\n})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,OAAO,QAAQ,SAAS;AAEjC,OAAO,MAAMC,eAAe,GAAGF,WAAW,CAAC,cAAc,EAAE;EACvDG,KAAK,EAAE,MAAM;IACT,OAAO;MACHC,WAAW,EAAE,KAAK;MAClBC,SAAS,EAAE,UAAU;MACrBC,YAAY,EAAE,IAAI;MAClBC,eAAe,EAAE,CAAC;MAClBC,oBAAoB,EAAE,CAAC;MACvBC,cAAc,EAAE;IACpB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,iBAAiB,EAAGR,KAAK,IAAK;MAC1B,IAAIS,KAAK,GAAG,GAAG,CAAC;MAChB,IAAIC,aAAa,GAAG,CAAC;MACrB,OAAMA,aAAa,GAAC,CAAC,EAAE;QACnB,MAAMC,KAAK,GAAGb,OAAO,CAACc,mBAAmB,CAACH,KAAK,CAAC;QAChD,IAAGE,KAAK,CAACE,IAAI,GAAG,EAAE,IAAIF,KAAK,CAACE,IAAI,IAAI,GAAG,EAAE;UACrCH,aAAa,EAAE;UACf;QACJ;MACJ;MACA;;MAEA;MACA;MACA,OAAOD,KAAK;IAChB,CAAC;IACDK,cAAc,EAAE,MAAM;MAClB,OAAO,EAAE,CAAC,CAAC;IACf,CAAC;;IACDC,4BAA4B,EAAE,MAAM;MAChC,OAAO,IAAI,CAAC,CAAC;IACjB;EACJ,CAAC;;EACDC,OAAO,EAAE;IACLC,OAAO,CAACC,IAAI,EAAE;MACVpB,OAAO,CAACqB,IAAI,EAAE;MACdrB,OAAO,CAACsB,MAAM,CAACF,IAAI,CAAC;MACpB;MACI,IAAI,CAACjB,WAAW,GAAG,IAAI;MACvB,IAAI,CAACK,cAAc,GAAGY,IAAI;MAC9B;IACJ,CAAC;;IACDN,mBAAmB,CAACH,KAAK,EAAE;MACvBX,OAAO,CAACuB,cAAc,CAACZ,KAAK,GAAGA,KAAK;MACpC,OAAOX,OAAO,CAACuB,cAAc,CAACV,KAAK;IACvC,CAAC;IACDW,WAAW,CAACC,KAAK,EAACd,KAAK,EAAE;MACrBX,OAAO,CAAC0B,kBAAkB,CAACC,IAAI,CAAC,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAACJ,KAAK,GAAE,GAAG,GAACd,KAAK,CAAC;;MAE7B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAEY,OAAOX,OAAO,CAAC0B,kBAAkB,CAACb,KAAK;IAC3C;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}