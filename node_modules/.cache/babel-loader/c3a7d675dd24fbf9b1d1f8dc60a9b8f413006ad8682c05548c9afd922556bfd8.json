{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7eff97cc\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"modal-body\"\n};\nconst _hoisted_2 = {\n  class: \"sub-dmds\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ModalHeader = _resolveComponent(\"ModalHeader\");\n  const _component_MainDmd = _resolveComponent(\"MainDmd\");\n  const _component_SubDmd = _resolveComponent(\"SubDmd\");\n  const _component_OffsetControl = _resolveComponent(\"OffsetControl\");\n  const _component_BaseModal = _resolveComponent(\"BaseModal\");\n  return _openBlock(), _createBlock(_component_BaseModal, {\n    show: $props.show,\n    onClose: _cache[7] || (_cache[7] = $event => _ctx.$emit('close'))\n  }, {\n    default: _withCtx(() => [_createVNode(_component_ModalHeader, {\n      stepBtns: true,\n      closeBtn: true,\n      title: $options.title,\n      onNext: _cache[0] || (_cache[0] = $event => $options.goNext()),\n      onPrev: _cache[1] || (_cache[1] = $event => $options.goPrev()),\n      onNext2: _cache[2] || (_cache[2] = $event => $options.goN2()),\n      onPrev2: _cache[3] || (_cache[3] = $event => $options.goP2()),\n      onClose: _cache[4] || (_cache[4] = $event => _ctx.$emit('close'))\n    }, null, 8 /* PROPS */, [\"title\"]), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_MainDmd, {\n      plane0: $options.plane0(),\n      plane1: $options.plane1()\n    }, null, 8 /* PROPS */, [\"plane0\", \"plane1\"]), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", null, [_createVNode(_component_SubDmd, {\n      class: \"plane plane0\",\n      title: this.currPlaneTitle,\n      isEnabled: true,\n      plane: $options.plane0()\n    }, null, 8 /* PROPS */, [\"title\", \"plane\"]), _createVNode(_component_OffsetControl, {\n      onMoveX: $options.moveSprite0X,\n      onMoveY: $options.moveSprite0Y,\n      xOffset: $data.xOffset0,\n      yOffset: $data.yOffset0\n    }, null, 8 /* PROPS */, [\"onMoveX\", \"onMoveY\", \"xOffset\", \"yOffset\"])]), _createElementVNode(\"div\", null, [_createVNode(_component_SubDmd, {\n      class: \"plane plane1\",\n      checkbox: this.blendPlaneLabel,\n      plane: $options.blendPlane(),\n      isEnabled: this.doBlend,\n      navBtns: true,\n      onNext: _cache[5] || (_cache[5] = $event => $options.goToNextBlendPlane()),\n      onPrev: _cache[6] || (_cache[6] = $event => $options.goToPrevBlendPlane()),\n      onEnabled: $options.setBlendStatus\n    }, null, 8 /* PROPS */, [\"checkbox\", \"plane\", \"isEnabled\", \"onEnabled\"]), _createVNode(_component_OffsetControl, {\n      onMoveX: $options.moveSprite1X,\n      onMoveY: $options.moveSprite1Y,\n      xOffset: $data.xOffset1,\n      yOffset: $data.yOffset1\n    }, null, 8 /* PROPS */, [\"onMoveX\", \"onMoveY\", \"xOffset\", \"yOffset\"])])])])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"show\"]);\n}","map":{"version":3,"mappings":";;;EAYaA,KAAK,EAAC;AAAY;;EAEdA,KAAK,EAAC;AAAU;;;;;;;uBAb7BC,aAgDYC;IAhDAC,IAAI,EAAEC,WAAI;IAAGC,OAAK,sCAAEC,UAAK;;sBACjC,MASc,CATdC,aAScC;MARTC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdC,KAAK,EAAEC,cAAK;MACZC,MAAI,sCAAED,eAAM;MACZE,MAAI,sCAAEF,eAAM;MACZG,OAAK,sCAAEH,aAAI;MACXI,OAAK,sCAAEJ,aAAI;MACXP,OAAK,sCAAEC,UAAK;wCAEjBW,oBAoCM,OApCNC,UAoCM,GAnCFX,aAAyDY;MAA/CC,MAAM,EAAER,eAAM;MAAKS,MAAM,EAAET,eAAM;mDAC3CK,oBAiCM,OAjCNK,UAiCM,GAhCFL,oBAaM,cAZFV,aAKSgB;MAJLvB,KAAK,EAAC,cAAc;MACnBW,KAAK,OAAOa,cAAc;MAC1BC,SAAS,EAAE,IAAI;MACfC,KAAK,EAAEd,eAAM;iDAElBL,aAKgBoB;MAJXC,OAAM,EAAEhB,qBAAY;MACpBiB,OAAM,EAAEjB,qBAAY;MACpBkB,OAAO,EAAEC,cAAQ;MACjBC,OAAO,EAAED;6EAGlBd,oBAiBM,cAhBFV,aASSgB;MARLvB,KAAK,EAAC,cAAc;MACnBiC,QAAQ,OAAOC,eAAe;MAC9BR,KAAK,EAAEd,mBAAU;MACjBa,SAAS,OAAOU,OAAO;MACvBC,OAAO,EAAE,IAAI;MACbvB,MAAI,sCAAED,2BAAkB;MACxBE,MAAI,sCAAEF,2BAAkB;MACxByB,SAAO,EAAEzB;8EAEdL,aAKgBoB;MAJXC,OAAM,EAAEhB,qBAAY;MACpBiB,OAAM,EAAEjB,qBAAY;MACpBkB,OAAO,EAAEC,cAAQ;MACjBC,OAAO,EAAED","names":["class","_createBlock","_component_BaseModal","show","$props","onClose","_ctx","_createVNode","_component_ModalHeader","stepBtns","closeBtn","title","$options","onNext","onPrev","onNext2","onPrev2","_createElementVNode","_hoisted_1","_component_MainDmd","plane0","plane1","_hoisted_2","_component_SubDmd","currPlaneTitle","isEnabled","plane","_component_OffsetControl","onMoveX","onMoveY","xOffset","$data","yOffset","checkbox","blendPlaneLabel","doBlend","navBtns","onEnabled"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/ui/modals/SpriteModal.vue"],"sourcesContent":["<template>\n    <BaseModal :show=\"show\" @close=\"$emit('close')\">\n        <ModalHeader\n            :stepBtns=\"true\"\n            :closeBtn=\"true\"\n            :title=\"title\"\n            @next=\"goNext()\"\n            @prev=\"goPrev()\"\n            @next2=\"goN2()\"\n            @prev2=\"goP2()\"\n            @close=\"$emit('close')\">\n        </ModalHeader>\n        <div class=\"modal-body\">\n            <MainDmd :plane0=\"plane0()\" :plane1=\"plane1()\"></MainDmd>\n            <div class=\"sub-dmds\">\n                <div>\n                    <SubDmd\n                        class=\"plane plane0\"\n                        :title=\"this.currPlaneTitle\"\n                        :isEnabled=\"true\"\n                        :plane=\"plane0()\">\n                    </SubDmd>\n                    <OffsetControl\n                        @move-x=\"moveSprite0X\"\n                        @move-y=\"moveSprite0Y\"\n                        :xOffset=\"xOffset0\"\n                        :yOffset=\"yOffset0\">\n                    </OffsetControl>\n                </div>\n                <div>\n                    <SubDmd\n                        class=\"plane plane1\"\n                        :checkbox=\"this.blendPlaneLabel\"\n                        :plane=\"blendPlane()\"\n                        :isEnabled=\"this.doBlend\"\n                        :navBtns=\"true\"\n                        @next=\"goToNextBlendPlane()\"\n                        @prev=\"goToPrevBlendPlane()\"\n                        @enabled=\"setBlendStatus\">\n                    </SubDmd>\n                    <OffsetControl\n                        @move-x=\"moveSprite1X\"\n                        @move-y=\"moveSprite1Y\"\n                        :xOffset=\"xOffset1\"\n                        :yOffset=\"yOffset1\">\n                    </OffsetControl>\n                </div>\n            </div>\n        </div>\n    </BaseModal>\n</template>\n\n<script>\nimport BaseModal from './BaseModal.vue';\nimport ModalHeader from './ModalHeader.vue';\nimport MainDmd from '../../dmd/MainDmd.vue';\nimport SubDmd from '../../dmd/SubDmd.vue';\nimport OffsetControl from '../../ui/OffsetControl.vue';\nimport { toHex } from '../../../helpers/formatting.js';\nimport store from \"../../../stores/store.js\";\nimport { useWpcEditStore } from '../../../stores/wpcEditStore.js'\n\nconst WpcEditStore = useWpcEditStore(store);\n\nexport default {\n    name: 'SpriteModal',\n    components: { \n        BaseModal,\n        ModalHeader,\n        MainDmd,\n        SubDmd,\n        OffsetControl\n    },\n    setup() {\n    },\n    data() {\n        return {\n            doBlend: false,\n            offset: 0,\n            blendOffset: 1,\n            xOffset0: -1,\n            yOffset0: -1,\n            xOffset1: -1,\n            yOffset1: -1,\n        }\n    },\n    props: {\n        show: Boolean,\n        index: Number,\n        table: Number\n    },\n    computed: {\n        planeIndices() {\n            const currIndex = Math.max(this.index+this.offset,0); // BUG! need to use the map as a reference here\n            return {\n                current: currIndex,\n                blend: Math.max(currIndex+this.blendOffset,0),\n            }\n        },\n        currPlaneTitle() {\n            return `This sprite, index ${this.planeIndices.current}`;\n        },\n        blendPlaneLabel() {\n            return `Blend with index ${this.planeIndices.blend}`;\n        },\n        title() {\n            return `Image ${toHex(WpcEditStore.getSpriteAt(this.table,this.planeIndices.current).address,6)}`;\n        }\n    },\n    methods: {\n        plane0() {\n            const indices = this.planeIndices;\n            const sprite = WpcEditStore.getSpriteAt(this.table,indices.current);\n            if(this.xOffset0 == -1 && this.yOffset0 == -1) {\n                this.xOffset0 = Math.floor((128-sprite.width)/2);\n                this.yOffset0 = Math.floor((32-sprite.height)/2);\n            }\n            return WpcEditStore.getSpriteAsFullFrame(sprite,this.xOffset0,this.yOffset0);\n        },\n        plane1() {\n            if(this.doBlend) {\n                return this.blendPlane();\n            }\n            return this.plane0();\n        },\n        blendPlane() {\n            const indices = this.planeIndices;\n            const sprite = WpcEditStore.getSpriteAt(this.table,indices.blend);\n            if(this.xOffset1 == -1 && this.yOffset1 == -1) {\n                this.xOffset1 = Math.floor((128-sprite.width)/2);\n                this.yOffset1 = Math.floor((32-sprite.height)/2);\n            }\n            return WpcEditStore.getSpriteAsFullFrame(sprite,this.xOffset1,this.yOffset1);\n        },\n        setBlendStatus(state) {\n            if(state == true) {\n                this.doBlend = true;\n            } else if(state == false) {\n                this.doBlend = false;\n            }\n        },\n        goToNextBlendPlane() {\n            this.blendOffset++;\n        },\n        goToPrevBlendPlane() {\n            this.blendOffset--;\n        },\n        goNext() {\n            this.offset++;\n            this.setInitValues();\n        },\n        goPrev() {\n            if(this.planeIndices.current > 0) {\n                this.offset--;\n            }\n            this.setInitValues();\n        },\n        goN2() {\n            this.offset+=2;\n            this.setInitValues();\n        },\n        goP2() {\n            if(this.planeIndices.current > 0) {\n                this.offset-=2;\n            }\n            this.setInitValues();\n        },\n        moveSprite0X(amount) {\n            this.xOffset0 += amount;\n        },\n        moveSprite0Y(amount) {\n            this.yOffset0 += amount;\n        },\n        moveSprite1X(amount) {\n            this.xOffset1 += amount;\n        },\n        moveSprite1Y(amount) {\n            this.yOffset1 += amount;\n        },\n        setInitValues() {\n            // reset the values (or get from a store when that ha been implemented)\n            this.blendOffset = 1;\n            this.doBlend = false;\n            this.xOffset0 = -1;\n            this.yOffset0 = -1;\n            this.xOffset1 = -1;\n            this.yOffset1 = -1;\n        }\n    },\n    updated() {\n        this.offset = 0;\n        this.setInitValues();\n    }\n}\n</script>\n\n<style scoped>\n.sub-dmds {\n    margin-top: var(--space-md);\n    display: grid;\n    gap: var(--space-md);\n    grid-template-columns: 1fr 1fr;\n}\n.plane {\n    justify-self: left;\n}\n.modal-body {\n    margin: 0 var(--space-md);\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}