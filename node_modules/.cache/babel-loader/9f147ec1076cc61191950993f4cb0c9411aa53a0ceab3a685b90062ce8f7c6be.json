{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ce660642\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"controls\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"title\"\n};\nconst _hoisted_3 = {\n  key: 2,\n  class: \"nav-btns\"\n};\nconst _hoisted_4 = {\n  class: \"dmd-container\"\n};\nconst _hoisted_5 = {\n  ref: \"dmd\",\n  width: \"512\",\n  height: \"128\",\n  class: \"dmd\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CheckBox = _resolveComponent(\"CheckBox\");\n  const _component_SmallIcon = _resolveComponent(\"SmallIcon\");\n  const _component_DirectionalButton = _resolveComponent(\"DirectionalButton\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [$props.title ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, _toDisplayString($props.title), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $props.checkbox ? (_openBlock(), _createBlock(_component_CheckBox, {\n    key: 1,\n    onChange: _ctx.checked\n  }, null, 8 /* PROPS */, [\"onChange\"])) : _createCommentVNode(\"v-if\", true), $props.navBtns ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_DirectionalButton, {\n    onClick: _ctx.goPrev,\n    size: \"small\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_SmallIcon, {\n      type: \"left\"\n    }), _createTextVNode(\"Previous\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_DirectionalButton, {\n    onClick: _ctx.goNext,\n    size: \"small\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_SmallIcon, {\n      type: \"right\"\n    }), _createTextVNode(\"Next\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"canvas\", _hoisted_5, null, 512 /* NEED_PATCH */)])]);\n}","map":{"version":3,"mappings":";;;EAESA,KAAK,EAAC;AAAU;;;EACHA,KAAK,EAAC;;;;EAEFA,KAAK,EAAC;;;EAKvBA,KAAK,EAAC;AAAe;;EAChBC,GAAG,EAAC,KAAK;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC,KAAK;EAACH,KAAK,EAAC;;;;;;uBAVrDI,oBAYM,cAXJC,oBAOM,OAPNC,UAOM,GANKC,YAAK,kBAAdH,oBAA6C,KAA7CI,UAA6C,mBAAZD,YAAK,uDACtBA,eAAQ,kBAAxBE,aAAuDC;;IAA5BC,QAAM,EAAEC;8EACxBL,cAAO,kBAAlBH,oBAGM,OAHNS,UAGM,GAFJC,aAA+GC;IAA3FC,OAAK,EAAEJ,WAAM;IAAEK,IAAI,EAAC;;sBAAQ,MAAmC,CAAnCH,aAAmCI;MAAxBC,IAAI,EAAC;IAAM,qBAAa,UAAQ;;kCAC3FL,aAA4GC;IAAxFC,OAAK,EAAEJ,WAAM;IAAEK,IAAI,EAAC;;sBAAQ,MAAoC,CAApCH,aAAoCI;MAAzBC,IAAI,EAAC;IAAO,qBAAa,MAAI;;2EAG5Fd,oBAEM,OAFNe,UAEM,GADJf,oBAAgE,UAAhEgB,UAAgE","names":["class","ref","width","height","_createElementBlock","_createElementVNode","_hoisted_1","$props","_hoisted_2","_createBlock","_component_CheckBox","onChange","_ctx","_hoisted_3","_createVNode","_component_DirectionalButton","onClick","size","_component_SmallIcon","type","_hoisted_4","_hoisted_5"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/dmd/SubDmd.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"controls\">\n      <p v-if=\"title\" class=\"title\">{{ title }}</p>\n      <CheckBox v-if=\"checkbox\" @change=\"checked\"></CheckBox>\n      <div v-if=\"navBtns\" class=\"nav-btns\">\n        <DirectionalButton @click=\"goPrev\" size=\"small\"><SmallIcon type=\"left\"></SmallIcon>Previous</DirectionalButton>\n        <DirectionalButton @click=\"goNext\" size=\"small\"><SmallIcon type=\"right\"></SmallIcon>Next</DirectionalButton>\n      </div>\n    </div>\n    <div class=\"dmd-container\">\n      <canvas ref=\"dmd\" width=\"512\" height=\"128\" class=\"dmd\"></canvas>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CheckBox from '../ui/CheckBox.vue';\nimport DirectionalButton from '../ui/buttons/DirectionalButton.vue';\nimport SmallIcon from '../icons/SmallIcon.vue';\n\nexport default {\n  name: 'SubDmd',\n  components: {\n    CheckBox\n  },\n  props: {\n    plane: Uint8Array,\n    title: String,\n    checkbox: Boolean,\n    navBtns: Boolean,\n    DirectionalButton,\n    SmallIcon\n  },\n  methods: {\n    drawImage() {\n        const DOT_SIZE = 4;\n        const canvas = this.$refs.dmd;\n        const ctx = canvas.getContext(\"2d\");\n        for(let i=0; i<128*32; i++) {\n            const dotX = (i % 128) * DOT_SIZE + DOT_SIZE/2;\n            const dotY = Math.floor(i / 128) * DOT_SIZE + DOT_SIZE/2;\n            const dotVal = this.getDotValue(this.plane,i);\n            ctx.beginPath();\n            ctx.arc(dotX, dotY, DOT_SIZE/2*0.9, 0, 2 * Math.PI, false);\n            ctx.fillStyle = `rgba(220, 133, 33, ${dotVal*255})`;\n            ctx.fill();\n        }\n    },\n    getDotValue(plane0Data,index) {\n        const width = 128;\n        const col = index % width;\n        const byte = Math.floor(index/8);\n        const bitPos = (col % 8);\n        const bit =  ( plane0Data[byte] & 0xFF ) >>(bitPos) & 1;\n        return bit;\n    }\n  },\n  mounted() {\n    this.drawImage();\n  },\n  updated() {\n    this.drawImage();\n  }\n}\n\n</script>\n\n<style scoped>\n.controls {\n  height: 3.2rem;\n}\n.dmd-container {\n  background: var(--black);\n}\n.dmd {\n  width: 100%;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}