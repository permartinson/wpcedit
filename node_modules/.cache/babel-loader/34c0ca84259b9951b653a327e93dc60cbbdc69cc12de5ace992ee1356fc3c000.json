{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = runAsChild;\nvar _utils = require(\"./utils\");\nfunction runAsChild(loaderContext, workerContext, options, callback) {\n  workerContext.compiler.runAsChild((error, entries, compilation) => {\n    if (error) {\n      return callback(error);\n    }\n    if (entries[0]) {\n      // eslint-disable-next-line no-param-reassign, prefer-destructuring\n      const workerFilename = entries[0].files[0];\n      let workerSource = compilation.assets[workerFilename].source();\n      if (options.inline === \"no-fallback\") {\n        // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n        delete loaderContext._compilation.assets[workerFilename]; // TODO improve it, we should store generated source maps files for file in `assetInfo`\n        // eslint-disable-next-line no-underscore-dangle\n\n        if (loaderContext._compilation.assets[`${workerFilename}.map`]) {\n          // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n          delete loaderContext._compilation.assets[`${workerFilename}.map`];\n        } // Remove `/* sourceMappingURL=url */` comment\n\n        workerSource = workerSource.replace(_utils.sourceMappingURLRegex, \"\"); // Remove `//# sourceURL=webpack-internal` comment\n\n        workerSource = workerSource.replace(_utils.sourceURLWebpackRegex, \"\");\n      }\n      const workerCode = (0, _utils.workerGenerator)(loaderContext, workerFilename, workerSource, options);\n      return callback(null, workerCode);\n    }\n    return callback(new Error(`Failed to compile web worker \"${workerContext.request}\" request`));\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","runAsChild","_utils","require","loaderContext","workerContext","options","callback","compiler","error","entries","compilation","workerFilename","files","workerSource","assets","source","inline","_compilation","replace","sourceMappingURLRegex","sourceURLWebpackRegex","workerCode","workerGenerator","Error","request"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/node_modules/worker-loader/dist/supportWebpack4.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = runAsChild;\n\nvar _utils = require(\"./utils\");\n\nfunction runAsChild(loaderContext, workerContext, options, callback) {\n  workerContext.compiler.runAsChild((error, entries, compilation) => {\n    if (error) {\n      return callback(error);\n    }\n\n    if (entries[0]) {\n      // eslint-disable-next-line no-param-reassign, prefer-destructuring\n      const workerFilename = entries[0].files[0];\n      let workerSource = compilation.assets[workerFilename].source();\n\n      if (options.inline === \"no-fallback\") {\n        // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n        delete loaderContext._compilation.assets[workerFilename]; // TODO improve it, we should store generated source maps files for file in `assetInfo`\n        // eslint-disable-next-line no-underscore-dangle\n\n        if (loaderContext._compilation.assets[`${workerFilename}.map`]) {\n          // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n          delete loaderContext._compilation.assets[`${workerFilename}.map`];\n        } // Remove `/* sourceMappingURL=url */` comment\n\n\n        workerSource = workerSource.replace(_utils.sourceMappingURLRegex, \"\"); // Remove `//# sourceURL=webpack-internal` comment\n\n        workerSource = workerSource.replace(_utils.sourceURLWebpackRegex, \"\");\n      }\n\n      const workerCode = (0, _utils.workerGenerator)(loaderContext, workerFilename, workerSource, options);\n      return callback(null, workerCode);\n    }\n\n    return callback(new Error(`Failed to compile web worker \"${workerContext.request}\" request`));\n  });\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,UAAU;AAE5B,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE/B,SAASF,UAAU,CAACG,aAAa,EAAEC,aAAa,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EACnEF,aAAa,CAACG,QAAQ,CAACP,UAAU,CAAC,CAACQ,KAAK,EAAEC,OAAO,EAAEC,WAAW,KAAK;IACjE,IAAIF,KAAK,EAAE;MACT,OAAOF,QAAQ,CAACE,KAAK,CAAC;IACxB;IAEA,IAAIC,OAAO,CAAC,CAAC,CAAC,EAAE;MACd;MACA,MAAME,cAAc,GAAGF,OAAO,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC;MAC1C,IAAIC,YAAY,GAAGH,WAAW,CAACI,MAAM,CAACH,cAAc,CAAC,CAACI,MAAM,EAAE;MAE9D,IAAIV,OAAO,CAACW,MAAM,KAAK,aAAa,EAAE;QACpC;QACA,OAAOb,aAAa,CAACc,YAAY,CAACH,MAAM,CAACH,cAAc,CAAC,CAAC,CAAC;QAC1D;;QAEA,IAAIR,aAAa,CAACc,YAAY,CAACH,MAAM,CAAE,GAAEH,cAAe,MAAK,CAAC,EAAE;UAC9D;UACA,OAAOR,aAAa,CAACc,YAAY,CAACH,MAAM,CAAE,GAAEH,cAAe,MAAK,CAAC;QACnE,CAAC,CAAC;;QAGFE,YAAY,GAAGA,YAAY,CAACK,OAAO,CAACjB,MAAM,CAACkB,qBAAqB,EAAE,EAAE,CAAC,CAAC,CAAC;;QAEvEN,YAAY,GAAGA,YAAY,CAACK,OAAO,CAACjB,MAAM,CAACmB,qBAAqB,EAAE,EAAE,CAAC;MACvE;MAEA,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAEpB,MAAM,CAACqB,eAAe,EAAEnB,aAAa,EAAEQ,cAAc,EAAEE,YAAY,EAAER,OAAO,CAAC;MACpG,OAAOC,QAAQ,CAAC,IAAI,EAAEe,UAAU,CAAC;IACnC;IAEA,OAAOf,QAAQ,CAAC,IAAIiB,KAAK,CAAE,iCAAgCnB,aAAa,CAACoB,OAAQ,WAAU,CAAC,CAAC;EAC/F,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}