{"ast":null,"code":"import ListDmd from '../../dmd/ListDmd.vue';\nimport { useIntersectionObserver } from '@vueuse/core';\nimport { ref } from 'vue';\nexport default {\n  name: 'FullFrameItem',\n  props: {\n    plane: Uint8Array,\n    index: Number\n  },\n  components: {\n    ListDmd\n  },\n  data() {\n    return {\n      isDrawn: false\n    };\n  },\n  setup() {\n    const target = ref(null);\n    const dmdIsVisible = ref(false);\n    // lazy-load the dmds:\n    useIntersectionObserver(target, ([{\n      isIntersecting\n    }]) => {\n      // only trigger the state change once:\n      if (dmdIsVisible.value == false) {\n        dmdIsVisible.value = isIntersecting;\n      }\n    }, {\n      rootMargin: \"0\",\n      threshold: 1\n    });\n    return {\n      target,\n      dmdIsVisible\n    };\n  }\n};","map":{"version":3,"mappings":"AASA,OAAOA,OAAM,MAAO,uBAAsB;AAC1C,SAASC,uBAAsB,QAAS,cAAa;AACrD,SAASC,GAAE,QAAS,KAAI;AAExB,eAAe;EACbC,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,KAAK,EAAEC,UAAU;IACjBC,KAAK,EAAEC;EACT,CAAC;EACDC,UAAU,EAAE;IACVT;EACF,CAAC;EACDU,IAAI,GAAG;IACL,OAAO;MACLC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,KAAK,GAAG;IACN,MAAMC,MAAK,GAAIX,GAAG,CAAC,IAAI;IACvB,MAAMY,YAAW,GAAIZ,GAAG,CAAC,KAAK;IAC9B;IACAD,uBAAuB,CACrBY,MAAM,EACN,CAAC,CAAC;MAAEE;IAAe,CAAC,CAAC,KAAK;MACtB;MACA,IAAGD,YAAY,CAACE,KAAI,IAAK,KAAK,EAAE;QAC9BF,YAAY,CAACE,KAAI,GAAID,cAAc;MACvC;IACF,CAAC,EACD;MACEE,UAAU,EAAE,GAAG;MACfC,SAAS,EAAE;IACb,EACF;IACA,OAAO;MACLL,MAAM;MACNC;IACF;EACF;AACF","names":["ListDmd","useIntersectionObserver","ref","name","props","plane","Uint8Array","index","Number","components","data","isDrawn","setup","target","dmdIsVisible","isIntersecting","value","rootMargin","threshold"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/ui/list-items/FullFrameItem.vue"],"sourcesContent":["<template>\n    <div class=\"list-item-fullframe\" @click=\"$emit('open',index)\" ref=\"target\">\n      <div class=\"list-item-inner\">\n        <ListDmd v-if=\"dmdIsVisible\" :index=\"index\" :plane=\"plane\"></ListDmd>\n      </div>\n    </div>\n</template>\n\n<script>\nimport ListDmd from '../../dmd/ListDmd.vue'\nimport { useIntersectionObserver } from '@vueuse/core'\nimport { ref } from 'vue'\n\nexport default {\n  name: 'FullFrameItem',\n  props: {\n    plane: Uint8Array,\n    index: Number,\n  },\n  components: {\n    ListDmd\n  },\n  data() {\n    return {\n      isDrawn: false\n    }\n  },\n  setup() {\n    const target = ref(null)\n    const dmdIsVisible = ref(false)\n    // lazy-load the dmds:\n    useIntersectionObserver(\n      target,\n      ([{ isIntersecting }]) => {\n          // only trigger the state change once:\n          if(dmdIsVisible.value == false) {\n            dmdIsVisible.value = isIntersecting;\n        }\n      },\n      {\n        rootMargin: \"0\",\n        threshold: 1\n      }\n    )\n    return {\n      target,\n      dmdIsVisible,\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n.list-item-fullframe {\n  margin: 1rem;\n  width: 23.5rem;\n  height: 8.2rem;\n  background: var(--grey5);\n  border-radius: var(--radius-md);\n  cursor: pointer;\n  box-shadow: var(--shadow-btn-default);\n}\n\n.list-item-fullframe:hover {\n  background: var(--grey4);\n  box-shadow: var(--shadow-btn-hover);\n}\n\n.list-item-inner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}