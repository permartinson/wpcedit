{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0b601ec2\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"info-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"label-md text-accent\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"label-md text-accent\",\n  ref: \"invalid\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"label-md text-accent\",\n  ref: \"invalid\"\n};\nconst _hoisted_5 = {\n  class: \"info-row\"\n};\nconst _hoisted_6 = {\n  class: \"info-col\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label-sm\"\n}, \"Current checksum\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"label-md\"\n};\nconst _hoisted_9 = {\n  class: \"info-col\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label-sm\"\n}, \"Fixup bytes\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"label-md\"\n};\nconst _hoisted_12 = {\n  class: \"info-row\"\n};\nconst _hoisted_13 = {\n  class: \"info-col\"\n};\nconst _hoisted_14 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label-sm\"\n}, \"Calculated checksum\", -1 /* HOISTED */));\nconst _hoisted_15 = {\n  class: \"label-md\"\n};\nconst _hoisted_16 = {\n  class: \"info-col\"\n};\nconst _hoisted_17 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"label-sm\"\n}, \"Version byte\", -1 /* HOISTED */));\nconst _hoisted_18 = {\n  class: \"label-md\"\n};\nconst _hoisted_19 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"headline\"\n}, \"Calculate and update checksum\", -1 /* HOISTED */));\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"body-sm\"\n}, \"Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.\", -1 /* HOISTED */));\nconst _hoisted_21 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"headline\"\n}, \"Desired game version:\", -1 /* HOISTED */));\nconst _hoisted_22 = {\n  class: \"checksum-form\"\n};\nconst _hoisted_23 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */));\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"headline\"\n}, \"Disable checksum\", -1 /* HOISTED */));\nconst _hoisted_25 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"body-sm\"\n}, \"The checksum may be temporarily disabled while debugging ROM. This is done by setting the fixup bytes to 0xFF00. This will also remove other startup tests. Once the modified ROM is ready, you should always insert a correct checksum using the tool above so that the game will alert you about any errors.\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NumeralInput = _resolveComponent(\"NumeralInput\");\n  const _component_StandardButton = _resolveComponent(\"StandardButton\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [$setup.checksumIsValid && $setup.fixupBytes != '00FF' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"The checksum in this ROM is valid\")) : _createCommentVNode(\"v-if\", true), !$setup.checksumIsValid && $setup.fixupBytes != '00FF' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, \"The checksum in this ROM is invalid\", 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), $setup.fixupBytes == '00FF' ? (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"The checksum has been disabled in this ROM\", 512 /* NEED_PATCH */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"p\", _hoisted_8, _toDisplayString($setup.storedChecksum), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"p\", _hoisted_11, _toDisplayString($setup.fixupBytes), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_hoisted_14, _createElementVNode(\"p\", _hoisted_15, _toDisplayString($setup.calculatedChecksum), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _createElementVNode(\"p\", _hoisted_18, _toDisplayString($setup.versionByte), 1 /* TEXT */)])])]), _hoisted_19, _hoisted_20, _hoisted_21, _createElementVNode(\"div\", _hoisted_22, [_createVNode(_component_NumeralInput, {\n    size: \"large\",\n    value: Number(this.versionByte),\n    maxlength: 2,\n    min: 1,\n    max: 99,\n    class: \"version-input\",\n    ref: \"version\",\n    onChange: $options.updateInput\n  }, null, 8 /* PROPS */, [\"value\", \"onChange\"]), _createVNode(_component_StandardButton, {\n    size: \"large\",\n    type: \"primary\",\n    onClick: _cache[0] || (_cache[0] = $event => $options.updateChecksum(_ctx.value))\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Update checksum\")]),\n    _: 1 /* STABLE */\n  })]), _createElementVNode(\"p\", {\n    class: _normalizeClass([\"label-md text-accent feedback-msg\", $data.checksumFeedback]),\n    ref: \"checksumFeedback\"\n  }, \"The checksum was successfully updated!\", 2 /* CLASS */), _hoisted_23, _hoisted_24, _hoisted_25, _createVNode(_component_StandardButton, {\n    size: \"large\",\n    type: \"primary\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.disableChecksum())\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Disable checksum\")]),\n    _: 1 /* STABLE */\n  }), _createElementVNode(\"p\", {\n    class: _normalizeClass([\"label-md text-accent feedback-msg\", $data.disableFeedback]),\n    ref: \"disableFeedback\"\n  }, \"The checksum is now disabled!\", 2 /* CLASS */)]);\n}","map":{"version":3,"mappings":"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","names":["class","ref","_createElementVNode","_createElementBlock","_hoisted_1","$setup","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_createVNode","_component_NumeralInput","size","value","Number","versionByte","maxlength","min","max","onChange","$options","_component_StandardButton","type","onClick","_ctx","$data","_hoisted_23","_hoisted_24","_hoisted_25"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/views/ChecksumView.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"info-container\">\n            <p v-if=\"checksumIsValid && fixupBytes!='00FF'\" class=\"label-md text-accent\">The checksum in this ROM is valid</p>\n            <p v-if=\"!checksumIsValid && fixupBytes!='00FF'\" class=\"label-md text-accent\" ref=\"invalid\">The checksum in this ROM is invalid</p>\n            <p v-if=\"fixupBytes=='00FF'\" class=\"label-md text-accent\" ref=\"invalid\">The checksum has been disabled in this ROM</p>\n            <div class=\"info-row\">\n                <div class=\"info-col\">\n                    <p class=\"label-sm\">Current checksum</p>\n                    <p class=\"label-md\">{{ storedChecksum }}</p>\n                </div>\n                <div class=\"info-col\">\n                    <p class=\"label-sm\">Fixup bytes</p>\n                    <p class=\"label-md\">{{ fixupBytes }}</p>\n                </div>\n            </div>\n            <div class=\"info-row\">\n                <div class=\"info-col\">\n                    <p class=\"label-sm\">Calculated checksum</p>\n                    <p class=\"label-md\">{{ calculatedChecksum }}</p>\n                </div>\n                <div class=\"info-col\">\n                    <p class=\"label-sm\">Version byte</p>\n                    <p class=\"label-md\">{{ versionByte }}</p>\n                </div>\n            </div>\n        </div>\n        <p class=\"headline\">Calculate and update checksum</p>\n        <p class=\"body-sm\">Use this tool to calculate and set new valid checksum and fixup bytes of a modified WPC ROM. The checksum is caluculated from a sum of all the bytes in the ROM and consists of two bytes, of which the last byte represents the game version. The fixup bytes can be any value that makes the checksum match.</p>\n        <p class=\"headline\">Desired game version:</p>\n        <div class=\"checksum-form\">\n            <NumeralInput size=\"large\" :value=\"Number(this.versionByte)\" :maxlength=\"2\" :min=\"1\" :max=\"99\" class=\"version-input\" ref=\"version\" @change=\"updateInput\"></NumeralInput>\n            <StandardButton size=\"large\" type=\"primary\" @click=\"updateChecksum(value)\">Update checksum</StandardButton>\n        </div>\n        <p class=\"label-md text-accent feedback-msg\" :class=\"checksumFeedback\" ref=\"checksumFeedback\">The checksum was successfully updated!</p>\n        <hr/>\n        <p class=\"headline\">Disable checksum</p>\n        <p class=\"body-sm\">The checksum may be temporarily disabled while debugging ROM. This is done by setting the fixup bytes to 0xFF00. This will also remove other startup tests. Once the modified ROM is ready, you should always insert a correct checksum using the tool above so that the game will alert you about any errors.</p>\n        <StandardButton size=\"large\" type=\"primary\" @click=\"disableChecksum()\">Disable checksum</StandardButton>\n        <p class=\"label-md text-accent feedback-msg\" :class=\"disableFeedback\" ref=\"disableFeedback\">The checksum is now disabled!</p>\n\n    </div>\n</template>\n\n<script>\n    import StandardButton from '../components/ui/buttons/StandardButton.vue'\n    import NumeralInput from '../components/ui/inputs/NumeralInput.vue'\n    import store from \"../stores/store.js\";\n    import { useAppState } from '../stores/appState.js';\n    import { useWpcEditStore } from '../stores/wpcEditStore.js';\n    import { storeToRefs } from 'pinia';\n\n    const AppState = useAppState(store);\n    const WpcEditStore = useWpcEditStore(store);\n\n    export default {\n      name: 'ChecksumView',\n      components: {\n        StandardButton,\n        NumeralInput\n      },\n      props: {\n      },\n      data() {\n          return {\n            inputVal: Number(this.versionByte),\n            checksumFeedback: 'hidden',\n            disableFeedback: 'hidden'\n          }\n      },\n      setup() {\n        const { romIsLoaded, romIsAltered, storedChecksum, calculatedChecksum, fixupBytes, versionByte, checksumIsValid } = storeToRefs(WpcEditStore);\n        return {\n            romIsLoaded, romIsAltered, storedChecksum, calculatedChecksum, fixupBytes, versionByte, checksumIsValid\n        }\n      },\n      beforeRouteEnter() {\n        AppState.setViewTitle(\"Checksum tool\");\n        AppState.isAtHomeView = false;\n      },\n      methods: {\n        updateChecksum() {\n            const newVersion = this.inputVal;\n            //const feedbackMsg = this.$refs.checksumFeedback;\n            this.checksumFeedback = 'hidden';\n            WpcEditStore.updateChecksum(newVersion);\n            this.checksumFeedback = 'show';\n        },\n        disableChecksum() {\n            this.disableFeedback = 'hidden';\n            WpcEditStore.disableChecksum();\n            this.checksumFeedback = 'show';\n        },\n        updateInput(event) {\n            this.inputVal = event.target.value;\n        }\n      }\n    }\n  </script>\n\n<style scoped>\n.info-container {\n    padding: 1.6rem;\n    width: 49rem;\n    border: 1px solid var(--grey7);\n    border-radius: var(--radius-md);\n    margin-bottom: var(--space-lg);\n}\n.info-row {\n    display: flex;\n    flex-direction: row;\n    margin-top: var(--space-md);\n}\n.info-col {\n    width: 50%;\n}\n.checksum-form {\n    display: flex;\n    flex-direction: row;\n}\n.version-input {\n    width: 18rem;\n    margin-right: var(--space-md);\n}\n.feedback-msg {\n    margin-top: var(--space-sm);\n    opacity: 1;\n    transition: opacity 1s;\n}\n.feedback-msg.hidden {\n    opacity: 0;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}