{"ast":null,"code":"import { WPC } from \"../resources/Constants.js\";\nimport { logStr } from \"../resources/Helpers.js\";\nexport class ROM {\n  constructor(data) {\n    ROM.setRom(data);\n  }\n  static init(data) {\n    if (ROM.instance) {\n      return this.instance;\n    }\n    this.instance = new ROM(data);\n    return this.instance;\n  }\n  static byteAtAddr(Addr) {\n    if (Addr > ROM.size) {\n      logStr(\"ERROR: Address is out of range!\");\n    }\n    return this.currentData[Addr] & 0xFF;\n  }\n  static setRom(data) {\n    const Length = data.length;\n    let status = {\n      error: false,\n      msg: ''\n    };\n    if (Length != 0x40000 && Length != 0x80000 && Length != 0x100000) {\n      const msg = \"ROM doesn't appear to be a WPC rom image.\";\n      logStr(msg);\n      status.error = true;\n      status.msg = msg;\n      return status;\n    }\n    ROM.size = Length;\n    ROM.endPtr = Length;\n    ROM.currentData = data;\n    ROM.totalPages = Math.floor((Length + (WPC.PageLength - 1)) / WPC.PageLength);\n    ROM.startPtr = 0;\n    ROM.endPtr = ROM.size - 1;\n    ROM.basePageIndex = ROM.byteAtAddr(ROM.startPtr) & 0xff;\n    ROM.vSImageTableMap = [[0]];\n    return status;\n  }\n  static get data() {\n    return ROM.currentData;\n  }\n  static set data(data) {\n    ROM.setRom(data);\n  }\n  static get nonPagedBankAddr() {\n    return ROM.size - WPC.BaseCodeAddrNonpagedRom;\n  }\n}\nROM.size = 0;\nROM.startPtr = 0;\nROM.endPtr = 0;\nROM.totalPages = 0;\nROM.basePageIndex = 0;\n;","map":{"version":3,"names":["WPC","logStr","ROM","constructor","data","setRom","init","instance","byteAtAddr","Addr","size","currentData","Length","length","status","error","msg","endPtr","totalPages","Math","floor","PageLength","startPtr","basePageIndex","vSImageTableMap","nonPagedBankAddr","BaseCodeAddrNonpagedRom"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/node_modules/wpcedit/dist/stores/ROM.js"],"sourcesContent":["import { WPC } from \"../resources/Constants.js\";\nimport { logStr } from \"../resources/Helpers.js\";\nexport class ROM {\n    constructor(data) {\n        ROM.setRom(data);\n    }\n    static init(data) {\n        if (ROM.instance) {\n            return this.instance;\n        }\n        this.instance = new ROM(data);\n        return this.instance;\n    }\n    static byteAtAddr(Addr) {\n        if (Addr > ROM.size) {\n            logStr(\"ERROR: Address is out of range!\");\n        }\n        return this.currentData[Addr] & 0xFF;\n    }\n    static setRom(data) {\n        const Length = data.length;\n        let status = { error: false, msg: '' };\n        if (Length != 0x40000 && Length != 0x80000 && Length != 0x100000) {\n            const msg = \"ROM doesn't appear to be a WPC rom image.\";\n            logStr(msg);\n            status.error = true;\n            status.msg = msg;\n            return status;\n        }\n        ROM.size = Length;\n        ROM.endPtr = Length;\n        ROM.currentData = data;\n        ROM.totalPages = Math.floor((Length + (WPC.PageLength - 1)) / WPC.PageLength);\n        ROM.startPtr = 0;\n        ROM.endPtr = ROM.size - 1;\n        ROM.basePageIndex = ROM.byteAtAddr(ROM.startPtr) & 0xff;\n        ROM.vSImageTableMap = [[0]];\n        return status;\n    }\n    static get data() {\n        return ROM.currentData;\n    }\n    static set data(data) {\n        ROM.setRom(data);\n    }\n    static get nonPagedBankAddr() {\n        return ROM.size - WPC.BaseCodeAddrNonpagedRom;\n    }\n}\nROM.size = 0;\nROM.startPtr = 0;\nROM.endPtr = 0;\nROM.totalPages = 0;\nROM.basePageIndex = 0;\n;\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,2BAA2B;AAC/C,SAASC,MAAM,QAAQ,yBAAyB;AAChD,OAAO,MAAMC,GAAG,CAAC;EACbC,WAAW,CAACC,IAAI,EAAE;IACdF,GAAG,CAACG,MAAM,CAACD,IAAI,CAAC;EACpB;EACA,OAAOE,IAAI,CAACF,IAAI,EAAE;IACd,IAAIF,GAAG,CAACK,QAAQ,EAAE;MACd,OAAO,IAAI,CAACA,QAAQ;IACxB;IACA,IAAI,CAACA,QAAQ,GAAG,IAAIL,GAAG,CAACE,IAAI,CAAC;IAC7B,OAAO,IAAI,CAACG,QAAQ;EACxB;EACA,OAAOC,UAAU,CAACC,IAAI,EAAE;IACpB,IAAIA,IAAI,GAAGP,GAAG,CAACQ,IAAI,EAAE;MACjBT,MAAM,CAAC,iCAAiC,CAAC;IAC7C;IACA,OAAO,IAAI,CAACU,WAAW,CAACF,IAAI,CAAC,GAAG,IAAI;EACxC;EACA,OAAOJ,MAAM,CAACD,IAAI,EAAE;IAChB,MAAMQ,MAAM,GAAGR,IAAI,CAACS,MAAM;IAC1B,IAAIC,MAAM,GAAG;MAAEC,KAAK,EAAE,KAAK;MAAEC,GAAG,EAAE;IAAG,CAAC;IACtC,IAAIJ,MAAM,IAAI,OAAO,IAAIA,MAAM,IAAI,OAAO,IAAIA,MAAM,IAAI,QAAQ,EAAE;MAC9D,MAAMI,GAAG,GAAG,2CAA2C;MACvDf,MAAM,CAACe,GAAG,CAAC;MACXF,MAAM,CAACC,KAAK,GAAG,IAAI;MACnBD,MAAM,CAACE,GAAG,GAAGA,GAAG;MAChB,OAAOF,MAAM;IACjB;IACAZ,GAAG,CAACQ,IAAI,GAAGE,MAAM;IACjBV,GAAG,CAACe,MAAM,GAAGL,MAAM;IACnBV,GAAG,CAACS,WAAW,GAAGP,IAAI;IACtBF,GAAG,CAACgB,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACR,MAAM,IAAIZ,GAAG,CAACqB,UAAU,GAAG,CAAC,CAAC,IAAIrB,GAAG,CAACqB,UAAU,CAAC;IAC7EnB,GAAG,CAACoB,QAAQ,GAAG,CAAC;IAChBpB,GAAG,CAACe,MAAM,GAAGf,GAAG,CAACQ,IAAI,GAAG,CAAC;IACzBR,GAAG,CAACqB,aAAa,GAAGrB,GAAG,CAACM,UAAU,CAACN,GAAG,CAACoB,QAAQ,CAAC,GAAG,IAAI;IACvDpB,GAAG,CAACsB,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,OAAOV,MAAM;EACjB;EACA,WAAWV,IAAI,GAAG;IACd,OAAOF,GAAG,CAACS,WAAW;EAC1B;EACA,WAAWP,IAAI,CAACA,IAAI,EAAE;IAClBF,GAAG,CAACG,MAAM,CAACD,IAAI,CAAC;EACpB;EACA,WAAWqB,gBAAgB,GAAG;IAC1B,OAAOvB,GAAG,CAACQ,IAAI,GAAGV,GAAG,CAAC0B,uBAAuB;EACjD;AACJ;AACAxB,GAAG,CAACQ,IAAI,GAAG,CAAC;AACZR,GAAG,CAACoB,QAAQ,GAAG,CAAC;AAChBpB,GAAG,CAACe,MAAM,GAAG,CAAC;AACdf,GAAG,CAACgB,UAAU,GAAG,CAAC;AAClBhB,GAAG,CAACqB,aAAa,GAAG,CAAC;AACrB"},"metadata":{},"sourceType":"module","externalDependencies":[]}