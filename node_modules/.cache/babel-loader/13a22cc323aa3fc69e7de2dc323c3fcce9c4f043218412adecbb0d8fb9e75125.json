{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-25a6daae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"list-item-inner\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ListDmd = _resolveComponent(\"ListDmd\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: \"list-item-fullframe\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('open', $props.index)),\n    ref: \"target\"\n  }, [_createElementVNode(\"div\", _hoisted_1, [$setup.dmdIsVisible ? (_openBlock(), _createBlock(_component_ListDmd, {\n    key: 0,\n    index: $props.index,\n    image: $props.image\n  }, null, 8 /* PROPS */, [\"index\", \"image\"])) : _createCommentVNode(\"v-if\", true)])], 512 /* NEED_PATCH */);\n}","map":{"version":3,"mappings":";;;EAEWA,KAAK,EAAC;AAAiB;;;uBAD9BC,oBAIM;IAJDD,KAAK,EAAC,qBAAqB;IAAEE,OAAK,sCAAEC,UAAK,SAAQC,YAAK;IAAGC,GAAG,EAAC;MAChEC,oBAEM,OAFNC,UAEM,GADWC,mBAAY,kBAA3BC,aAAqEC;;IAAvCC,KAAK,EAAEP,YAAK;IAAGQ,KAAK,EAAER","names":["class","_createElementBlock","onClick","_ctx","$props","ref","_createElementVNode","_hoisted_1","$setup","_createBlock","_component_ListDmd","index","image"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit/src/components/ui/list-items/FullFrameItem.vue"],"sourcesContent":["<template>\n    <div class=\"list-item-fullframe\" @click=\"$emit('open',index)\" ref=\"target\">\n      <div class=\"list-item-inner\">\n        <ListDmd v-if=\"dmdIsVisible\" :index=\"index\" :image=\"image\"></ListDmd>\n      </div>\n    </div>\n</template>\n\n<script>\nimport ListDmd from '../../dmd/ListDmd.vue'\nimport { useIntersectionObserver } from '@vueuse/core'\nimport { ref } from 'vue';\n\nexport default {\n  name: 'FullFrameItem',\n  props: {\n    image: Uint8Array,\n    index: Number,\n  },\n  components: {\n    ListDmd\n  },\n  data() {\n    return {\n      isDrawn: false\n    }\n  },\n  setup() {\n    const target = ref(null);\n    const dmdIsVisible = ref(false);\n    // lazy-load the dmds by only rendering when they appear on screen:\n    useIntersectionObserver(\n      target,\n      ([{ isIntersecting }]) => {\n        // only trigger the state change once:\n        if(dmdIsVisible.value == false) {\n          dmdIsVisible.value = isIntersecting;\n          stop();\n        }\n      },\n      {\n        rootMargin: \"200px\",\n        threshold: 0\n      }\n    )\n    return {\n      target,\n      dmdIsVisible,\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n\n.list-item-fullframe {\n  width: 23.5rem;\n  height: 8.2rem;\n  background: var(--grey5);\n  border-radius: var(--radius-md);\n  cursor: pointer;\n  box-shadow: var(--shadow-btn-default);\n  margin: 0 auto;\n}\n\n.list-item-fullframe:hover {\n  background: var(--grey4);\n  box-shadow: var(--shadow-btn-hover);\n}\n\n.list-item-inner {\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}