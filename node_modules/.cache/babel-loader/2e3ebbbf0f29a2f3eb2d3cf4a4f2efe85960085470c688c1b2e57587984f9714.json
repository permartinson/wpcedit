{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { WPCEdit } from 'wpcedit';\nimport { useStorage } from '@vueuse/core';\nimport { set, get } from \"./idb.js\";\nexport const useWpcEditStore = defineStore('wpcEditStore', {\n  state: () => {\n    return {\n      romIsLoaded: useStorage('romIsLoaded', false),\n      romIsAltered: useStorage('romIsAltered', false),\n      viewTitle: 'WPC Edit',\n      fileName: useStorage('fileName', ''),\n      isAtHomeView: useStorage('isAtHomeView', true),\n      currSpriteIndex: 0,\n      currSpriteTableIndex: 0,\n      currentRomData: null,\n      spriteTableMap: null,\n      calculatedChecksum: '',\n      storedChecksum: '',\n      versionByte: '',\n      fixupBytes: '',\n      checksumIsValid: false\n    };\n  },\n  getters: {\n    maxFullFrameIndex: state => {\n      /*\n      let index = 900;//WPCEdit.fullFrameImage.maxImageIndex;\n      let invalidImages = 0;\n      while(invalidImages<4 && index<2000) {\n          const plane = WPCEdit.fullFrameImage.getPlaneAt(index);\n          if(plane.type > 11 && plane.type != 255) {\n              invalidImages++;\n              console.log(\"INVALID at index: \"+index);\n          }\n          index++;\n      }\n      \n      //console.log(\"type: \"+plane.type);\n           console.log(\"max: \"+index)\n      return index;*/\n      console.log(state);\n      return 1000;\n    }\n  },\n  actions: {\n    getRomFromCache() {\n      const cachedFileName = this.fileName;\n      get('currentRomData').then(function (value) {\n        loadRom(value, cachedFileName);\n      });\n      function loadRom(data, name) {\n        this.loadRom(data, name);\n      }\n    },\n    loadRom(data, name) {\n      WPCEdit.init();\n      if (WPCEdit.setRom(data)) {\n        this.fileName = name;\n        this.romIsLoaded = true;\n        this.currentRomData = data;\n        set('currentRomData', this.currentRomData);\n        this.spriteTableMap = WPCEdit.variableSizedImage.indexMap;\n        this.storedChecksum = pad(WPCEdit.checksum.stored.toString(16), 4).toUpperCase();\n        this.calculatedChecksum = pad(WPCEdit.checksum.calculated.toString(16), 4).toUpperCase();\n        this.fixupBytes = pad(WPCEdit.checksum.delta.toString(16), 4).toUpperCase();\n        this.versionByte = pad((WPCEdit.checksum.stored & 0xFF).toString(16), 2).toString(16);\n        this.checksumIsValid = WPCEdit.checksum.isValid;\n        //WPCEdit.verbose = true;\n      }\n\n      function pad(input, length) {\n        return (Array(length + 1).join('0') + input).slice(-length);\n      }\n    },\n    unloadRom() {\n      this.romIsLoaded = false;\n      this.romIsAltered = false;\n      this.currentRomData = null;\n      this.spriteTableMap = null;\n      this.currSpriteIndex = 0;\n      this.currSpriteTableIndex = 0;\n      this.currentRomData = null;\n      this.spriteTableMap = null;\n      this.calculatedChecksum = 0;\n      this.storedChecksum = 0;\n      this.versionByte = 0;\n      this.fixupBytes = 0;\n      this.checksumIsValid = false;\n    },\n    getFullFrameImageAt(index) {\n      return WPCEdit.fullFrameImage.getPlaneAt(index);\n    },\n    getSpriteAt(table, index) {\n      WPCEdit.variableSizedImage.table = table;\n      WPCEdit.variableSizedImage.index = index;\n      return WPCEdit.variableSizedImage.plane;\n    },\n    getSpriteCentered(table, index) {\n      WPCEdit.variableSizedImage.table = table;\n      WPCEdit.variableSizedImage.index = index;\n      const spritePlane = WPCEdit.variableSizedImage.plane;\n      const xOffset = Math.floor((128 - spritePlane.width) / 2);\n      const yOffset = Math.floor((32 - spritePlane.height) / 2);\n      const sprite = WPCEdit.variableSizedImage.placeInFullFrame(WPCEdit.variableSizedImage.plane, xOffset, yOffset);\n      return sprite;\n    },\n    getSpriteAsFullFrame(sprite, posX, posY) {\n      return sprite = WPCEdit.variableSizedImage.placeInFullFrame(sprite, posX, posY);\n    },\n    mergeImages(img1, img2, mask) {\n      return WPCEdit.fullFrameImage.mergeImages(img1, img2, mask);\n    },\n    updateChecksum(version) {\n      console.log(\"version is \" + version);\n      const result = WPCEdit.checksum.update(version);\n      if (result.status == 1) {\n        this.loadRom(result.data, this.fileName);\n        this.romIsAltered = true;\n      }\n      return result.status;\n    },\n    disableChecksum() {\n      const newRom = WPCEdit.checksum.disable();\n      this.loadRom(newRom, this.fileName);\n      this.romIsAltered = true;\n      const result = 1; //Temp! Use a status variable\n      return result;\n    },\n    downloadRom() {\n      const blob = new Blob([this.currentRomData], {\n        type: 'application/octet-stream'\n      });\n      const url = window.URL.createObjectURL(blob);\n      const nameWithoutExtension = this.fileName.replace(/\\.[^/.]+$/, \"\");\n      const extension = \"rom\";\n      const date = new Date();\n      const suffix = \"_\" + date.getFullYear() + \"\" + pad(date.getMonth() + 1, 2) + \"\" + pad(date.getDate(), 2) + \"\" + pad(date.getHours(), 2) + \"\" + pad(date.getMinutes(), 2) + \"_cs\" + this.storedChecksum;\n      const fileName = nameWithoutExtension + suffix + \".\" + extension;\n      downloadURL(url, fileName);\n      setTimeout(function () {\n        return window.URL.revokeObjectURL(url);\n      }, 1000);\n      // Hacky, but standard, way to download blobs:\n      // Turn it into a hidden href, then click the href and remove it\n      function downloadURL(data, fileName) {\n        const a = document.createElement('a');\n        a.href = data;\n        a.download = fileName;\n        document.body.appendChild(a);\n        a.style = 'display: none';\n        a.click();\n        a.remove();\n      }\n      function pad(input, length) {\n        return (Array(length + 1).join('0') + input).slice(-length);\n      }\n    }\n  },\n  persist: {\n    storage: localStorage\n  }\n});","map":{"version":3,"names":["defineStore","WPCEdit","useStorage","set","get","useWpcEditStore","state","romIsLoaded","romIsAltered","viewTitle","fileName","isAtHomeView","currSpriteIndex","currSpriteTableIndex","currentRomData","spriteTableMap","calculatedChecksum","storedChecksum","versionByte","fixupBytes","checksumIsValid","getters","maxFullFrameIndex","console","log","actions","getRomFromCache","cachedFileName","then","value","loadRom","data","name","init","setRom","variableSizedImage","indexMap","pad","checksum","stored","toString","toUpperCase","calculated","delta","isValid","input","length","Array","join","slice","unloadRom","getFullFrameImageAt","index","fullFrameImage","getPlaneAt","getSpriteAt","table","plane","getSpriteCentered","spritePlane","xOffset","Math","floor","width","yOffset","height","sprite","placeInFullFrame","getSpriteAsFullFrame","posX","posY","mergeImages","img1","img2","mask","updateChecksum","version","result","update","status","disableChecksum","newRom","disable","downloadRom","blob","Blob","type","url","window","URL","createObjectURL","nameWithoutExtension","replace","extension","date","Date","suffix","getFullYear","getMonth","getDate","getHours","getMinutes","downloadURL","setTimeout","revokeObjectURL","a","document","createElement","href","download","body","appendChild","style","click","remove","persist","storage","localStorage"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/stores/wpcEditStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport { WPCEdit } from 'wpcedit';\nimport { useStorage } from '@vueuse/core';\nimport { set, get } from \"./idb.js\";\n\nexport const useWpcEditStore = defineStore('wpcEditStore', {\n    state: () => {\n        return {\n            romIsLoaded: useStorage('romIsLoaded',false),\n            romIsAltered: useStorage('romIsAltered',false),\n            viewTitle: 'WPC Edit',\n            fileName: useStorage('fileName',''),\n            isAtHomeView: useStorage('isAtHomeView',true),\n            currSpriteIndex: 0,\n            currSpriteTableIndex: 0,\n            currentRomData: null,\n            spriteTableMap: null,\n            calculatedChecksum: '',\n            storedChecksum: '',\n            versionByte: '',\n            fixupBytes: '',\n            checksumIsValid: false\n        }\n    },\n    getters: {\n        maxFullFrameIndex: (state) => {\n            /*\n            let index = 900;//WPCEdit.fullFrameImage.maxImageIndex;\n            let invalidImages = 0;\n            while(invalidImages<4 && index<2000) {\n                const plane = WPCEdit.fullFrameImage.getPlaneAt(index);\n                if(plane.type > 11 && plane.type != 255) {\n                    invalidImages++;\n                    console.log(\"INVALID at index: \"+index);\n                }\n                index++;\n            }\n            \n            //console.log(\"type: \"+plane.type);\n    \n            console.log(\"max: \"+index)\n            return index;*/\n            console.log(state);\n            return 1000;\n        }\n    },\n    actions: {\n        getRomFromCache() {\n            const cachedFileName = this.fileName;\n            get('currentRomData').then(\n                function(value) {\n                    loadRom(value,cachedFileName);\n                }\n            );\n            function loadRom(data,name) {\n                this.loadRom(data,name);\n            }\n        },\n        loadRom(data,name) {\n            WPCEdit.init();\n            if(WPCEdit.setRom(data)) {\n                this.fileName = name;\n                this.romIsLoaded = true;\n                this.currentRomData = data;\n                set('currentRomData',this.currentRomData);\n                this.spriteTableMap = WPCEdit.variableSizedImage.indexMap;\n                this.storedChecksum = pad(WPCEdit.checksum.stored.toString(16),4).toUpperCase();\n                this.calculatedChecksum = pad(WPCEdit.checksum.calculated.toString(16),4).toUpperCase();\n                this.fixupBytes = pad(WPCEdit.checksum.delta.toString(16),4).toUpperCase();\n                this.versionByte = pad((WPCEdit.checksum.stored & 0xFF).toString(16),2).toString(16);\n                this.checksumIsValid = WPCEdit.checksum.isValid;\n                //WPCEdit.verbose = true;\n            }\n            function pad(input, length) {\n                return (Array(length + 1).join('0') + input).slice(-length);\n            }\n            \n        },\n        unloadRom() {\n            this.romIsLoaded = false;\n            this.romIsAltered = false;\n            this.currentRomData = null;\n            this.spriteTableMap = null;\n            this.currSpriteIndex = 0;\n            this.currSpriteTableIndex = 0;\n            this.currentRomData = null;\n            this.spriteTableMap = null;\n            this.calculatedChecksum = 0;\n            this.storedChecksum = 0;\n            this.versionByte = 0;\n            this.fixupBytes = 0;\n            this.checksumIsValid = false;\n        },\n        getFullFrameImageAt(index) {\n            return WPCEdit.fullFrameImage.getPlaneAt(index);\n        },\n        getSpriteAt(table,index) {\n            WPCEdit.variableSizedImage.table = table;\n            WPCEdit.variableSizedImage.index = index;\n            return WPCEdit.variableSizedImage.plane;\n        },\n        getSpriteCentered(table,index) {\n            WPCEdit.variableSizedImage.table = table;\n            WPCEdit.variableSizedImage.index = index;\n            const spritePlane = WPCEdit.variableSizedImage.plane\n            const xOffset = Math.floor((128-spritePlane.width)/2);\n            const yOffset = Math.floor((32-spritePlane.height)/2);\n            const sprite = WPCEdit.variableSizedImage.placeInFullFrame(WPCEdit.variableSizedImage.plane,xOffset,yOffset)\n            return sprite;\n        },\n        getSpriteAsFullFrame(sprite,posX,posY) {\n            return sprite = WPCEdit.variableSizedImage.placeInFullFrame(sprite,posX,posY)\n        },\n        mergeImages(img1,img2,mask) {\n            return WPCEdit.fullFrameImage.mergeImages(img1,img2,mask);\n        },\n        updateChecksum(version) {\n            console.log(\"version is \"+ version)\n            const result = WPCEdit.checksum.update(version);\n            if(result.status == 1) {\n                this.loadRom(result.data,this.fileName);\n                this.romIsAltered = true;\n            }\n            return result.status;\n        },\n        disableChecksum() {\n            const newRom = WPCEdit.checksum.disable();\n            this.loadRom(newRom,this.fileName);\n            this.romIsAltered = true;\n            const result = 1; //Temp! Use a status variable\n            return result;\n        },\n        downloadRom() {\n            const blob = new Blob([this.currentRomData], {\n              type: 'application/octet-stream'\n            });\n            const url = window.URL.createObjectURL(blob);\n\n            const nameWithoutExtension = this.fileName.replace(/\\.[^/.]+$/, \"\");\n            const extension = \"rom\";\n            const date = new Date();\n            const suffix = \"_\"+date.getFullYear()+\"\"+pad(date.getMonth()+1,2)+\"\"+pad(date.getDate(),2)+\"\"+pad(date.getHours(),2)+\"\"+pad(date.getMinutes(),2)+\"_cs\"+this.storedChecksum;\n            const fileName = nameWithoutExtension + suffix + \".\" + extension;\n\n            downloadURL(url, fileName);\n            setTimeout(function() {\n              return window.URL.revokeObjectURL(url);\n            }, 1000);\n            // Hacky, but standard, way to download blobs:\n            // Turn it into a hidden href, then click the href and remove it\n            function downloadURL(data, fileName) {\n                const a = document.createElement('a');\n                a.href = data;\n                a.download = fileName;\n                document.body.appendChild(a);\n                a.style = 'display: none';\n                a.click();\n                a.remove();\n              }\n            function pad(input, length) {\n                return (Array(length + 1).join('0') + input).slice(-length);\n            }\n        }\n    },\n    persist: {\n        storage: localStorage\n    },\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}