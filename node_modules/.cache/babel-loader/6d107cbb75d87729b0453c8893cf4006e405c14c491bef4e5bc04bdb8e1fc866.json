{"ast":null,"code":"export default {\n  name: 'SubDmd',\n  props: {\n    plane: Uint8Array\n  },\n  methods: {\n    drawImage() {\n      //const DISPLAY_W = 512;\n      //const DISPLAY_H = 128;\n      const DOT_SIZE = 4;\n      const canvas = this.$refs.dmd;\n      const ctx = canvas.getContext(\"2d\");\n      for (let i = 0; i < this.plane.length; i++) {\n        const dotX = i % 128 * DOT_SIZE;\n        const dotY = Math.floor(i / 128) * DOT_SIZE;\n        ctx.beginPath();\n        ctx.arc(dotX, dotY, DOT_SIZE / 2, 0, 2 * Math.PI, false);\n        ctx.fillStyle = '#F29540';\n        ctx.fill();\n\n        /*\n                    let color = this.getDotValue(this.plane,counter);\n                    imageData.data[i] = color*187 +33;\n                    imageData.data[i+1] = color*100 +33;\n                    imageData.data[i+2] = 33;//color;\n                    imageData.data[i+3] = 255;\n                    counter++;*/\n      }\n    },\n\n    getDotValue(plane0Data, index) {\n      const width = 128;\n      const col = index % width;\n      const byte = Math.floor(index / 8);\n      const bitPos = col % 8;\n      const bit = (plane0Data[byte] & 0xFF) >> bitPos & 1;\n      return bit;\n    }\n  },\n  mounted() {\n    this.drawImage();\n  },\n  updated() {\n    this.drawImage();\n  }\n};","map":{"version":3,"mappings":"AAQA,eAAe;EACbA,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE;IACLC,KAAK,EAAEC;EACT,CAAC;EACDC,OAAO,EAAE;IACPC,SAAS,GAAG;MACR;MACA;MACA,MAAMC,QAAO,GAAI,CAAC;MAElB,MAAMC,MAAK,GAAI,IAAI,CAACC,KAAK,CAACC,GAAG;MAC7B,MAAMC,GAAE,GAAIH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;MACnC,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAC,IAAI,CAACV,KAAK,CAACW,MAAM,EAAED,CAAC,EAAE,EAAE;QACnC,MAAME,IAAG,GAAKF,IAAI,GAAG,GAAIN,QAAQ;QACjC,MAAMS,IAAG,GAAIC,IAAI,CAACC,KAAK,CAACL,IAAI,GAAG,IAAIN,QAAQ;QAC3CI,GAAG,CAACQ,SAAS,EAAE;QACfR,GAAG,CAACS,GAAG,CAACL,IAAI,EAAEC,IAAI,EAAET,QAAQ,GAAC,CAAC,EAAE,CAAC,EAAE,IAAIU,IAAI,CAACI,EAAE,EAAE,KAAK,CAAC;QACtDV,GAAG,CAACW,SAAQ,GAAI,SAAS;QACzBX,GAAG,CAACY,IAAI,EAAE;;QAEtB;;;;;;;MAOQ;IACJ,CAAC;;IACDC,WAAW,CAACC,UAAU,EAACC,KAAK,EAAE;MAC1B,MAAMC,KAAI,GAAI,GAAG;MACjB,MAAMC,GAAE,GAAIF,KAAI,GAAIC,KAAK;MACzB,MAAME,IAAG,GAAIZ,IAAI,CAACC,KAAK,CAACQ,KAAK,GAAC,CAAC,CAAC;MAChC,MAAMI,MAAK,GAAKF,GAAE,GAAI,CAAE;MACxB,MAAMG,GAAE,GAAK,CAAEN,UAAU,CAACI,IAAI,IAAI,IAAG,KAAOC,MAAM,GAAI,CAAC;MACvD,OAAOC,GAAG;IACd;EACF,CAAC;EACDC,OAAO,GAAG;IACR,IAAI,CAAC1B,SAAS,EAAE;EAClB,CAAC;EACD2B,OAAO,GAAG;IACR,IAAI,CAAC3B,SAAS,EAAE;EAClB;AACF","names":["name","props","plane","Uint8Array","methods","drawImage","DOT_SIZE","canvas","$refs","dmd","ctx","getContext","i","length","dotX","dotY","Math","floor","beginPath","arc","PI","fillStyle","fill","getDotValue","plane0Data","index","width","col","byte","bitPos","bit","mounted","updated"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/components/dmd/SubDmd.vue"],"sourcesContent":["<template>\n    <div class=\"dmd-container\">\n        <canvas ref=\"dmd\" width=\"512\" height=\"128\"></canvas>\n    </div> \n</template>\n\n<script>\n\nexport default {\n  name: 'SubDmd',\n  props: {\n    plane: Uint8Array,\n  },\n  methods: {\n    drawImage() {\n        //const DISPLAY_W = 512;\n        //const DISPLAY_H = 128;\n        const DOT_SIZE = 4;\n\n        const canvas = this.$refs.dmd;\n        const ctx = canvas.getContext(\"2d\");\n        for(let i=0; i<this.plane.length; i++) {\n            const dotX = (i % 128) * DOT_SIZE;\n            const dotY = Math.floor(i / 128) * DOT_SIZE;\n            ctx.beginPath();\n            ctx.arc(dotX, dotY, DOT_SIZE/2, 0, 2 * Math.PI, false);\n            ctx.fillStyle = '#F29540';\n            ctx.fill();\n\n/*\n            let color = this.getDotValue(this.plane,counter);\n            imageData.data[i] = color*187 +33;\n            imageData.data[i+1] = color*100 +33;\n            imageData.data[i+2] = 33;//color;\n            imageData.data[i+3] = 255;\n            counter++;*/\n        }\n    },\n    getDotValue(plane0Data,index) {\n        const width = 128;\n        const col = index % width;\n        const byte = Math.floor(index/8);\n        const bitPos = (col % 8);\n        const bit =  ( plane0Data[byte] & 0xFF ) >>(bitPos) & 1;\n        return bit;\n    }\n  },\n  mounted() {\n    this.drawImage();\n  },\n  updated() {\n    this.drawImage();\n  }\n}\n\n</script>\n\n<style>\n\n.dmd-container {\n    margin-top: 100px;\n}\n\n.dmd-canvas {\n    width: 936px;\n}\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}