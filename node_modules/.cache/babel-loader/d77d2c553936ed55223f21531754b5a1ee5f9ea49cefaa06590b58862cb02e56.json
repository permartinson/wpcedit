{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-59fd0449\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"scroll-area\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_PaginationBlock = _resolveComponent(\"PaginationBlock\");\n  const _component_SpriteList = _resolveComponent(\"SpriteList\");\n  const _component_SpriteModal = _resolveComponent(\"SpriteModal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [(_openBlock(), _createElementBlock(\"div\", {\n    class: \"main-container\",\n    key: $data.currPage\n  }, [$setup.settings.dmdsPerPage > 0 ? (_openBlock(), _createBlock(_component_PaginationBlock, {\n    key: 0,\n    class: \"pagination\",\n    onNext: $options.nextPage,\n    onPrev: $options.prevPage,\n    onStart: $options.startPage\n  }, null, 8 /* PROPS */, [\"onNext\", \"onPrev\", \"onStart\"])) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.tableMap, (table, index) => {\n    return _openBlock(), _createBlock(_component_SpriteList, {\n      key: $options.tableIndex(table.index),\n      table: table,\n      \"table-index\": $options.tableIndex(index),\n      onOpenModal: $options.openModal\n    }, {\n      default: _withCtx(() => [_createTextVNode(\" Sprite \")]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"table\", \"table-index\", \"onOpenModal\"]);\n  }), 128 /* KEYED_FRAGMENT */))])), _createVNode(_component_SpriteModal, {\n    show: $data.showModal,\n    onClose: _cache[0] || (_cache[0] = $event => $data.showModal = false),\n    index: $data.activeIndex,\n    table: $data.activeTable\n  }, null, 8 /* PROPS */, [\"show\", \"index\", \"table\"])]);\n}","map":{"version":3,"mappings":";;;EACSA,KAAK,EAAC;AAAa;;;;;uBAAxBC,oBAQM,OARNC,UAQM,kBAPFD,oBAKI;IALCD,KAAK,EAAC,gBAAgB;IAAEG,GAAG,EAAEC;MACTC,eAAQ,CAACC,WAAW,sBAA3CC,aAAyIC;;IAA1FR,KAAK,EAAC,YAAY;IAAES,MAAI,EAAEC,iBAAQ;IAAGC,MAAI,EAAED,iBAAQ;IAAGE,OAAK,EAAEF;oHAC1GT,oBAEaY,6BAFwBH,iBAAQ,GAAzBI,KAAK,EAAEC,KAAK;yBAAhCR,aAEaS;MAFmCb,GAAG,EAAEO,mBAAU,CAACI,KAAK,CAACC,KAAK;MAAID,KAAK,EAAEA,KAAK;MAAG,aAAW,EAAEJ,mBAAU,CAACK,KAAK;MAAIE,WAAS,EAAEP;;wBAAW,MAErJ,kBAFqJ,UAErJ;;;qCAENQ,aAAkHC;IAApGC,IAAI,EAAEhB,eAAS;IAAGiB,OAAK,sCAAEjB,eAAS;IAAWW,KAAK,EAAEX,iBAAW;IAAGU,KAAK,EAAEV","names":["class","_createElementBlock","_hoisted_1","key","$data","$setup","dmdsPerPage","_createBlock","_component_PaginationBlock","onNext","$options","onPrev","onStart","_Fragment","table","index","_component_SpriteList","onOpenModal","_createVNode","_component_SpriteModal","show","onClose"],"sourceRoot":"","sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/views/SpritesView.vue"],"sourcesContent":["<template>\n    <div class=\"scroll-area\">\n        <div class=\"main-container\" :key=\"currPage\">\n          <PaginationBlock v-if=\"settings.dmdsPerPage>0\" class=\"pagination\" @next=\"nextPage\" @prev=\"prevPage\" @start=\"startPage\"></PaginationBlock>\n            <SpriteList v-for=\"(table, index) in tableMap\" :key=\"tableIndex(table.index)\" :table=\"table\" :table-index=\"tableIndex(index)\" @openModal=\"openModal\">\n              Sprite\n            </SpriteList>\n      </div>\n      <SpriteModal :show=\"showModal\" @close=\"showModal = false\" :index=\"activeIndex\" :table=\"activeTable\"></SpriteModal>\n    </div>\n  </template>\n  \n  <script>\n    import SpriteList from '../components/ui/lists/SpriteList.vue';\n    import PaginationBlock from '../components/ui/PaginationBlock.vue';\n    import SpriteModal from '../components/ui/modals/SpriteModal.vue';\n    import store from \"../stores/store.js\";\n    import { storeToRefs } from 'pinia';\n    import { useAppState } from '../stores/appState.js';\n    import { useWpcEditStore } from '../stores/wpcEditStore.js';\n    \n    const AppState = useAppState(store);\n    const WpcEditStore = useWpcEditStore(store);\n\n  export default {\n    name: 'SpritesView',\n    components: {\n        SpriteList,\n        PaginationBlock,\n        SpriteModal\n    },\n    props: {\n      \n      },\n    setup() {\n      const { spriteTableMap, settings } = storeToRefs(WpcEditStore);\n      return {\n        spriteTableMap,\n        settings\n      }\n    },\n    data() {\n        return {\n          plane0: new Uint8Array([\n            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  240,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  254,  7,  128,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  128,  255,  15,  192,  0,  0,  224,  192,  1,  0,  0,  0,  0,  0,  0,  0,  192,  15,  31,  224,  0,  0,  240,  224,  1,  0,  0,  0,  0,  0,  0,  0,  224,  1,  30,  112,  0,  0,  120,  240,  0,  0,  0,  0,  0,  0,  0,  0,  240,  8,  30,  120,  0,  0,  124,  248,  0,  0,  0,  0,  0,  0,  0,  0,  120,  24,  62,  124,  48,  3,  60,  120,  48,  0,  0,  0,  0,  0,  0,  0,  60,  24,  62,  60,  184,  7,  62,  124,  120,  0,  0,  0,  0,  0,  0,  0,  28,  28,  63,  62,  156,  5,  30,  60,  88,  0,  0,  0,  0,  0,  0,  0,  14,  28,  31,  31,  142,  4,  31,  62,  72,  0,  0,  0,  0,  0,  0,  0,  14,  20,  157,  31,  7,  131,  15,  31,  48,  0,  0,  0,  0,  0,  0,  0,  7,  150,  221,  159,  3,  128,  15,  31,  0,  0,  0,  0,  0,  0,  0,  8,  7,  138,  236,  205,  1,  192,  135,  15,  0,  0,  0,  0,  0,  0,  0,  28,  3,  203,  252,  238,  1,  224,  194,  5,  0,  0,  0,  0,  0,  0,  0,  14,  131,  73,  56,  254,  0,  96,  195,  6,  0,  0,  0,  0,  0,  0,  0,  7,  195,  100,  0,  119,  120,  48,  97,  2,  15,  248,  60,  56,  56,  112,  128,  7,  101,  34,  48,  35,  126,  184,  113,  195,  15,  254,  63,  126,  124,  252,  192,  7,  154,  49,  40,  49,  127,  152,  48,  225,  15,  159,  31,  127,  255,  254,  225,  7,  124,  16,  36,  144,  45,  204,  152,  241,  134,  143,  159,  255,  255,  255,  241,  14,  0,  24,  18,  136,  52,  66,  140,  88,  194,  141,  202,  250,  235,  183,  89,  10,  0,  12,  17,  200,  24,  65,  70,  72,  163,  132,  72,  53,  105,  154,  44,  10,  0,  132,  16,  36,  136,  32,  65,  12,  17,  66,  164,  130,  12,  205,  20,  27,  0,  66,  16,  36,  72,  160,  32,  134,  9,  66,  148,  130,  132,  68,  6,  115,  0,  33,  16,  66,  36,  80,  32,  129,  4,  33,  82,  65,  66,  98,  18,  65,  128,  24,  16,  66,  148,  32,  145,  132,  10,  17,  42,  33,  34,  34,  161,  33,  64,  4,  16,  65,  72,  129,  98,  10,  149,  8,  149,  16,  33,  162,  166,  16,  32,  3,  16,  65,  32,  65,  4,  9,  146,  28,  138,  8,  17,  66,  73,  8,  208,  0,  160,  128,  24,  34,  132,  144,  33,  39,  70,  136,  8,  196,  8,  6,  56,  0,  192,  0,  7,  28,  120,  96,  192,  195,  193,  135,  7,  56,  240,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0\n          ]),\n          plane1: new Uint8Array([\n            0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  240,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  158,  7,  128,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  128,  3,  0,  192,  0,  0,  224,  192,  1,  0,  0,  0,  0,  0,  0,  0,  192,  0,  0,  96,  0,  0,  48,  96,  0,  0,  0,  0,  0,  0,  0,  0,  96,  0,  0,  48,  0,  0,  24,  48,  0,  0,  0,  0,  0,  0,  0,  0,  48,  8,  0,  24,  0,  0,  12,  24,  0,  0,  0,  0,  0,  0,  0,  0,  24,  24,  0,  12,  48,  3,  4,  8,  48,  0,  0,  0,  0,  0,  0,  0,  12,  8,  0,  4,  152,  1,  6,  12,  24,  0,  0,  0,  0,  0,  0,  0,  4,  12,  0,  6,  140,  2,  2,  4,  40,  0,  0,  0,  0,  0,  0,  0,  6,  4,  0,  3,  134,  3,  3,  6,  56,  0,  0,  0,  0,  0,  0,  0,  2,  12,  130,  1,  3,  128,  1,  3,  0,  0,  0,  0,  0,  0,  0,  0,  3,  14,  194,  128,  1,  128,  0,  1,  0,  0,  0,  0,  0,  0,  0,  8,  1,  6,  99,  194,  0,  192,  128,  1,  0,  0,  0,  0,  0,  0,  0,  12,  1,  7,  51,  97,  0,  96,  193,  2,  0,  0,  0,  0,  0,  0,  0,  6,  129,  135,  199,  49,  0,  160,  64,  1,  0,  0,  0,  0,  0,  0,  0,  3,  193,  131,  255,  8,  120,  240,  224,  1,  15,  248,  60,  56,  56,  112,  128,  1,  227,  193,  207,  28,  14,  88,  176,  192,  1,  14,  7,  14,  12,  28,  192,  0,  100,  192,  199,  14,  3,  104,  208,  96,  0,  3,  0,  3,  7,  6,  96,  0,  0,  224,  195,  15,  18,  48,  96,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  224,  225,  7,  11,  60,  112,  160,  1,  2,  5,  1,  16,  64,  32,  4,  0,  240,  224,  7,  7,  62,  56,  176,  64,  3,  135,  200,  144,  97,  16,  4,  0,  120,  224,  195,  7,  31,  62,  240,  224,  129,  67,  124,  240,  48,  8,  4,  0,  60,  224,  195,  135,  31,  31,  120,  240,  129,  99,  124,  120,  56,  8,  12,  0,  30,  224,  129,  195,  143,  31,  126,  248,  192,  33,  62,  60,  28,  12,  62,  0,  7,  224,  129,  99,  223,  14,  123,  244,  224,  17,  30,  28,  28,  30,  30,  128,  3,  224,  128,  55,  126,  156,  241,  98,  240,  8,  15,  30,  28,  25,  15,  192,  0,  224,  128,  31,  62,  248,  240,  97,  224,  5,  7,  14,  188,  144,  7,  240,  0,  224,  128,  31,  62,  252,  240,  225,  230,  199,  143,  15,  252,  248,  7,  56,  0,  192,  0,  7,  28,  120,  96,  192,  195,  193,  135,  7,  56,  240,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0\n          ]),\n          emptyPlane: new Uint8Array(512),\n          activeIndex: 0,\n          activeTable: 0,\n          currPage: 0,\n          showModal: false\n      }\n    },\n    computed: {\n      tableMap() { // Translate table map to a local, so we can paginate\n        if(this.settings.dmdsPerPage > 0) {\n          return [ this.spriteTableMap[this.currPage] ];\n        } else {\n          return this.spriteTableMap;\n        }\n      }\n    },\n    methods: {\n      openModal(event) {\n        this.activeIndex = event.index;\n        this.activeTable = event.tableIndex;\n        this.showModal = true;\n      },\n      getSprite(index) {\n        return WpcEditStore.getSpriteAt(1,index).image;\n      },\n      spriteTables() {\n        return WpcEditStore.vsImageIndexMap.length;\n      },\n      tableIndex(index) {\n        if(this.settings.dmdsPerPage>0) {\n          return this.currPage;\n        } else {\n          return index;\n        }\n      },\n      nextPage() {\n        this.currPage++;\n      },\n      prevPage() {\n        this.currPage = Math.max(0,this.currPage-1);\n      },\n      startPage() {\n        this.currPage = 0;\n      }\n    },\n    beforeRouteEnter() {\n        AppState.setViewTitle(\"Sprites and fonts\");\n        AppState.isAtHomeView = false;\n    }\n  }\n  \n  </script>\n  \n  <style scoped>\n\n  .fullframe-list {\n    display: flex;\n    justify-items: left;\n    flex-wrap: wrap;\n    max-width: 102rem;\n  }\n\n  </style>\n  \n  \n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}