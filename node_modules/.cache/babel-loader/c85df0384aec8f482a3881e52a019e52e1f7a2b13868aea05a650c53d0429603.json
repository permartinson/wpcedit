{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { WPCEdit } from 'wpcedit';\nexport const useWpcEditStore = defineStore('wpcEditStore', {\n  state: () => {\n    return {\n      romIsLoaded: false,\n      viewTitle: 'WPC Edit',\n      isAtHomeView: true,\n      maxFullFrameIndex: 50,\n      currSpriteIndex: 0,\n      currSpriteTableIndex: 0,\n      currentRomData: null\n    };\n  },\n  getters: {\n    maxSpriteTable: () => {\n      return 64; //TEMP! Get value from ROM!\n    },\n\n    maxSpriteIndexInCurrentTable: () => {\n      return 1208; //TEMP! Get value from ROM!\n    }\n  },\n\n  actions: {\n    loadRom(data) {\n      WPCEdit.init();\n      if (WPCEdit.setRom(data)) {\n        this.romIsLoaded = true;\n        this.currentRomData = data;\n        this.maxFullFrameIndex = WPCEdit.fullFrameImage.maxFullFrameIndex;\n      } else {\n        console.error(\"Could not load rom!\");\n      }\n    },\n    getFullFrameImageAt(index) {\n      WPCEdit.fullFrameImage.index = index;\n      return WPCEdit.fullFrameImage.plane;\n    },\n    getSpriteAt(table, index) {\n      WPCEdit.variableSizedImage.next(1);\n      console.log(table + \" \" + index);\n\n      /* implement a pattern like this in WPCEdit.js\n      /* ===========================================\n      const indexDelta = index - this.currSpriteIndex;\n      if(indexDelta < 0) {\n          WPCEdit.variableSizedImage.prev(Math.abs(indexDelta))\n      } else {\n          WPCEdit.variableSizedImage.next(indexDelta);\n      }\n      this.currSpriteIndex = index;\n      */\n\n      return WPCEdit.variableSizedImage.plane;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","WPCEdit","useWpcEditStore","state","romIsLoaded","viewTitle","isAtHomeView","maxFullFrameIndex","currSpriteIndex","currSpriteTableIndex","currentRomData","getters","maxSpriteTable","maxSpriteIndexInCurrentTable","actions","loadRom","data","init","setRom","fullFrameImage","console","error","getFullFrameImageAt","index","plane","getSpriteAt","table","variableSizedImage","next","log"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/stores/wpcEditStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport { WPCEdit } from 'wpcedit';\n\nexport const useWpcEditStore = defineStore('wpcEditStore', {\n    state: () => {\n        return {\n            romIsLoaded: false,\n            viewTitle: 'WPC Edit',\n            isAtHomeView: true,\n            maxFullFrameIndex: 50,\n            currSpriteIndex: 0,\n            currSpriteTableIndex: 0,\n            currentRomData: null\n        }\n    },\n    getters: {\n        maxSpriteTable: () => {\n            return 64; //TEMP! Get value from ROM!\n        },\n        maxSpriteIndexInCurrentTable: () => {\n            return 1208; //TEMP! Get value from ROM!\n        },\n    },\n    actions: {\n        loadRom(data) {\n            WPCEdit.init();\n            if(WPCEdit.setRom(data)) {\n                this.romIsLoaded = true;\n                this.currentRomData = data;\n                this.maxFullFrameIndex = WPCEdit.fullFrameImage.maxFullFrameIndex;\n            } else {\n                console.error(\"Could not load rom!\");\n            }\n        },\n        getFullFrameImageAt(index) {\n            WPCEdit.fullFrameImage.index = index;\n            return WPCEdit.fullFrameImage.plane;\n        },\n        getSpriteAt(table,index) {\n            WPCEdit.variableSizedImage.next(1);\n            console.log(table+ \" \"+index);\n\n            /* implement a pattern like this in WPCEdit.js\n            /* ===========================================\n            const indexDelta = index - this.currSpriteIndex;\n            if(indexDelta < 0) {\n                WPCEdit.variableSizedImage.prev(Math.abs(indexDelta))\n            } else {\n                WPCEdit.variableSizedImage.next(indexDelta);\n            }\n            this.currSpriteIndex = index;\n            */\n\n            return WPCEdit.variableSizedImage.plane;\n        }\n    }\n})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,OAAO,QAAQ,SAAS;AAEjC,OAAO,MAAMC,eAAe,GAAGF,WAAW,CAAC,cAAc,EAAE;EACvDG,KAAK,EAAE,MAAM;IACT,OAAO;MACHC,WAAW,EAAE,KAAK;MAClBC,SAAS,EAAE,UAAU;MACrBC,YAAY,EAAE,IAAI;MAClBC,iBAAiB,EAAE,EAAE;MACrBC,eAAe,EAAE,CAAC;MAClBC,oBAAoB,EAAE,CAAC;MACvBC,cAAc,EAAE;IACpB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,cAAc,EAAE,MAAM;MAClB,OAAO,EAAE,CAAC,CAAC;IACf,CAAC;;IACDC,4BAA4B,EAAE,MAAM;MAChC,OAAO,IAAI,CAAC,CAAC;IACjB;EACJ,CAAC;;EACDC,OAAO,EAAE;IACLC,OAAO,CAACC,IAAI,EAAE;MACVf,OAAO,CAACgB,IAAI,EAAE;MACd,IAAGhB,OAAO,CAACiB,MAAM,CAACF,IAAI,CAAC,EAAE;QACrB,IAAI,CAACZ,WAAW,GAAG,IAAI;QACvB,IAAI,CAACM,cAAc,GAAGM,IAAI;QAC1B,IAAI,CAACT,iBAAiB,GAAGN,OAAO,CAACkB,cAAc,CAACZ,iBAAiB;MACrE,CAAC,MAAM;QACHa,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC;MACxC;IACJ,CAAC;IACDC,mBAAmB,CAACC,KAAK,EAAE;MACvBtB,OAAO,CAACkB,cAAc,CAACI,KAAK,GAAGA,KAAK;MACpC,OAAOtB,OAAO,CAACkB,cAAc,CAACK,KAAK;IACvC,CAAC;IACDC,WAAW,CAACC,KAAK,EAACH,KAAK,EAAE;MACrBtB,OAAO,CAAC0B,kBAAkB,CAACC,IAAI,CAAC,CAAC,CAAC;MAClCR,OAAO,CAACS,GAAG,CAACH,KAAK,GAAE,GAAG,GAACH,KAAK,CAAC;;MAE7B;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;MAEY,OAAOtB,OAAO,CAAC0B,kBAAkB,CAACH,KAAK;IAC3C;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}