{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = runAsChild;\nvar _utils = require(\"./utils\");\nfunction runAsChild(loaderContext, workerContext, options, callback) {\n  workerContext.compiler.runAsChild((error, entries, compilation) => {\n    if (error) {\n      return callback(error);\n    }\n    if (entries[0]) {\n      const [workerFilename] = [...entries[0].files];\n      const cache = workerContext.compiler.getCache(\"worker-loader\");\n      const cacheIdent = workerFilename;\n      const cacheETag = cache.getLazyHashedEtag(compilation.assets[workerFilename]);\n      return cache.get(cacheIdent, cacheETag, (getCacheError, content) => {\n        if (getCacheError) {\n          return callback(getCacheError);\n        }\n        if (options.inline === \"no-fallback\") {\n          // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n          delete loaderContext._compilation.assets[workerFilename]; // TODO improve this, we should store generated source maps files for file in `assetInfo`\n          // eslint-disable-next-line no-underscore-dangle\n\n          if (loaderContext._compilation.assets[`${workerFilename}.map`]) {\n            // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n            delete loaderContext._compilation.assets[`${workerFilename}.map`];\n          }\n        }\n        if (content) {\n          return callback(null, content);\n        }\n        let workerSource = compilation.assets[workerFilename].source();\n        if (options.inline === \"no-fallback\") {\n          // Remove `/* sourceMappingURL=url */` comment\n          workerSource = workerSource.replace(_utils.sourceMappingURLRegex, \"\"); // Remove `//# sourceURL=webpack-internal` comment\n\n          workerSource = workerSource.replace(_utils.sourceURLWebpackRegex, \"\");\n        }\n        const workerCode = (0, _utils.workerGenerator)(loaderContext, workerFilename, workerSource, options);\n        const workerCodeBuffer = Buffer.from(workerCode);\n        return cache.store(cacheIdent, cacheETag, workerCodeBuffer, storeCacheError => {\n          if (storeCacheError) {\n            return callback(storeCacheError);\n          }\n          return callback(null, workerCodeBuffer);\n        });\n      });\n    }\n    return callback(new Error(`Failed to compile web worker \"${workerContext.request}\" request`));\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","runAsChild","_utils","require","loaderContext","workerContext","options","callback","compiler","error","entries","compilation","workerFilename","files","cache","getCache","cacheIdent","cacheETag","getLazyHashedEtag","assets","get","getCacheError","content","inline","_compilation","workerSource","source","replace","sourceMappingURLRegex","sourceURLWebpackRegex","workerCode","workerGenerator","workerCodeBuffer","Buffer","from","store","storeCacheError","Error","request"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/node_modules/worker-loader/dist/supportWebpack5.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = runAsChild;\n\nvar _utils = require(\"./utils\");\n\nfunction runAsChild(loaderContext, workerContext, options, callback) {\n  workerContext.compiler.runAsChild((error, entries, compilation) => {\n    if (error) {\n      return callback(error);\n    }\n\n    if (entries[0]) {\n      const [workerFilename] = [...entries[0].files];\n      const cache = workerContext.compiler.getCache(\"worker-loader\");\n      const cacheIdent = workerFilename;\n      const cacheETag = cache.getLazyHashedEtag(compilation.assets[workerFilename]);\n      return cache.get(cacheIdent, cacheETag, (getCacheError, content) => {\n        if (getCacheError) {\n          return callback(getCacheError);\n        }\n\n        if (options.inline === \"no-fallback\") {\n          // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n          delete loaderContext._compilation.assets[workerFilename]; // TODO improve this, we should store generated source maps files for file in `assetInfo`\n          // eslint-disable-next-line no-underscore-dangle\n\n          if (loaderContext._compilation.assets[`${workerFilename}.map`]) {\n            // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n            delete loaderContext._compilation.assets[`${workerFilename}.map`];\n          }\n        }\n\n        if (content) {\n          return callback(null, content);\n        }\n\n        let workerSource = compilation.assets[workerFilename].source();\n\n        if (options.inline === \"no-fallback\") {\n          // Remove `/* sourceMappingURL=url */` comment\n          workerSource = workerSource.replace(_utils.sourceMappingURLRegex, \"\"); // Remove `//# sourceURL=webpack-internal` comment\n\n          workerSource = workerSource.replace(_utils.sourceURLWebpackRegex, \"\");\n        }\n\n        const workerCode = (0, _utils.workerGenerator)(loaderContext, workerFilename, workerSource, options);\n        const workerCodeBuffer = Buffer.from(workerCode);\n        return cache.store(cacheIdent, cacheETag, workerCodeBuffer, storeCacheError => {\n          if (storeCacheError) {\n            return callback(storeCacheError);\n          }\n\n          return callback(null, workerCodeBuffer);\n        });\n      });\n    }\n\n    return callback(new Error(`Failed to compile web worker \"${workerContext.request}\" request`));\n  });\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAGC,UAAU;AAE5B,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;AAE/B,SAASF,UAAU,CAACG,aAAa,EAAEC,aAAa,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EACnEF,aAAa,CAACG,QAAQ,CAACP,UAAU,CAAC,CAACQ,KAAK,EAAEC,OAAO,EAAEC,WAAW,KAAK;IACjE,IAAIF,KAAK,EAAE;MACT,OAAOF,QAAQ,CAACE,KAAK,CAAC;IACxB;IAEA,IAAIC,OAAO,CAAC,CAAC,CAAC,EAAE;MACd,MAAM,CAACE,cAAc,CAAC,GAAG,CAAC,GAAGF,OAAO,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC;MAC9C,MAAMC,KAAK,GAAGT,aAAa,CAACG,QAAQ,CAACO,QAAQ,CAAC,eAAe,CAAC;MAC9D,MAAMC,UAAU,GAAGJ,cAAc;MACjC,MAAMK,SAAS,GAAGH,KAAK,CAACI,iBAAiB,CAACP,WAAW,CAACQ,MAAM,CAACP,cAAc,CAAC,CAAC;MAC7E,OAAOE,KAAK,CAACM,GAAG,CAACJ,UAAU,EAAEC,SAAS,EAAE,CAACI,aAAa,EAAEC,OAAO,KAAK;QAClE,IAAID,aAAa,EAAE;UACjB,OAAOd,QAAQ,CAACc,aAAa,CAAC;QAChC;QAEA,IAAIf,OAAO,CAACiB,MAAM,KAAK,aAAa,EAAE;UACpC;UACA,OAAOnB,aAAa,CAACoB,YAAY,CAACL,MAAM,CAACP,cAAc,CAAC,CAAC,CAAC;UAC1D;;UAEA,IAAIR,aAAa,CAACoB,YAAY,CAACL,MAAM,CAAE,GAAEP,cAAe,MAAK,CAAC,EAAE;YAC9D;YACA,OAAOR,aAAa,CAACoB,YAAY,CAACL,MAAM,CAAE,GAAEP,cAAe,MAAK,CAAC;UACnE;QACF;QAEA,IAAIU,OAAO,EAAE;UACX,OAAOf,QAAQ,CAAC,IAAI,EAAEe,OAAO,CAAC;QAChC;QAEA,IAAIG,YAAY,GAAGd,WAAW,CAACQ,MAAM,CAACP,cAAc,CAAC,CAACc,MAAM,EAAE;QAE9D,IAAIpB,OAAO,CAACiB,MAAM,KAAK,aAAa,EAAE;UACpC;UACAE,YAAY,GAAGA,YAAY,CAACE,OAAO,CAACzB,MAAM,CAAC0B,qBAAqB,EAAE,EAAE,CAAC,CAAC,CAAC;;UAEvEH,YAAY,GAAGA,YAAY,CAACE,OAAO,CAACzB,MAAM,CAAC2B,qBAAqB,EAAE,EAAE,CAAC;QACvE;QAEA,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAE5B,MAAM,CAAC6B,eAAe,EAAE3B,aAAa,EAAEQ,cAAc,EAAEa,YAAY,EAAEnB,OAAO,CAAC;QACpG,MAAM0B,gBAAgB,GAAGC,MAAM,CAACC,IAAI,CAACJ,UAAU,CAAC;QAChD,OAAOhB,KAAK,CAACqB,KAAK,CAACnB,UAAU,EAAEC,SAAS,EAAEe,gBAAgB,EAAEI,eAAe,IAAI;UAC7E,IAAIA,eAAe,EAAE;YACnB,OAAO7B,QAAQ,CAAC6B,eAAe,CAAC;UAClC;UAEA,OAAO7B,QAAQ,CAAC,IAAI,EAAEyB,gBAAgB,CAAC;QACzC,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IAEA,OAAOzB,QAAQ,CAAC,IAAI8B,KAAK,CAAE,iCAAgChC,aAAa,CAACiC,OAAQ,WAAU,CAAC,CAAC;EAC/F,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}