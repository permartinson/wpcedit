{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { utils, ExtensionType, extensions } from '@pixi/core';\nimport { DisplayObject } from '@pixi/display';\nimport { FederatedEvent } from '@pixi/events';\nimport { accessibleTarget } from './accessibleTarget.mjs';\nDisplayObject.mixin(accessibleTarget);\nconst KEY_CODE_TAB = 9;\nconst DIV_TOUCH_SIZE = 100;\nconst DIV_TOUCH_POS_X = 0;\nconst DIV_TOUCH_POS_Y = 0;\nconst DIV_TOUCH_ZINDEX = 2;\nconst DIV_HOOK_SIZE = 1;\nconst DIV_HOOK_POS_X = -1e3;\nconst DIV_HOOK_POS_Y = -1e3;\nconst DIV_HOOK_ZINDEX = 2;\nclass AccessibilityManager {\n  constructor(renderer) {\n    this.debug = false;\n    this._isActive = false;\n    this._isMobileAccessibility = false;\n    this.pool = [];\n    this.renderId = 0;\n    this.children = [];\n    this.androidUpdateCount = 0;\n    this.androidUpdateFrequency = 500;\n    this._hookDiv = null;\n    if (utils.isMobile.tablet || utils.isMobile.phone) {\n      this.createTouchHook();\n    }\n    const div = document.createElement(\"div\");\n    div.style.width = `${DIV_TOUCH_SIZE}px`;\n    div.style.height = `${DIV_TOUCH_SIZE}px`;\n    div.style.position = \"absolute\";\n    div.style.top = `${DIV_TOUCH_POS_X}px`;\n    div.style.left = `${DIV_TOUCH_POS_Y}px`;\n    div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n    this.div = div;\n    this.renderer = renderer;\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onMouseMove = this._onMouseMove.bind(this);\n    globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n  }\n  get isActive() {\n    return this._isActive;\n  }\n  get isMobileAccessibility() {\n    return this._isMobileAccessibility;\n  }\n  createTouchHook() {\n    const hookDiv = document.createElement(\"button\");\n    hookDiv.style.width = `${DIV_HOOK_SIZE}px`;\n    hookDiv.style.height = `${DIV_HOOK_SIZE}px`;\n    hookDiv.style.position = \"absolute\";\n    hookDiv.style.top = `${DIV_HOOK_POS_X}px`;\n    hookDiv.style.left = `${DIV_HOOK_POS_Y}px`;\n    hookDiv.style.zIndex = DIV_HOOK_ZINDEX.toString();\n    hookDiv.style.backgroundColor = \"#FF0000\";\n    hookDiv.title = \"select to enable accessibility for this content\";\n    hookDiv.addEventListener(\"focus\", () => {\n      this._isMobileAccessibility = true;\n      this.activate();\n      this.destroyTouchHook();\n    });\n    document.body.appendChild(hookDiv);\n    this._hookDiv = hookDiv;\n  }\n  destroyTouchHook() {\n    if (!this._hookDiv) {\n      return;\n    }\n    document.body.removeChild(this._hookDiv);\n    this._hookDiv = null;\n  }\n  activate() {\n    if (this._isActive) {\n      return;\n    }\n    this._isActive = true;\n    globalThis.document.addEventListener(\"mousemove\", this._onMouseMove, true);\n    globalThis.removeEventListener(\"keydown\", this._onKeyDown, false);\n    this.renderer.on(\"postrender\", this.update, this);\n    this.renderer.view.parentNode?.appendChild(this.div);\n  }\n  deactivate() {\n    if (!this._isActive || this._isMobileAccessibility) {\n      return;\n    }\n    this._isActive = false;\n    globalThis.document.removeEventListener(\"mousemove\", this._onMouseMove, true);\n    globalThis.addEventListener(\"keydown\", this._onKeyDown, false);\n    this.renderer.off(\"postrender\", this.update);\n    this.div.parentNode?.removeChild(this.div);\n  }\n  updateAccessibleObjects(displayObject) {\n    if (!displayObject.visible || !displayObject.accessibleChildren) {\n      return;\n    }\n    if (displayObject.accessible && displayObject.interactive) {\n      if (!displayObject._accessibleActive) {\n        this.addChild(displayObject);\n      }\n      displayObject.renderId = this.renderId;\n    }\n    const children = displayObject.children;\n    if (children) {\n      for (let i = 0; i < children.length; i++) {\n        this.updateAccessibleObjects(children[i]);\n      }\n    }\n  }\n  update() {\n    const now = performance.now();\n    if (utils.isMobile.android.device && now < this.androidUpdateCount) {\n      return;\n    }\n    this.androidUpdateCount = now + this.androidUpdateFrequency;\n    if (!this.renderer.renderingToScreen) {\n      return;\n    }\n    if (this.renderer.lastObjectRendered) {\n      this.updateAccessibleObjects(this.renderer.lastObjectRendered);\n    }\n    const {\n      x,\n      y,\n      width,\n      height\n    } = this.renderer.view.getBoundingClientRect();\n    const {\n      width: viewWidth,\n      height: viewHeight,\n      resolution\n    } = this.renderer;\n    const sx = width / viewWidth * resolution;\n    const sy = height / viewHeight * resolution;\n    let div = this.div;\n    div.style.left = `${x}px`;\n    div.style.top = `${y}px`;\n    div.style.width = `${viewWidth}px`;\n    div.style.height = `${viewHeight}px`;\n    for (let i = 0; i < this.children.length; i++) {\n      const child = this.children[i];\n      if (child.renderId !== this.renderId) {\n        child._accessibleActive = false;\n        utils.removeItems(this.children, i, 1);\n        this.div.removeChild(child._accessibleDiv);\n        this.pool.push(child._accessibleDiv);\n        child._accessibleDiv = null;\n        i--;\n      } else {\n        div = child._accessibleDiv;\n        let hitArea = child.hitArea;\n        const wt = child.worldTransform;\n        if (child.hitArea) {\n          div.style.left = `${(wt.tx + hitArea.x * wt.a) * sx}px`;\n          div.style.top = `${(wt.ty + hitArea.y * wt.d) * sy}px`;\n          div.style.width = `${hitArea.width * wt.a * sx}px`;\n          div.style.height = `${hitArea.height * wt.d * sy}px`;\n        } else {\n          hitArea = child.getBounds();\n          this.capHitArea(hitArea);\n          div.style.left = `${hitArea.x * sx}px`;\n          div.style.top = `${hitArea.y * sy}px`;\n          div.style.width = `${hitArea.width * sx}px`;\n          div.style.height = `${hitArea.height * sy}px`;\n          if (div.title !== child.accessibleTitle && child.accessibleTitle !== null) {\n            div.title = child.accessibleTitle;\n          }\n          if (div.getAttribute(\"aria-label\") !== child.accessibleHint && child.accessibleHint !== null) {\n            div.setAttribute(\"aria-label\", child.accessibleHint);\n          }\n        }\n        if (child.accessibleTitle !== div.title || child.tabIndex !== div.tabIndex) {\n          div.title = child.accessibleTitle;\n          div.tabIndex = child.tabIndex;\n          if (this.debug) this.updateDebugHTML(div);\n        }\n      }\n    }\n    this.renderId++;\n  }\n  updateDebugHTML(div) {\n    div.innerHTML = `type: ${div.type}</br> title : ${div.title}</br> tabIndex: ${div.tabIndex}`;\n  }\n  capHitArea(hitArea) {\n    if (hitArea.x < 0) {\n      hitArea.width += hitArea.x;\n      hitArea.x = 0;\n    }\n    if (hitArea.y < 0) {\n      hitArea.height += hitArea.y;\n      hitArea.y = 0;\n    }\n    const {\n      width: viewWidth,\n      height: viewHeight\n    } = this.renderer;\n    if (hitArea.x + hitArea.width > viewWidth) {\n      hitArea.width = viewWidth - hitArea.x;\n    }\n    if (hitArea.y + hitArea.height > viewHeight) {\n      hitArea.height = viewHeight - hitArea.y;\n    }\n  }\n  addChild(displayObject) {\n    let div = this.pool.pop();\n    if (!div) {\n      div = document.createElement(\"button\");\n      div.style.width = `${DIV_TOUCH_SIZE}px`;\n      div.style.height = `${DIV_TOUCH_SIZE}px`;\n      div.style.backgroundColor = this.debug ? \"rgba(255,255,255,0.5)\" : \"transparent\";\n      div.style.position = \"absolute\";\n      div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n      div.style.borderStyle = \"none\";\n      if (navigator.userAgent.toLowerCase().includes(\"chrome\")) {\n        div.setAttribute(\"aria-live\", \"off\");\n      } else {\n        div.setAttribute(\"aria-live\", \"polite\");\n      }\n      if (navigator.userAgent.match(/rv:.*Gecko\\//)) {\n        div.setAttribute(\"aria-relevant\", \"additions\");\n      } else {\n        div.setAttribute(\"aria-relevant\", \"text\");\n      }\n      div.addEventListener(\"click\", this._onClick.bind(this));\n      div.addEventListener(\"focus\", this._onFocus.bind(this));\n      div.addEventListener(\"focusout\", this._onFocusOut.bind(this));\n    }\n    div.style.pointerEvents = displayObject.accessiblePointerEvents;\n    div.type = displayObject.accessibleType;\n    if (displayObject.accessibleTitle && displayObject.accessibleTitle !== null) {\n      div.title = displayObject.accessibleTitle;\n    } else if (!displayObject.accessibleHint || displayObject.accessibleHint === null) {\n      div.title = `displayObject ${displayObject.tabIndex}`;\n    }\n    if (displayObject.accessibleHint && displayObject.accessibleHint !== null) {\n      div.setAttribute(\"aria-label\", displayObject.accessibleHint);\n    }\n    if (this.debug) this.updateDebugHTML(div);\n    displayObject._accessibleActive = true;\n    displayObject._accessibleDiv = div;\n    div.displayObject = displayObject;\n    this.children.push(displayObject);\n    this.div.appendChild(displayObject._accessibleDiv);\n    displayObject._accessibleDiv.tabIndex = displayObject.tabIndex;\n  }\n  _dispatchEvent(e, type) {\n    const {\n      displayObject: target\n    } = e.target;\n    const boundry = this.renderer.events.rootBoundary;\n    const event = Object.assign(new FederatedEvent(boundry), {\n      target\n    });\n    boundry.rootTarget = this.renderer.lastObjectRendered;\n    type.forEach(type2 => boundry.dispatchEvent(event, type2));\n  }\n  _onClick(e) {\n    this._dispatchEvent(e, [\"click\", \"pointertap\", \"tap\"]);\n  }\n  _onFocus(e) {\n    if (!e.target.getAttribute(\"aria-live\")) {\n      e.target.setAttribute(\"aria-live\", \"assertive\");\n    }\n    this._dispatchEvent(e, [\"mouseover\"]);\n  }\n  _onFocusOut(e) {\n    if (!e.target.getAttribute(\"aria-live\")) {\n      e.target.setAttribute(\"aria-live\", \"polite\");\n    }\n    this._dispatchEvent(e, [\"mouseout\"]);\n  }\n  _onKeyDown(e) {\n    if (e.keyCode !== KEY_CODE_TAB) {\n      return;\n    }\n    this.activate();\n  }\n  _onMouseMove(e) {\n    if (e.movementX === 0 && e.movementY === 0) {\n      return;\n    }\n    this.deactivate();\n  }\n  destroy() {\n    this.destroyTouchHook();\n    this.div = null;\n    globalThis.document.removeEventListener(\"mousemove\", this._onMouseMove, true);\n    globalThis.removeEventListener(\"keydown\", this._onKeyDown);\n    this.pool = null;\n    this.children = null;\n    this.renderer = null;\n  }\n}\nAccessibilityManager.extension = {\n  name: \"accessibility\",\n  type: [ExtensionType.RendererPlugin, ExtensionType.CanvasRendererPlugin]\n};\nextensions.add(AccessibilityManager);\nexport { AccessibilityManager };","map":{"version":3,"mappings":"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","names":["DisplayObject","mixin","accessibleTarget","KEY_CODE_TAB","DIV_TOUCH_SIZE","DIV_TOUCH_POS_X","DIV_TOUCH_POS_Y","DIV_TOUCH_ZINDEX","DIV_HOOK_SIZE","DIV_HOOK_POS_X","DIV_HOOK_POS_Y","DIV_HOOK_ZINDEX","AccessibilityManager","constructor","renderer","debug","_isActive","_isMobileAccessibility","pool","renderId","children","androidUpdateCount","androidUpdateFrequency","_hookDiv","utils","isMobile","tablet","phone","createTouchHook","div","document","createElement","style","width","height","position","top","left","zIndex","toString","_onKeyDown","bind","_onMouseMove","globalThis","addEventListener","isActive","isMobileAccessibility","hookDiv","backgroundColor","title","activate","destroyTouchHook","body","appendChild","removeChild","removeEventListener","on","update","view","parentNode","deactivate","off","updateAccessibleObjects","displayObject","visible","accessibleChildren","accessible","interactive","_accessibleActive","addChild","i","length","now","performance","android","device","renderingToScreen","lastObjectRendered","x","y","getBoundingClientRect","viewWidth","viewHeight","resolution","sx","sy","child","removeItems","_accessibleDiv","push","hitArea","wt","worldTransform","tx","a","ty","d","getBounds","capHitArea","accessibleTitle","getAttribute","accessibleHint","setAttribute","tabIndex","updateDebugHTML","innerHTML","type","pop","borderStyle","navigator","userAgent","toLowerCase","includes","match","_onClick","_onFocus","_onFocusOut","pointerEvents","accessiblePointerEvents","accessibleType","_dispatchEvent","e","target","boundry","events","rootBoundary","event","Object","assign","FederatedEvent","rootTarget","forEach","type2","dispatchEvent","keyCode","movementX","movementY","destroy","extension","name","ExtensionType","RendererPlugin","CanvasRendererPlugin","extensions","add"],"sources":["../src/AccessibilityManager.ts"],"sourcesContent":["import { extensions, ExtensionType, utils } from '@pixi/core';\nimport { DisplayObject } from '@pixi/display';\nimport { FederatedEvent } from '@pixi/events';\nimport { accessibleTarget } from './accessibleTarget';\n\nimport type { ExtensionMetadata, IRenderer, Rectangle } from '@pixi/core';\nimport type { Container } from '@pixi/display';\nimport type { IAccessibleHTMLElement } from './accessibleTarget';\n\n// add some extra variables to the container..\nDisplayObject.mixin(accessibleTarget);\n\nconst KEY_CODE_TAB = 9;\n\nconst DIV_TOUCH_SIZE = 100;\nconst DIV_TOUCH_POS_X = 0;\nconst DIV_TOUCH_POS_Y = 0;\nconst DIV_TOUCH_ZINDEX = 2;\n\nconst DIV_HOOK_SIZE = 1;\nconst DIV_HOOK_POS_X = -1000;\nconst DIV_HOOK_POS_Y = -1000;\nconst DIV_HOOK_ZINDEX = 2;\n\n/**\n * The Accessibility manager recreates the ability to tab and have content read by screen readers.\n * This is very important as it can possibly help people with disabilities access PixiJS content.\n *\n * A DisplayObject can be made accessible just like it can be made interactive. This manager will map the\n * events as if the mouse was being used, minimizing the effort required to implement.\n *\n * An instance of this class is automatically created by default, and can be found at `renderer.plugins.accessibility`\n * @class\n * @memberof PIXI\n */\nexport class AccessibilityManager\n{\n    /** @ignore */\n    static extension: ExtensionMetadata = {\n        name: 'accessibility',\n        type: [\n            ExtensionType.RendererPlugin,\n            ExtensionType.CanvasRendererPlugin,\n        ],\n    };\n\n    /** Setting this to true will visually show the divs. */\n    public debug = false;\n\n    /**\n     * The renderer this accessibility manager works for.\n     * @type {PIXI.CanvasRenderer|PIXI.Renderer}\n     */\n    public renderer: IRenderer;\n\n    /** Internal variable, see isActive getter. */\n    private _isActive = false;\n\n    /** Internal variable, see isMobileAccessibility getter. */\n    private _isMobileAccessibility = false;\n\n    /** Button element for handling touch hooks. */\n    private _hookDiv: HTMLElement;\n\n    /** This is the dom element that will sit over the PixiJS element. This is where the div overlays will go. */\n    private div: HTMLElement;\n\n    /** A simple pool for storing divs. */\n    private pool: IAccessibleHTMLElement[] = [];\n\n    /** This is a tick used to check if an object is no longer being rendered. */\n    private renderId = 0;\n\n    /** The array of currently active accessible items. */\n    private children: DisplayObject[] = [];\n\n    /** Count to throttle div updates on android devices. */\n    private androidUpdateCount = 0;\n\n    /**  The frequency to update the div elements. */\n    private androidUpdateFrequency = 500; // 2fps\n\n    /**\n     * @param {PIXI.CanvasRenderer|PIXI.Renderer} renderer - A reference to the current renderer\n     */\n    constructor(renderer: IRenderer)\n    {\n        this._hookDiv = null;\n\n        if (utils.isMobile.tablet || utils.isMobile.phone)\n        {\n            this.createTouchHook();\n        }\n\n        // first we create a div that will sit over the PixiJS element. This is where the div overlays will go.\n        const div = document.createElement('div');\n\n        div.style.width = `${DIV_TOUCH_SIZE}px`;\n        div.style.height = `${DIV_TOUCH_SIZE}px`;\n        div.style.position = 'absolute';\n        div.style.top = `${DIV_TOUCH_POS_X}px`;\n        div.style.left = `${DIV_TOUCH_POS_Y}px`;\n        div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n\n        this.div = div;\n        this.renderer = renderer;\n\n        /**\n         * pre-bind the functions\n         * @type {Function}\n         * @private\n         */\n        this._onKeyDown = this._onKeyDown.bind(this);\n\n        /**\n         * pre-bind the functions\n         * @type {Function}\n         * @private\n         */\n        this._onMouseMove = this._onMouseMove.bind(this);\n\n        // let listen for tab.. once pressed we can fire up and show the accessibility layer\n        globalThis.addEventListener('keydown', this._onKeyDown, false);\n    }\n\n    /**\n     * Value of `true` if accessibility is currently active and accessibility layers are showing.\n     * @member {boolean}\n     * @readonly\n     */\n    get isActive(): boolean\n    {\n        return this._isActive;\n    }\n\n    /**\n     * Value of `true` if accessibility is enabled for touch devices.\n     * @member {boolean}\n     * @readonly\n     */\n    get isMobileAccessibility(): boolean\n    {\n        return this._isMobileAccessibility;\n    }\n\n    /**\n     * Creates the touch hooks.\n     * @private\n     */\n    private createTouchHook(): void\n    {\n        const hookDiv = document.createElement('button');\n\n        hookDiv.style.width = `${DIV_HOOK_SIZE}px`;\n        hookDiv.style.height = `${DIV_HOOK_SIZE}px`;\n        hookDiv.style.position = 'absolute';\n        hookDiv.style.top = `${DIV_HOOK_POS_X}px`;\n        hookDiv.style.left = `${DIV_HOOK_POS_Y}px`;\n        hookDiv.style.zIndex = DIV_HOOK_ZINDEX.toString();\n        hookDiv.style.backgroundColor = '#FF0000';\n        hookDiv.title = 'select to enable accessibility for this content';\n\n        hookDiv.addEventListener('focus', () =>\n        {\n            this._isMobileAccessibility = true;\n            this.activate();\n            this.destroyTouchHook();\n        });\n\n        document.body.appendChild(hookDiv);\n        this._hookDiv = hookDiv;\n    }\n\n    /**\n     * Destroys the touch hooks.\n     * @private\n     */\n    private destroyTouchHook(): void\n    {\n        if (!this._hookDiv)\n        {\n            return;\n        }\n        document.body.removeChild(this._hookDiv);\n        this._hookDiv = null;\n    }\n\n    /**\n     * Activating will cause the Accessibility layer to be shown.\n     * This is called when a user presses the tab key.\n     * @private\n     */\n    private activate(): void\n    {\n        if (this._isActive)\n        {\n            return;\n        }\n\n        this._isActive = true;\n\n        globalThis.document.addEventListener('mousemove', this._onMouseMove, true);\n        globalThis.removeEventListener('keydown', this._onKeyDown, false);\n\n        this.renderer.on('postrender', this.update, this);\n        this.renderer.view.parentNode?.appendChild(this.div);\n    }\n\n    /**\n     * Deactivating will cause the Accessibility layer to be hidden.\n     * This is called when a user moves the mouse.\n     * @private\n     */\n    private deactivate(): void\n    {\n        if (!this._isActive || this._isMobileAccessibility)\n        {\n            return;\n        }\n\n        this._isActive = false;\n\n        globalThis.document.removeEventListener('mousemove', this._onMouseMove, true);\n        globalThis.addEventListener('keydown', this._onKeyDown, false);\n\n        this.renderer.off('postrender', this.update);\n        this.div.parentNode?.removeChild(this.div);\n    }\n\n    /**\n     * This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.\n     * @private\n     * @param {PIXI.Container} displayObject - The DisplayObject to check.\n     */\n    private updateAccessibleObjects(displayObject: Container): void\n    {\n        if (!displayObject.visible || !displayObject.accessibleChildren)\n        {\n            return;\n        }\n\n        if (displayObject.accessible && displayObject.interactive)\n        {\n            if (!displayObject._accessibleActive)\n            {\n                this.addChild(displayObject);\n            }\n\n            displayObject.renderId = this.renderId;\n        }\n\n        const children = displayObject.children;\n\n        if (children)\n        {\n            for (let i = 0; i < children.length; i++)\n            {\n                this.updateAccessibleObjects(children[i] as Container);\n            }\n        }\n    }\n\n    /**\n     * Before each render this function will ensure that all divs are mapped correctly to their DisplayObjects.\n     * @private\n     */\n    private update(): void\n    {\n        /* On Android default web browser, tab order seems to be calculated by position rather than tabIndex,\n        *  moving buttons can cause focus to flicker between two buttons making it hard/impossible to navigate,\n        *  so I am just running update every half a second, seems to fix it.\n        */\n        const now = performance.now();\n\n        if (utils.isMobile.android.device && now < this.androidUpdateCount)\n        {\n            return;\n        }\n\n        this.androidUpdateCount = now + this.androidUpdateFrequency;\n\n        if (!this.renderer.renderingToScreen)\n        {\n            return;\n        }\n\n        // update children...\n        if (this.renderer.lastObjectRendered)\n        {\n            this.updateAccessibleObjects(this.renderer.lastObjectRendered as Container);\n        }\n\n        const { x, y, width, height } = this.renderer.view.getBoundingClientRect();\n        const { width: viewWidth, height: viewHeight, resolution } = this.renderer;\n\n        const sx = (width / viewWidth) * resolution;\n        const sy = (height / viewHeight) * resolution;\n\n        let div = this.div;\n\n        div.style.left = `${x}px`;\n        div.style.top = `${y}px`;\n        div.style.width = `${viewWidth}px`;\n        div.style.height = `${viewHeight}px`;\n\n        for (let i = 0; i < this.children.length; i++)\n        {\n            const child = this.children[i];\n\n            if (child.renderId !== this.renderId)\n            {\n                child._accessibleActive = false;\n\n                utils.removeItems(this.children, i, 1);\n                this.div.removeChild(child._accessibleDiv);\n                this.pool.push(child._accessibleDiv);\n                child._accessibleDiv = null;\n\n                i--;\n            }\n            else\n            {\n                // map div to display..\n                div = child._accessibleDiv;\n                let hitArea = child.hitArea as Rectangle;\n                const wt = child.worldTransform;\n\n                if (child.hitArea)\n                {\n                    div.style.left = `${(wt.tx + (hitArea.x * wt.a)) * sx}px`;\n                    div.style.top = `${(wt.ty + (hitArea.y * wt.d)) * sy}px`;\n\n                    div.style.width = `${hitArea.width * wt.a * sx}px`;\n                    div.style.height = `${hitArea.height * wt.d * sy}px`;\n                }\n                else\n                {\n                    hitArea = child.getBounds();\n\n                    this.capHitArea(hitArea);\n\n                    div.style.left = `${hitArea.x * sx}px`;\n                    div.style.top = `${hitArea.y * sy}px`;\n\n                    div.style.width = `${hitArea.width * sx}px`;\n                    div.style.height = `${hitArea.height * sy}px`;\n\n                    // update button titles and hints if they exist and they've changed\n                    if (div.title !== child.accessibleTitle && child.accessibleTitle !== null)\n                    {\n                        div.title = child.accessibleTitle;\n                    }\n                    if (div.getAttribute('aria-label') !== child.accessibleHint\n                        && child.accessibleHint !== null)\n                    {\n                        div.setAttribute('aria-label', child.accessibleHint);\n                    }\n                }\n\n                // the title or index may have changed, if so lets update it!\n                if (child.accessibleTitle !== div.title || child.tabIndex !== div.tabIndex)\n                {\n                    div.title = child.accessibleTitle;\n                    div.tabIndex = child.tabIndex;\n                    if (this.debug) this.updateDebugHTML(div);\n                }\n            }\n        }\n\n        // increment the render id..\n        this.renderId++;\n    }\n\n    /**\n     * private function that will visually add the information to the\n     * accessability div\n     * @param {HTMLElement} div -\n     */\n    public updateDebugHTML(div: IAccessibleHTMLElement): void\n    {\n        div.innerHTML = `type: ${div.type}</br> title : ${div.title}</br> tabIndex: ${div.tabIndex}`;\n    }\n\n    /**\n     * Adjust the hit area based on the bounds of a display object\n     * @param {PIXI.Rectangle} hitArea - Bounds of the child\n     */\n    public capHitArea(hitArea: Rectangle): void\n    {\n        if (hitArea.x < 0)\n        {\n            hitArea.width += hitArea.x;\n            hitArea.x = 0;\n        }\n\n        if (hitArea.y < 0)\n        {\n            hitArea.height += hitArea.y;\n            hitArea.y = 0;\n        }\n\n        const { width: viewWidth, height: viewHeight } = this.renderer;\n\n        if (hitArea.x + hitArea.width > viewWidth)\n        {\n            hitArea.width = viewWidth - hitArea.x;\n        }\n\n        if (hitArea.y + hitArea.height > viewHeight)\n        {\n            hitArea.height = viewHeight - hitArea.y;\n        }\n    }\n\n    /**\n     * Adds a DisplayObject to the accessibility manager\n     * @private\n     * @param {PIXI.DisplayObject} displayObject - The child to make accessible.\n     */\n    private addChild<T extends DisplayObject>(displayObject: T): void\n    {\n        //    this.activate();\n\n        let div = this.pool.pop();\n\n        if (!div)\n        {\n            div = document.createElement('button');\n\n            div.style.width = `${DIV_TOUCH_SIZE}px`;\n            div.style.height = `${DIV_TOUCH_SIZE}px`;\n            div.style.backgroundColor = this.debug ? 'rgba(255,255,255,0.5)' : 'transparent';\n            div.style.position = 'absolute';\n            div.style.zIndex = DIV_TOUCH_ZINDEX.toString();\n            div.style.borderStyle = 'none';\n\n            // ARIA attributes ensure that button title and hint updates are announced properly\n            if (navigator.userAgent.toLowerCase().includes('chrome'))\n            {\n                // Chrome doesn't need aria-live to work as intended; in fact it just gets more confused.\n                div.setAttribute('aria-live', 'off');\n            }\n            else\n            {\n                div.setAttribute('aria-live', 'polite');\n            }\n\n            if (navigator.userAgent.match(/rv:.*Gecko\\//))\n            {\n                // FireFox needs this to announce only the new button name\n                div.setAttribute('aria-relevant', 'additions');\n            }\n            else\n            {\n                // required by IE, other browsers don't much care\n                div.setAttribute('aria-relevant', 'text');\n            }\n\n            div.addEventListener('click', this._onClick.bind(this));\n            div.addEventListener('focus', this._onFocus.bind(this));\n            div.addEventListener('focusout', this._onFocusOut.bind(this));\n        }\n\n        // set pointer events\n        div.style.pointerEvents = displayObject.accessiblePointerEvents;\n        // set the type, this defaults to button!\n        div.type = displayObject.accessibleType;\n\n        if (displayObject.accessibleTitle && displayObject.accessibleTitle !== null)\n        {\n            div.title = displayObject.accessibleTitle;\n        }\n        else if (!displayObject.accessibleHint\n                 || displayObject.accessibleHint === null)\n        {\n            div.title = `displayObject ${displayObject.tabIndex}`;\n        }\n\n        if (displayObject.accessibleHint\n            && displayObject.accessibleHint !== null)\n        {\n            div.setAttribute('aria-label', displayObject.accessibleHint);\n        }\n\n        if (this.debug) this.updateDebugHTML(div);\n\n        displayObject._accessibleActive = true;\n        displayObject._accessibleDiv = div;\n        div.displayObject = displayObject;\n\n        this.children.push(displayObject);\n        this.div.appendChild(displayObject._accessibleDiv);\n        displayObject._accessibleDiv.tabIndex = displayObject.tabIndex;\n    }\n\n    /**\n     * Dispatch events with the EventSystem.\n     * @param e\n     * @param type\n     * @private\n     */\n    private _dispatchEvent(e: UIEvent, type: string[]): void\n    {\n        const { displayObject: target } = e.target as IAccessibleHTMLElement;\n        const boundry = this.renderer.events.rootBoundary;\n        const event: FederatedEvent = Object.assign(new FederatedEvent(boundry), { target });\n\n        boundry.rootTarget = this.renderer.lastObjectRendered as DisplayObject;\n        type.forEach((type) => boundry.dispatchEvent(event, type));\n    }\n\n    /**\n     * Maps the div button press to pixi's EventSystem (click)\n     * @private\n     * @param {MouseEvent} e - The click event.\n     */\n    private _onClick(e: MouseEvent): void\n    {\n        this._dispatchEvent(e, ['click', 'pointertap', 'tap']);\n    }\n\n    /**\n     * Maps the div focus events to pixi's EventSystem (mouseover)\n     * @private\n     * @param {FocusEvent} e - The focus event.\n     */\n    private _onFocus(e: FocusEvent): void\n    {\n        if (!(e.target as Element).getAttribute('aria-live'))\n        {\n            (e.target as Element).setAttribute('aria-live', 'assertive');\n        }\n\n        this._dispatchEvent(e, ['mouseover']);\n    }\n\n    /**\n     * Maps the div focus events to pixi's EventSystem (mouseout)\n     * @private\n     * @param {FocusEvent} e - The focusout event.\n     */\n    private _onFocusOut(e: FocusEvent): void\n    {\n        if (!(e.target as Element).getAttribute('aria-live'))\n        {\n            (e.target as Element).setAttribute('aria-live', 'polite');\n        }\n\n        this._dispatchEvent(e, ['mouseout']);\n    }\n\n    /**\n     * Is called when a key is pressed\n     * @private\n     * @param {KeyboardEvent} e - The keydown event.\n     */\n    private _onKeyDown(e: KeyboardEvent): void\n    {\n        if (e.keyCode !== KEY_CODE_TAB)\n        {\n            return;\n        }\n\n        this.activate();\n    }\n\n    /**\n     * Is called when the mouse moves across the renderer element\n     * @private\n     * @param {MouseEvent} e - The mouse event.\n     */\n    private _onMouseMove(e: MouseEvent): void\n    {\n        if (e.movementX === 0 && e.movementY === 0)\n        {\n            return;\n        }\n\n        this.deactivate();\n    }\n\n    /** Destroys the accessibility manager */\n    public destroy(): void\n    {\n        this.destroyTouchHook();\n        this.div = null;\n\n        globalThis.document.removeEventListener('mousemove', this._onMouseMove, true);\n        globalThis.removeEventListener('keydown', this._onKeyDown);\n\n        this.pool = null;\n        this.children = null;\n        this.renderer = null;\n    }\n}\n\nextensions.add(AccessibilityManager);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}