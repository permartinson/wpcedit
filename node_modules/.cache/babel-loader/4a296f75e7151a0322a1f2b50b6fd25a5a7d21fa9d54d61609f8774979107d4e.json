{"ast":null,"code":"import { ExtensionType, settings, extensions } from '@pixi/core';\nimport '../../loader/index.mjs';\nimport { loadTextures } from '../../loader/parsers/textures/loadTextures.mjs';\nconst resolveTextureUrl = {\n  extension: ExtensionType.ResolveParser,\n  test: loadTextures.test,\n  parse: value => ({\n    resolution: parseFloat(settings.RETINA_PREFIX.exec(value)?.[1] ?? \"1\"),\n    format: value.split(\".\").pop(),\n    src: value\n  })\n};\nextensions.add(resolveTextureUrl);\nexport { resolveTextureUrl };","map":{"version":3,"mappings":";;;AAKO,MAAMA,iBAAoB;EAC7BC,WAAWC,aAAc;EACzBC,MAAMC,YAAa;EACnBC,OAAQC,KACH;IACGC,YAAYC,WAAWC,QAAS,eAAcC,KAAKJ,KAAK,IAAI,MAAM,GAAG;IACrEK,MAAQ,QAAMC,KAAM,IAAG,EAAEC,GAAI;IAC7BC,GAAK;EAAA,CACT;AACR;AAEAC,WAAWC,IAAIhB,iBAAiB","names":["resolveTextureUrl","extension","ExtensionType","test","loadTextures","parse","value","resolution","parseFloat","settings","exec","format","split","pop","src","extensions","add"],"sources":["../../../src/resolver/parsers/resolveTextureUrl.ts"],"sourcesContent":["import { extensions, ExtensionType, settings } from '@pixi/core';\nimport { loadTextures } from '../../loader';\n\nimport type { ResolveAsset, ResolveURLParser } from '../types';\n\nexport const resolveTextureUrl = {\n    extension: ExtensionType.ResolveParser,\n    test: loadTextures.test,\n    parse: (value: string): ResolveAsset =>\n        ({\n            resolution: parseFloat(settings.RETINA_PREFIX.exec(value)?.[1] ?? '1'),\n            format: value.split('.').pop(),\n            src: value,\n        }),\n} as ResolveURLParser;\n\nextensions.add(resolveTextureUrl);\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}