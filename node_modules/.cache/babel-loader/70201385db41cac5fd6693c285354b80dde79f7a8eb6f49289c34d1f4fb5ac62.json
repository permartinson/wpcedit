{"ast":null,"code":"import { defineStore } from 'pinia';\nimport { WPCEdit } from 'wpcedit';\nexport const useWpcEditStore = defineStore('wpcEditStore', {\n  state: () => {\n    return {\n      romIsLoaded: false,\n      viewTitle: 'WPC Edit',\n      isAtHomeView: true\n    };\n  },\n  getters: {\n    maxFullFrameIndex: state => {\n      console.log(state);\n      return 1000; //TEMP! Get value from ROM!\n    }\n  },\n\n  actions: {\n    loadRom(data) {\n      WPCEdit.init();\n      WPCEdit.rom = data;\n      this.romIsLoaded = true;\n    },\n    getFullFrameImageAt(index) {\n      WPCEdit.fullFrameImage.index = index;\n      return WPCEdit.fullFrameImage.plane;\n    },\n    getSpriteAt(table, index) {\n      WPCEdit.variableSizedImage.table = table;\n      WPCEdit.variableSizedImage.index = index;\n      return WPCEdit.variableSizedImage.plane;\n    }\n  }\n});","map":{"version":3,"names":["defineStore","WPCEdit","useWpcEditStore","state","romIsLoaded","viewTitle","isAtHomeView","getters","maxFullFrameIndex","console","log","actions","loadRom","data","init","rom","getFullFrameImageAt","index","fullFrameImage","plane","getSpriteAt","table","variableSizedImage"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/src/stores/wpcEditStore.js"],"sourcesContent":["import { defineStore } from 'pinia';\nimport { WPCEdit } from 'wpcedit';\n\nexport const useWpcEditStore = defineStore('wpcEditStore', {\n    state: () => {\n        return {\n            romIsLoaded: false,\n            viewTitle: 'WPC Edit',\n            isAtHomeView: true\n        }\n    },\n    getters: {\n        maxFullFrameIndex: (state) => {\n            console.log(state);\n            return 1000; //TEMP! Get value from ROM!\n        },\n    },\n    actions: {\n        loadRom(data) {\n            WPCEdit.init();\n            WPCEdit.rom = data;\n            this.romIsLoaded = true;\n        },\n        getFullFrameImageAt(index) {\n            WPCEdit.fullFrameImage.index = index;\n            return WPCEdit.fullFrameImage.plane;\n        },\n        getSpriteAt(table,index) {\n            WPCEdit.variableSizedImage.table = table;\n            WPCEdit.variableSizedImage.index = index;\n            return WPCEdit.variableSizedImage.plane;\n        }\n    }\n})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,OAAO,QAAQ,SAAS;AAEjC,OAAO,MAAMC,eAAe,GAAGF,WAAW,CAAC,cAAc,EAAE;EACvDG,KAAK,EAAE,MAAM;IACT,OAAO;MACHC,WAAW,EAAE,KAAK;MAClBC,SAAS,EAAE,UAAU;MACrBC,YAAY,EAAE;IAClB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,iBAAiB,EAAGL,KAAK,IAAK;MAC1BM,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;MAClB,OAAO,IAAI,CAAC,CAAC;IACjB;EACJ,CAAC;;EACDQ,OAAO,EAAE;IACLC,OAAO,CAACC,IAAI,EAAE;MACVZ,OAAO,CAACa,IAAI,EAAE;MACdb,OAAO,CAACc,GAAG,GAAGF,IAAI;MAClB,IAAI,CAACT,WAAW,GAAG,IAAI;IAC3B,CAAC;IACDY,mBAAmB,CAACC,KAAK,EAAE;MACvBhB,OAAO,CAACiB,cAAc,CAACD,KAAK,GAAGA,KAAK;MACpC,OAAOhB,OAAO,CAACiB,cAAc,CAACC,KAAK;IACvC,CAAC;IACDC,WAAW,CAACC,KAAK,EAACJ,KAAK,EAAE;MACrBhB,OAAO,CAACqB,kBAAkB,CAACD,KAAK,GAAGA,KAAK;MACxCpB,OAAO,CAACqB,kBAAkB,CAACL,KAAK,GAAGA,KAAK;MACxC,OAAOhB,OAAO,CAACqB,kBAAkB,CAACH,KAAK;IAC3C;EACJ;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}