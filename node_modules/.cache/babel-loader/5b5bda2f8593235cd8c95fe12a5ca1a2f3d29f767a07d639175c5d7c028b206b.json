{"ast":null,"code":"import { DmdDecoder } from \"./DmdDecoder.js\";\nimport { DataTypes } from \"../resources/Constants.js\";\nimport { VariableSizedImageData } from \"../stores/VariableSizedImageData.js\";\nexport class VariableSizedImage {\n  static init() {\n    if (VariableSizedImage.instance) {\n      return this.instance;\n    }\n    this.instance = new VariableSizedImage();\n    return this.instance;\n  }\n  constructor() {\n    VariableSizedImageData.init();\n  }\n  prev(steps) {\n    DmdDecoder.decodePreviousIndex(steps, DataTypes.FontData);\n  }\n  next(steps) {\n    DmdDecoder.decodeNextIndex(steps, DataTypes.FontData);\n  }\n  set index(index) {\n    VariableSizedImageData.CurrentImageIndex = Math.max(0, VariableSizedImageData.maxImageIndex);\n  }\n  get index() {\n    return VariableSizedImageData.CurrentImageIndex;\n  }\n  set table(index) {\n    VariableSizedImageData.CurrentTableIndex = Math.max(0, VariableSizedImageData.maxTableIndex);\n  }\n  get table() {\n    return VariableSizedImageData.CurrentTableIndex;\n  }\n  get plane() {\n    VariableSizedImage._getCurrent();\n    return VariableSizedImage.currentPlane;\n  }\n  static _getCurrent() {\n    DmdDecoder.decodeVariableSizedImageIndexToPlane(VariableSizedImageData.CurrentTableIndex, VariableSizedImageData.CurrentImageIndex);\n    DmdDecoder.decodeVariableSizedImageData();\n    VariableSizedImage.currentPlane.image = VariableSizedImageData.Planes.Plane0.Plane_Data;\n    VariableSizedImage.currentPlane.mask = VariableSizedImageData.Planes.Plane0.Plane_Skipped;\n  }\n}\nVariableSizedImage.currentPlane = {\n  width: 0,\n  height: 0,\n  image: new Uint8Array(),\n  mask: new Uint8Array(),\n  xOffset: 0,\n  yOffset: 0\n};","map":{"version":3,"names":["DmdDecoder","DataTypes","VariableSizedImageData","VariableSizedImage","init","instance","constructor","prev","steps","decodePreviousIndex","FontData","next","decodeNextIndex","index","CurrentImageIndex","Math","max","maxImageIndex","table","CurrentTableIndex","maxTableIndex","plane","_getCurrent","currentPlane","decodeVariableSizedImageIndexToPlane","decodeVariableSizedImageData","image","Planes","Plane0","Plane_Data","mask","Plane_Skipped","width","height","Uint8Array","xOffset","yOffset"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/node_modules/wpcedit/dist/classes/VariableSizedImage.js"],"sourcesContent":["import { DmdDecoder } from \"./DmdDecoder.js\";\nimport { DataTypes } from \"../resources/Constants.js\";\nimport { VariableSizedImageData } from \"../stores/VariableSizedImageData.js\";\nexport class VariableSizedImage {\n    static init() {\n        if (VariableSizedImage.instance) {\n            return this.instance;\n        }\n        this.instance = new VariableSizedImage();\n        return this.instance;\n    }\n    constructor() {\n        VariableSizedImageData.init();\n    }\n    prev(steps) {\n        DmdDecoder.decodePreviousIndex(steps, DataTypes.FontData);\n    }\n    next(steps) {\n        DmdDecoder.decodeNextIndex(steps, DataTypes.FontData);\n    }\n    set index(index) {\n        VariableSizedImageData.CurrentImageIndex = Math.max(0, VariableSizedImageData.maxImageIndex);\n    }\n    get index() {\n        return VariableSizedImageData.CurrentImageIndex;\n    }\n    set table(index) {\n        VariableSizedImageData.CurrentTableIndex = Math.max(0, VariableSizedImageData.maxTableIndex);\n    }\n    get table() {\n        return VariableSizedImageData.CurrentTableIndex;\n    }\n    get plane() {\n        VariableSizedImage._getCurrent();\n        return VariableSizedImage.currentPlane;\n    }\n    static _getCurrent() {\n        DmdDecoder.decodeVariableSizedImageIndexToPlane(VariableSizedImageData.CurrentTableIndex, VariableSizedImageData.CurrentImageIndex);\n        DmdDecoder.decodeVariableSizedImageData();\n        VariableSizedImage.currentPlane.image = VariableSizedImageData.Planes.Plane0.Plane_Data;\n        VariableSizedImage.currentPlane.mask = VariableSizedImageData.Planes.Plane0.Plane_Skipped;\n    }\n}\nVariableSizedImage.currentPlane = {\n    width: 0,\n    height: 0,\n    image: new Uint8Array,\n    mask: new Uint8Array,\n    xOffset: 0,\n    yOffset: 0\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,sBAAsB,QAAQ,qCAAqC;AAC5E,OAAO,MAAMC,kBAAkB,CAAC;EAC5B,OAAOC,IAAI,GAAG;IACV,IAAID,kBAAkB,CAACE,QAAQ,EAAE;MAC7B,OAAO,IAAI,CAACA,QAAQ;IACxB;IACA,IAAI,CAACA,QAAQ,GAAG,IAAIF,kBAAkB,EAAE;IACxC,OAAO,IAAI,CAACE,QAAQ;EACxB;EACAC,WAAW,GAAG;IACVJ,sBAAsB,CAACE,IAAI,EAAE;EACjC;EACAG,IAAI,CAACC,KAAK,EAAE;IACRR,UAAU,CAACS,mBAAmB,CAACD,KAAK,EAAEP,SAAS,CAACS,QAAQ,CAAC;EAC7D;EACAC,IAAI,CAACH,KAAK,EAAE;IACRR,UAAU,CAACY,eAAe,CAACJ,KAAK,EAAEP,SAAS,CAACS,QAAQ,CAAC;EACzD;EACA,IAAIG,KAAK,CAACA,KAAK,EAAE;IACbX,sBAAsB,CAACY,iBAAiB,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEd,sBAAsB,CAACe,aAAa,CAAC;EAChG;EACA,IAAIJ,KAAK,GAAG;IACR,OAAOX,sBAAsB,CAACY,iBAAiB;EACnD;EACA,IAAII,KAAK,CAACL,KAAK,EAAE;IACbX,sBAAsB,CAACiB,iBAAiB,GAAGJ,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEd,sBAAsB,CAACkB,aAAa,CAAC;EAChG;EACA,IAAIF,KAAK,GAAG;IACR,OAAOhB,sBAAsB,CAACiB,iBAAiB;EACnD;EACA,IAAIE,KAAK,GAAG;IACRlB,kBAAkB,CAACmB,WAAW,EAAE;IAChC,OAAOnB,kBAAkB,CAACoB,YAAY;EAC1C;EACA,OAAOD,WAAW,GAAG;IACjBtB,UAAU,CAACwB,oCAAoC,CAACtB,sBAAsB,CAACiB,iBAAiB,EAAEjB,sBAAsB,CAACY,iBAAiB,CAAC;IACnId,UAAU,CAACyB,4BAA4B,EAAE;IACzCtB,kBAAkB,CAACoB,YAAY,CAACG,KAAK,GAAGxB,sBAAsB,CAACyB,MAAM,CAACC,MAAM,CAACC,UAAU;IACvF1B,kBAAkB,CAACoB,YAAY,CAACO,IAAI,GAAG5B,sBAAsB,CAACyB,MAAM,CAACC,MAAM,CAACG,aAAa;EAC7F;AACJ;AACA5B,kBAAkB,CAACoB,YAAY,GAAG;EAC9BS,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,CAAC;EACTP,KAAK,EAAE,IAAIQ,UAAU;EACrBJ,IAAI,EAAE,IAAII,UAAU;EACpBC,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}