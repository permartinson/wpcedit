{"ast":null,"code":"import { DataParser } from \"classes/DataParser.js\";\nimport { Settings } from \"stores/Settings.js\";\nimport { VariableSizedImageData } from \"stores/VariableSizedImageData.js\";\nimport { FullFrameImageData } from \"stores/FullFrameImageData.js\";\nimport { VariableSizedImage } from \"classes/VariableSizedImage.js\";\nimport { FullFrameImage } from \"classes/FullFrameImage.js\";\nimport { ROM } from \"stores/ROM.js\";\nimport { DataTypes } from \"resources/Constants.js\";\nimport { Checksum } from \"classes/Checksum.js\";\nexport class WPCEdit {\n  constructor(mode = 1) {\n    Settings.DataType = mode;\n    Settings.init();\n    FullFrameImageData.init();\n    VariableSizedImageData.init();\n  }\n  static init(mode = 1) {\n    if (WPCEdit.instance) {\n      return this.instance;\n    }\n    this.instance = new WPCEdit(mode);\n    return this.instance;\n  }\n  static reloadData() {\n    VariableSizedImageData.CurrentImageIndex = 0;\n    VariableSizedImageData.CurrentTableIndex = 0;\n    VariableSizedImageData.maxImageIndex = 0;\n    VariableSizedImageData.maxTableIndex = 0;\n    VariableSizedImageData.minImageIndex = 0;\n    VariableSizedImageData.minTableIndex = 0;\n    if (DataParser.initTableAddrs(DataTypes.FontData) != 0) {\n      console.warn(\"Could not determine data table location in ROM image\");\n    }\n    FullFrameImageData.CurrentImageIndex = 0;\n    if (DataParser.preAnalyzeVariableSizedImageTable() == -1) {\n      console.warn(\"Error from DataParser.preAnalyzeVariableSizedImageTable()\");\n      return false;\n    }\n    VariableSizedImageData.CurrentTableIndex = VariableSizedImageData.minTableIndex;\n    VariableSizedImageData.CurrentImageIndex = DataParser.getFirstImageIndex(VariableSizedImageData.CurrentTableIndex);\n    if (VariableSizedImageData.CurrentImageIndex == -1) {\n      console.warn(\"Error setting up first image index\");\n      return false;\n    }\n    if (FullFrameImageData.TableAddress != 0) {}\n    return true;\n  }\n  static setRom(data) {\n    ROM.data = data;\n    if (this.reloadData()) {\n      return true;\n    } else {\n      console.warn(\"Error loading game rom.\");\n      return false;\n    }\n  }\n  static set rom(data) {\n    this.setRom(data);\n  }\n  static get verbose() {\n    return Settings.VerboseMode;\n  }\n  static set verbose(state) {\n    Settings.VerboseMode = state;\n  }\n  static mergeImages(img1, img2, mask) {\n    const imageSize = Math.min(img1.length, img2.length, mask.length);\n    let mergedImage = new Uint8Array(imageSize);\n    let i;\n    for (i = 0; i < imageSize; i++) {\n      if (mask[i] == 0xFF) {\n        mergedImage[i] = img1[i];\n      } else {\n        mergedImage[i] = img2[i];\n      }\n    }\n    return mergedImage;\n  }\n}\nWPCEdit.fullFrameImage = FullFrameImage.init();\nWPCEdit.variableSizedImage = VariableSizedImage.init();\nWPCEdit.checksum = Checksum;\n;","map":{"version":3,"names":["DataParser","Settings","VariableSizedImageData","FullFrameImageData","VariableSizedImage","FullFrameImage","ROM","DataTypes","Checksum","WPCEdit","constructor","mode","DataType","init","instance","reloadData","CurrentImageIndex","CurrentTableIndex","maxImageIndex","maxTableIndex","minImageIndex","minTableIndex","initTableAddrs","FontData","console","warn","preAnalyzeVariableSizedImageTable","getFirstImageIndex","TableAddress","setRom","data","rom","verbose","VerboseMode","state","mergeImages","img1","img2","mask","imageSize","Math","min","length","mergedImage","Uint8Array","i","fullFrameImage","variableSizedImage","checksum"],"sources":["/Users/permartinson/Documents/GitHub/wpcedit-vue/node_modules/wpcedit/dist/src/WPCEdit.js"],"sourcesContent":["import { DataParser } from \"classes/DataParser.js\";\nimport { Settings } from \"stores/Settings.js\";\nimport { VariableSizedImageData } from \"stores/VariableSizedImageData.js\";\nimport { FullFrameImageData } from \"stores/FullFrameImageData.js\";\nimport { VariableSizedImage } from \"classes/VariableSizedImage.js\";\nimport { FullFrameImage } from \"classes/FullFrameImage.js\";\nimport { ROM } from \"stores/ROM.js\";\nimport { DataTypes } from \"resources/Constants.js\";\nimport { Checksum } from \"classes/Checksum.js\";\nexport class WPCEdit {\n    constructor(mode = 1) {\n        Settings.DataType = mode;\n        Settings.init();\n        FullFrameImageData.init();\n        VariableSizedImageData.init();\n    }\n    static init(mode = 1) {\n        if (WPCEdit.instance) {\n            return this.instance;\n        }\n        this.instance = new WPCEdit(mode);\n        return this.instance;\n    }\n    static reloadData() {\n        VariableSizedImageData.CurrentImageIndex = 0;\n        VariableSizedImageData.CurrentTableIndex = 0;\n        VariableSizedImageData.maxImageIndex = 0;\n        VariableSizedImageData.maxTableIndex = 0;\n        VariableSizedImageData.minImageIndex = 0;\n        VariableSizedImageData.minTableIndex = 0;\n        if (DataParser.initTableAddrs(DataTypes.FontData) != 0) {\n            console.warn(\"Could not determine data table location in ROM image\");\n        }\n        FullFrameImageData.CurrentImageIndex = 0;\n        if (DataParser.preAnalyzeVariableSizedImageTable() == -1) {\n            console.warn(\"Error from DataParser.preAnalyzeVariableSizedImageTable()\");\n            return false;\n        }\n        VariableSizedImageData.CurrentTableIndex = VariableSizedImageData.minTableIndex;\n        VariableSizedImageData.CurrentImageIndex = DataParser.getFirstImageIndex(VariableSizedImageData.CurrentTableIndex);\n        if (VariableSizedImageData.CurrentImageIndex == -1) {\n            console.warn(\"Error setting up first image index\");\n            return false;\n        }\n        if (FullFrameImageData.TableAddress != 0) {\n        }\n        return true;\n    }\n    static setRom(data) {\n        ROM.data = data;\n        if (this.reloadData()) {\n            return true;\n        }\n        else {\n            console.warn(\"Error loading game rom.\");\n            return false;\n        }\n    }\n    static set rom(data) {\n        this.setRom(data);\n    }\n    static get verbose() {\n        return Settings.VerboseMode;\n    }\n    static set verbose(state) {\n        Settings.VerboseMode = state;\n    }\n    static mergeImages(img1, img2, mask) {\n        const imageSize = Math.min(img1.length, img2.length, mask.length);\n        let mergedImage = new Uint8Array(imageSize);\n        let i;\n        for (i = 0; i < imageSize; i++) {\n            if (mask[i] == 0xFF) {\n                mergedImage[i] = img1[i];\n            }\n            else {\n                mergedImage[i] = img2[i];\n            }\n        }\n        return mergedImage;\n    }\n}\nWPCEdit.fullFrameImage = FullFrameImage.init();\nWPCEdit.variableSizedImage = VariableSizedImage.init();\nWPCEdit.checksum = Checksum;\n;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}