;
;	Symbol file for all WPC pinball machines
;	========================================
;
;   Last edited: 02nd January 2005
;

;=============================================================================
;
;	Symbol file syntax
;	~~~~~~~~~~~~~~~~~~
;
;	A symbol file may contain the following commands:
;
;	Define the CPU type (type dasmx -l for full list of cpu types)
;		cpu 6800 | 6502 | Z80 | 8048 ...
;
;	Define origin start address for code/data image
;		org <address>
;
;	Define a symbol corresponding to a value (usually an address)
;		symbol <value> <name>
;
;	Define a location that contains a word pointing to a code entry
;	(for example, the reset entry point)
;		vector <address> <vector name> [<destination name>]
;
;	Define a table of vectors (i.e. a jump table) of length <count>
;	Each vector will be used as a code entry point if threading is used.
;		vectab <address> <name> [<count>]
;
;	Define a code entry point (for code threading)
;		code <address> [<name>]
;
;	Define a single data byte, or <count> length array of bytes
;		byte <address> <name> [<count>]
;
;	Define a single data word, or <count> length array of words
;		word <address> <name> [<count>]
;
;	Define a table of addresses, which point to data, of length <count>
;		addrtab <address> <name> [<count>]
;
;	Define a single data character, or <count> length string of chars
;		string <address> <name> [<count>]
;
;	Skip <count> length bytes from disassembly and listing
;		skip <address> <count>
;
;	+ additional commands (see DASMx documentation for details)
;
;	All commands must occupy a single line.  Blank lines are ignored.
;	The ';' character starts a comment - all remaining characters on a
;	a line are ignored.  Number values may be given in decimal (default),
;	octal or hex using standard C conventions (e.g. 0x prefix for hex).
;
;	The rest of this file serves as a practical example of how these
;	commands may be used.
;

;=============================================================================
;
;	General WPC definitions
;

; RAM ($0000 - $17FF, $1800 - $1FFF is overlayed by CMOS)
symbol	0x0000	l_0000_RAMBase

; CMOS ($1800 - $1FFF)
symbol	0x1800	l_1800_CMOSBase


; Hardware ($2000 - $3FFF)
symbol	0x2000	l_2000_HardwareBase


; Bank
symbol	0x4000	l_4000_BankBase


; System
symbol	0x8000	l_8000_SystemBase
